{"remainingRequest":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\src\\pages\\Bookings\\BlockingsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\src\\pages\\Bookings\\BlockingsView.vue","mtime":1594308451986},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vSelect from 'vue-select';\r\nimport DatePicker from 'vue2-datepicker';\r\nimport Vue from 'vue';\r\nimport moment from 'moment';\r\nconst { Messenger } = window;\r\n\r\n/* eslint-disable */\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\n\r\nexport default {\r\n  name: 'FormValidation',\r\n  components: { Widget,vSelect,DatePicker },\r\n  data() {\r\n    return {\r\n       blockingId: this.$route.params.blockingId,\r\n      data:{\r\n        \r\n       date:'',\r\n       branch:'',\r\n       session:'',\r\n       time:'',\r\n       capacity:''\r\n      },\r\n        start_time:'',\r\n        end_time:'',\r\n      locationClasses: 'messenger-fixed messenger-on-top messenger-on-right',\r\n      isLoading:false,\r\n      allMembersInfo:[],      \r\n    };\r\n  },\r\n  methods: {\r\n    addToList(){\r\n      var time = this.data.time;\r\n      var capacity  = this.data.capacity;\r\n       this.data.time = '';\r\n      this.data.capacity = 0;\r\n     return this.data.session[time] = parseInt(capacity);\r\n     \r\n\r\n\r\n    },\r\n      navigateToList(){\r\n        this.$router.push({name:'BlockedListing'});\r\n    },\r\n    deleteBlock() {\r\n       var self = this;\r\n      self.axios.delete('http://localhost:8000/blocked_sessions/'+this.blockingId)\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                return self.navigateToList();\r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n          \r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n                 return Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                  self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true});                \r\n                });   \r\n\r\n    },\r\n\r\n    async getBlocking() {\r\n    \r\n  try {\r\n   const response = await this.axios.get('http://localhost:8000/blocked_sessions/'+ this.blockingId)\r\n   \r\n   this.data.branch = response.data.sessionInfo[0].branch;\r\n   this.data.date = response.data.sessionInfo[0].date;\r\n\r\n this.data.session = response.data.sessionInfo[0].session;\r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n  },\r\n  created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n   mounted(){\r\n     this.getBlocking();\r\n     \r\n  \r\n      \r\n   },\r\n};\r\n",{"version":3,"sources":["BlockingsView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA","file":"BlockingsView.vue","sourceRoot":"src\\pages\\Bookings","sourcesContent":["<template>\r\n  <div>\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\">YOU ARE HERE</li>\r\n   <li class=\"breadcrumb-item active\">View Block #{{blockingId}}</li>\r\n    </ol>\r\n\r\n\r\n    <b-row>\r\n\r\n      <b-col lg='8' xs='12'>\r\n        <Widget\r\n          title=\"<h5>        \r\n            <small> Fill up & click Submit</small>\r\n          </h5>\"\r\n          customHeader \r\n        >\r\n          <b-form >\r\n            <fieldset>\r\n              <legend>\r\n               \r\n              </legend>\r\n\r\n                   <b-form-group\r\n                  label=\"Date\"\r\n                  label-for=\"description\"\r\n                  description=\"\"\r\n                >\r\n     <input type=\"text\" placeholder=\"Start\" v-model=\"data.date\"  class=\"form-control\" disabled>\r\n                  </b-form-group>\r\n\r\n                <b-form-group\r\n                  label=\"Branch\"\r\n                >\r\n           \r\n                  <v-select\r\n                        \r\n                    v-model=\"data.branch\"\r\n                    disabled\r\n                  :options=\"['TTDI', 'Ampang','Jalan Kuching','Bangi']\"\r\n              \r\n                  />\r\n        </b-form-group>\r\n       \r\n              <p>Blocked / Reduced Capacity List</p>\r\n       {{data.session}}\r\n\r\n            </fieldset>\r\n        \r\n          </b-form>\r\n\r\n           <b-button type=\"button\" variant=\"warning\" class=\"btn-rounded\" @click=\"deleteBlock()\">\r\n       DELETE BLOCK\r\n        </b-button> \r\n        </Widget>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vSelect from 'vue-select';\r\nimport DatePicker from 'vue2-datepicker';\r\nimport Vue from 'vue';\r\nimport moment from 'moment';\r\nconst { Messenger } = window;\r\n\r\n/* eslint-disable */\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\n\r\nexport default {\r\n  name: 'FormValidation',\r\n  components: { Widget,vSelect,DatePicker },\r\n  data() {\r\n    return {\r\n       blockingId: this.$route.params.blockingId,\r\n      data:{\r\n        \r\n       date:'',\r\n       branch:'',\r\n       session:'',\r\n       time:'',\r\n       capacity:''\r\n      },\r\n        start_time:'',\r\n        end_time:'',\r\n      locationClasses: 'messenger-fixed messenger-on-top messenger-on-right',\r\n      isLoading:false,\r\n      allMembersInfo:[],      \r\n    };\r\n  },\r\n  methods: {\r\n    addToList(){\r\n      var time = this.data.time;\r\n      var capacity  = this.data.capacity;\r\n       this.data.time = '';\r\n      this.data.capacity = 0;\r\n     return this.data.session[time] = parseInt(capacity);\r\n     \r\n\r\n\r\n    },\r\n      navigateToList(){\r\n        this.$router.push({name:'BlockedListing'});\r\n    },\r\n    deleteBlock() {\r\n       var self = this;\r\n      self.axios.delete('http://localhost:8000/blocked_sessions/'+this.blockingId)\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                return self.navigateToList();\r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n          \r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n                 return Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                  self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true});                \r\n                });   \r\n\r\n    },\r\n\r\n    async getBlocking() {\r\n    \r\n  try {\r\n   const response = await this.axios.get('http://localhost:8000/blocked_sessions/'+ this.blockingId)\r\n   \r\n   this.data.branch = response.data.sessionInfo[0].branch;\r\n   this.data.date = response.data.sessionInfo[0].date;\r\n\r\n this.data.session = response.data.sessionInfo[0].session;\r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n  },\r\n  created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n   mounted(){\r\n     this.getBlocking();\r\n     \r\n  \r\n      \r\n   },\r\n};\r\n</script>\r\n"]}]}