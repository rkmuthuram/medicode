/*!
 * tree-helper v1.0.5
 * phphe <phphe@outlook.com> (https://github.com/phphe)
 * https://github.com/phphe/tree-helper.git
 * Released under the MIT License.
 */

!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(n.treeHelper=n.treeHelper||{})}(this,function(n){"use strict";function e(n){return"[object Array]"===Object.prototype.toString.call(n)}function r(n,e){for(var r,t=0;(r=n.indexOf(e))>-1;)n.splice(r,1),t++;return t}function t(n){if(Array.isArray(n)){for(var e=0,r=Array(n.length);e<n.length;e++)r[e]=n[e];return r}return Array.from(n)}function i(n){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"children",t=void 0;return e(n)?t=n.map(function(n){return i(n)}):(t=Object.assign({},n),t[r]&&(t[r]=i(t[r]))),t}function o(n,r){var t,i,o,f=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children";return e(n)?(t=n,i=null):(t=[n],i=null),t&&(o=function(n,e){for(var t in n){var i=n[t];if(!1===r(i,t,e))return!1;if(null!=i[f]&&!1===o(i[f],i))return!1}return!0})(t,i),n}function f(n,r){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children",i=arguments[3],o=e(n)?n:[n],f=function(){};try{!function n(e,o){i&&(e=e.slice(),e.reverse());for(var c=e.length,l=0;l<c;l++){var u=e[l],a=r(u,l,o);if(!1===a)throw new f;if("skip children"!==a){if("skip siblings"===a)break;null!=u[t]&&n(u[t],u)}}}(o)}catch(n){if(!(n instanceof f))throw n}}function c(n,r){var i=(arguments.length>2&&void 0!==arguments[2]&&arguments[2],arguments[3]),o=e(n)?n:[n],f=o.map(function(n,e){return{item:n,index:e}});i&&f.reverse();for(;f.length;){var c=function(){var n=f.shift(),e=n.item,o=n.index,c=n.parent,l=r(e,o,c);if(!1===l)return{v:void 0};if("skip children"===l)return"continue";if("skip siblings"===l&&(f=f.filter(function(n){return n.parent!==c})),e.children){var u,a=e.children;i&&(a=a.slice(),a.reverse());var d=a.map(function(n,r){return{item:n,index:r,parent:e}});(u=f).push.apply(u,t(d))}}();switch(c){case"continue":continue;default:if("object"===(void 0===c?"undefined":v(c)))return c.v}}}function l(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"parent";n[i]&&r(n[i][t],n),n[i]=e}function u(n,e,r){return n.forEach(function(t){return t.children=n.filter(function(n){return n[r]===t[e]})}),n.filter(function(n){return null==n[r]})}function a(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"parent";if(n!==e){var o=e[i][t],f=o.indexOf(e);o[f-1]!==n&&(n[i]===e[i]?(r(o,n),f=o.indexOf(e)):l(n,e[i]),o.splice(f,0,n))}}function d(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"parent";if(n!==e){var o=e[i],f=o[t],c=f.indexOf(e);f[c+1]!==n&&(n[i]===e[i]?(r(f,n),c=f.indexOf(e)):l(n,e[i]),f.splice(c+1,0,n))}}function p(n,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children";arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(n===e)throw"can't prepend to self";var t=e[r];t[0]!==n&&(l(n,e),t.splice(0,0,n))}function h(n,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"children";arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(n===e)throw"can't append to self";var t=e[r];t[t.length-1]!==n&&(l(n,e),t.push(n))}"function"==typeof Symbol&&Symbol.iterator;try{global}catch(n){window}var v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};n.clone=i,n.forIn=o,n.depthFirstSearch=f,n.breadthFirstSearch=c,n.getTreeDataFromFlat=u,n.insertBefore=a,n.insertAfter=d,n.prependTo=p,n.appendTo=h,Object.defineProperty(n,"__esModule",{value:!0})});
//# sourceMappingURL=tree-helper.min.js.map