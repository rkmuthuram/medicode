{"remainingRequest":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\thread-loader\\dist\\cjs.js!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Medicine\\MedicineUpdate.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Medicine\\MedicineUpdate.vue","mtime":1603778830443},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1591157760290},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\sunrisers\\\\medicode\\\\medicode\\\\adminPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\n\nimport Widget from '@/components/Widget/Widget';\nimport vSelect from 'vue-select';\nimport vue2Dropzone from 'vue2-dropzone';\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\nvar _window = window,\n    Messenger = _window.Messenger;\n/* eslint-disable */\n\nfunction initializationMessengerCode() {\n  (function () {\n    var $,\n        FlatMessage,\n        spinner_template,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    $ = jQuery;\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\n\n    FlatMessage = function (_super) {\n      __extends(FlatMessage, _super);\n\n      function FlatMessage() {\n        return FlatMessage.__super__.constructor.apply(this, arguments);\n      }\n\n      FlatMessage.prototype.template = function (opts) {\n        var $message;\n        $message = FlatMessage.__super__.template.apply(this, arguments);\n        $message.append($(spinner_template));\n        return $message;\n      };\n\n      return FlatMessage;\n    }(Messenger.Message);\n\n    Messenger.themes.air = {\n      Message: FlatMessage\n    };\n  }).call(window);\n}\n/* eslint-enable */\n\n\nexport default {\n  name: 'FormValidation',\n  components: {\n    Widget: Widget,\n    vSelect: vSelect,\n    vueDropzone: vue2Dropzone\n  },\n  data: function data() {\n    return {\n      packingTypes: [],\n      manufacturerTypes: [],\n      data: {\n        company_name: '',\n        product_category: '',\n        manufacturer: '',\n        product_name: '',\n        ingredient: '',\n        color: '',\n        packing_type: '',\n        packing_quantity: '',\n        manufacturer_barcode: '',\n        internal_barcode: ''\n      },\n      medicineId: this.$route.params.medicineId,\n      isLoading: false,\n      locationClasses: 'messenger-fixed messenger-on-top messenger-on-right'\n    };\n  },\n  methods: {\n    getManufacturerTypes: function () {\n      var _getManufacturerTypes = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.axios.get('https://backend.medicodesolution.com/development/manufacturerTypes');\n\n              case 3:\n                response = _context.sent;\n                this.manufacturerTypes = ['Favorex (Switzerland) / Thailand', 'Duopharma / Malaysia', 'Sanofi Aventis / France', 'Prime / Malaysia', 'Beaufour-Ipsen / France', 'Abbott / USA', 'DHA / Singapore', 'Pharmaniaga / Malaysia', 'Atlantic / Thailand', 'Arab Pharma / Jordan', 'Sanofi Aventis / UK', 'Aspen / Sweden', 'Glenmark / India', 'Galenium / Indonesia', 'GlaxoSmithKline / Philippines', 'Leo / Denmark', 'Hoe / Malaysia', 'GluStitch / Canada', 'Takeda / Germany', 'Novartis / Switzerland', 'Abbott / Australia', 'Pahang Pharmacy / Malaysia', 'Aspen / Holland', 'Pfizer / Belgium', 'LBS / Thailand', 'Bayer / Mexico', 'KRKA / Slovenia', 'Shin Poong / Korea', 'MSD / Belgium', 'LBS /  Thailand', 'Sandoz / Austria', 'Roche / Switzerland', 'Novartis / Italy', 'Serum Institute / India', 'Sanofi Pasteur / France', 'Japan BCG Lab / Japan', 'GlaxoSmithKline / Belgium', 'MSD / USA', 'Sanofi Pasteur / Korea', 'Abbott / Holland', 'GlaxoSmithKline / Italy', 'Pfizer / USA', 'Pfizer / Australia', 'Aspen / Australia', 'Aspen / France', 'Boehringer Ingelheim / Canada', 'Boehringer Ingelheim / Germany', 'GlaxoSmithKline / UK', 'AstraZeneca / Sweden', 'Cipla / India', 'GlaxoSmithKline / France', 'GlaxoSmithKline / Spain', 'GlaxoSmithKline / Australia', 'Abbott / Pakistan', 'Johnson & Johnson / Sweden', 'Roche / Germany', 'Roche / USA', 'Intercare / Korea', 'Johnson & Johnson / USA', 'Acro / USA', 'Allen Healthcare Products / Malaysi', 'Pahang Pharmacy / China', 'Becton Dickinson / USA', 'Intercare / Malaysia', 'Schmidt / China', 'Intercare / China', 'Xepa / Malaysia', 'Reckitt Benckiser / UK', 'Janssen / Belgium', 'Kotra / Malaysia', 'Sunward / Malaysia', 'iNova/India', 'iNova/Italy', 'iNova/Australia', 'Rowa / Ireland', 'DDD / UK', 'Reckitt Benckiser / Thailand', 'Biosis / Malaysia', 'MPI / Malaysia', 'CCM/DUOPHARMA/Malaysia', 'Prime/Malaysia', 'Hovid / Malaysia', 'Pfizer / UK', 'Menarini / Thailand', 'Torrent / India', 'Abbott / Malaysia', 'Sanofi Aventis / Italy', 'CCM/DUOPHARMA / Malaysia', 'Intas /  India', 'Eisai / Japan', 'Ranbaxy / Malaysia', 'Apotex / Canada', 'GlaxoSmithKline / China', 'Abbott / France', 'Abbott / Japan', 'DHA / Indonesia', 'Mayoly Spindler / France', 'Janssen / France', 'Sunward / Singapore', 'Sanofi Aventis / Germany', 'Meda / Germany', 'Kabi / Austria', 'Remedica/Cyprus', 'Biosis/Malaysia', 'Merck / Germany', 'Novo Nordisk / Denmark', 'Servier / France', 'Astra Zeneca / USA', 'Alphapharm / Australia', 'Actavis / Greece', 'Bayer / Germany', 'Merck / France', 'Merck  / France', 'MSD / Italy', 'Unam / Philippines', 'Pharmaton / Switzerland', 'Procter & Gamble / Austria', 'Pharmaton / Germany', 'Sanofi Aventis / Thailand', 'Pfizer / China', 'Novartis / UK', 'null', 'Abbott / Indonesia', 'Procter & Gamble / Indonesia', 'Reckitt Benkinser / UK', 'Actavis / Malta', 'Sandoz / India', 'Sanofi Aventis / Spain', 'Daiichi / Japan', 'Actavis / UK', 'Topridge / China', 'Aspen / Germany', 'SM Pharma / Malaysia', 'Janssen / Italy', 'Himalaya / India', 'Sanofi Aventis / Canada', 'AstraZeneca / Philippines', 'Roche / Italy', 'AstraZeneca / China', 'Menarini / UK', 'AstraZeneca / UK', 'Intas / India', 'Sandoz / Slovenia', 'Tanabe / Japan', 'Tanabe / Indonesia', 'Medochemie / Cyprus', 'Menarini / Sweden', 'Servier / Ireland', 'MSD / UK', 'MSD / Korea', 'Novartis / Spain', 'Sandoz / Iceland', 'Xepa  / Malaysia', 'Xepa /  Malaysia', 'SanofiAventis / Turkey', 'Boehringer Ingelheim / India', 'Sanofi Aventis/Czechoslavakia', 'AstraZeneca / USA', 'Pfizer / Ireland', 'Sanofi Aventis / Czechoslavakia', 'MSD / Singapore', 'GlaxoSmithKline / Switzerland', 'Rohto-Mentholatum / Australia', 'MSD / Canada', 'GlaxoSmithKline / Philipines', 'Galderma / USA', 'Reckitt Benckiser / Singapore', 'Sanofi Aventis / Vietnam', 'GlaxoSmithKline / Poland', 'Tena / Holland', 'Merz / Germany', 'Smith & Nephew / UK', 'Menarini / Switzerland', 'GlaxoSmithKline / Ireland', 'Almirall / Germany', 'Pfizer / Canada', 'Lilly / USA', 'GlaxoSmithKline / Germany', 'MSD / Australia', 'Shire / Italy', 'MSD / Holland', 'Bayer  / Germany', 'Gedeon Richter / Hungary', 'Remedica / Cyprus', 'Bayer / France', 'Pfizer / Italy', 'Bayer / Brazil', 'MSD / Ireland', 'Actavis / Singapore', 'Sandoz / Romania', 'Sandoz / Bangladesh', 'Ranbaxy/India', 'Pfizer / France', 'Abbott / UK', 'CCM/DUOPHARMA Duopharma / Malaysia', 'Hovid / Turkey', 'Pfizer / Japan', 'Unichem / India', 'Ain Medicare / Malaysia', 'B.Braun / Malaysia', 'Novartis / Turkey', 'Pfizer/ USA', 'Sandoz / Germany', 'Atnahs / Spain', 'Atnahs/Spain', 'Mylan / Ireland', 'Rohto-Mentholatum / China', 'Macro Phar / Thailand', 'Menarini / Italy', 'Actavis / Indonesia', 'iNova / India', 'Takeda / Thailand', 'Takeda / Spain', 'MSD / Spain', 'Walter Ritter / Germany', 'Medochemie/Cyprus', 'Cadila / India', 'Janssen / Korea', 'Pfizer / Germany', 'Zim Lab / India', 'GlaxoSmithKline / Malaysia', 'Boehringer Ingelheim/Italy', 'Boehringer Ingelheim/UK', 'Boehringer Ingelheim / UK', 'Sandoz / Turkey', 'AstraZeneca / Australia', 'Bayer / Belgium', 'Bayer/ Belgium', 'Sanofi Aventis / USA', 'Sanofi Aventis / Brazil', 'Mylan / Portugal', 'Bayer / Indonesia', 'Procter & Gamble / Germany', 'Alcon / Belgium', 'Alcon Cusi / Spain', 'Alcon / France', 'SMPharma / Malaysia', 'OM / Switzerland', 'Ursapharm / Germany', 'Pfizer / Indonesia', 'Madras Pharma / India', 'Prime / China', '3M / USA', 'Urgo / France', 'Supermax / Malaysia', 'B.Braun / Vietnam', 'Terumo / China', 'Becton Dickinson / Singapore', 'Novo Nordisk / Japan', 'Terumo / Phillipines', 'Terumo / Korea', 'Terumo / Sweden', 'Banta / USA', 'Pal / UK', 'Sunbelt USA', 'B.Braun / Germany', 'Sunbelt / USA', 'YSP'];\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function getManufacturerTypes() {\n        return _getManufacturerTypes.apply(this, arguments);\n      };\n    }(),\n    getPackingTypes: function () {\n      var _getPackingTypes = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.axios.get('https://backend.medicodesolution.com/development/packingTypes');\n\n              case 3:\n                response = _context2.sent;\n                this.packingTypes = response.data.packingTypes;\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      return function getPackingTypes() {\n        return _getPackingTypes.apply(this, arguments);\n      };\n    }(),\n    navigateToView: function navigateToView() {\n      this.$router.push({\n        name: 'MedicineListing'\n      });\n    },\n    getAccount: function () {\n      var _getAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.axios.get('https://backend.medicodesolution.com/development/medicine/' + this.medicineId);\n\n              case 3:\n                response = _context3.sent;\n                this.data = response.data.medicineInfo[0];\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(_context3.t0);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      return function getAccount() {\n        return _getAccount.apply(this, arguments);\n      };\n    }(),\n    onSubmit: function onSubmit(e) {\n      var self = this;\n      e.preventDefault();\n      self.$validator.validateAll().then(function (result) {\n        if (result) {\n          self.axios.patch('https://backend.medicodesolution.com/development/medicine/' + self.medicineId, {\n            company_name: self.data.company_name,\n            product_category: self.data.product_category,\n            manufacturer: self.data.manufacturer,\n            product_name: self.data.product_name,\n            ingredient: self.data.ingredient,\n            color: self.data.color,\n            packing_type: self.data.packing_type,\n            packing_quantity: self.data.packing_quantity,\n            manufacturer_barcode: self.data.manufacturer_barcode,\n            internal_barcode: self.data.internal_barcode,\n            internal_qrcode: self.data.internal_qrcode\n          }).then(function (response) {\n            console.log(response);\n\n            if (response.status == 200 && response.data.success) {\n              Messenger().post({\n                message: response.data.success,\n                hideAfter: 3,\n                showCloseButton: true\n              });\n              return self.navigateToView();\n            } else {\n              if (response.data.error) {\n                self.isLoading = false;\n                return Messenger().post({\n                  type: 'error',\n                  message: response.data.error,\n                  hideAfter: 3,\n                  showCloseButton: true\n                });\n              } else {\n                self.isLoading = false;\n                return Messenger().post({\n                  type: 'error',\n                  message: response.error,\n                  hideAfter: 3,\n                  showCloseButton: true\n                });\n              }\n            }\n          }).catch(function (error) {\n            self.isLoading = false;\n            return Messenger().post({\n              type: 'error',\n              message: error,\n              hideAfter: 3,\n              showCloseButton: true\n            });\n          });\n        }\n\n        if (!result) {\n          self.isLoading = false;\n          return;\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getPackingTypes();\n    this.getManufacturerTypes();\n    this.getAccount();\n  },\n  created: function created() {\n    initializationMessengerCode();\n    Messenger.options = {\n      extraClasses: this.locationClasses,\n      theme: 'air',\n      showCloseButton: true\n    };\n  }\n};",{"version":3,"sources":["MedicineUpdate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\">YOU ARE HERE</li>\r\n      <li class=\"breadcrumb-item active\">Update Medicine - {{data.product_name}}</li>\r\n    </ol>\r\n\r\n\r\n    <b-row>\r\n      <b-col lg='8' xs='12'>\r\n        <Widget\r\n          title=\"<h5>        \r\n            <small>Edit & Click Update </small>\r\n          </h5>\"\r\n          customHeader \r\n        >\r\n          <b-form @submit=\"onSubmit\">\r\n            <fieldset>\r\n              <legend>\r\n               \r\n              </legend>\r\n               <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"internalid\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n               Internal QR Code (Internal Id)\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required'\"\r\n                  name=\"internalid\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('internalid')}\"\r\n                  type=\"text\"\r\n                  disabled\r\n                v-model=\"data.internal_qrcode\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('internalid')\">\r\n                  {{ errors.first('internalid') }}\r\n                </span>\r\n              </b-form-group>\r\n                 <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"internalbar\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n               Internal Bar Code\r\n                </div>\r\n                <input\r\n             \r\n                  name=\"internalbar\"\r\n                  :class=\"{ 'form-control': true}\"\r\n                  type=\"text\"\r\n                v-model=\"data.internal_barcode\"\r\n                />\r\n            \r\n              </b-form-group>\r\n                  <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"manufacturerbar\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n              Manufacturer Bar Code\r\n                </div>\r\n                <input\r\n                  name=\"manufacturerbar\"\r\n                  :class=\"{ 'form-control': true}\"\r\n                  type=\"text\"\r\n                v-model=\"data.manufacturer_barcode\"\r\n                />\r\n                \r\n              </b-form-group>\r\n                   <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"packing_qty\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                Packing Quantity\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required'\"\r\n                  name=\"packing_qty\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('packing_qty')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.packing_quantity\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('packing_qty')\">\r\n                  {{ errors.first('packing_qty') }}\r\n                </span>\r\n              </b-form-group>\r\n\r\n\r\n               <b-form-group\r\n              label=\"Packing Type\"\r\n              label-for=\"default-select\"\r\n              :label-cols=\"3\"\r\n              description=\"\"\r\n            >\r\n             <b-row>\r\n                <b-col md='9'>\r\n                    <v-select\r\n                    taggable\r\n                        id=\"insuranceSelect2\"\r\n                        class=\"mt-xs\"\r\n                        v-model=\"data.packing_type\"\r\n                        :options=\"packingTypes\" \r\n                    />\r\n                 \r\n                </b-col>\r\n              </b-row>\r\n            </b-form-group>     \r\n\r\n     <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"product_category\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                Product Category\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:5'\"\r\n                  name=\"product_category\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('product_category')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.product_category\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('product_category')\">\r\n                  {{ errors.first('product_category') }}\r\n                </span>\r\n              </b-form-group>\r\n                  <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"product_name\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                Product Name\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:5'\"\r\n                  name=\"product_name\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('product_name')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.product_name\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('product_name')\">\r\n                  {{ errors.first('product_name') }}\r\n                </span>\r\n              </b-form-group>\r\n                <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"ingredient\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                Ingredient\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:5'\"\r\n                  name=\"ingredient\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('ingredient')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.ingredient\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('ingredient')\">\r\n                  {{ errors.first('ingredient') }}\r\n                </span>\r\n              </b-form-group>\r\n                          <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"manufacturer\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n               Manufacturer\r\n                </div>\r\n                 <b-col md='9'>\r\n                    <v-select\r\n                    taggable\r\n                        id=\"insurance\"\r\n                        class=\"mt-xs\"\r\n                        v-model=\"data.manufacturer\"\r\n                        :options=\"manufacturerTypes\" \r\n                    />\r\n                 \r\n                </b-col>\r\n              </b-form-group>\r\n                  <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"company_name\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n              Distributor\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:3'\"\r\n                  name=\"company_name\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('company_name')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.company_name\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('company_name')\">\r\n                  {{ errors.first('company_name') }}\r\n                </span>\r\n              </b-form-group>\r\n         \r\n                   <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"color\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n            Color\r\n                </div>\r\n                <input\r\n                \r\n                  name=\"color\"\r\n                  :class=\"{ 'form-control': true}\"\r\n                  type=\"text\"\r\n                v-model=\"data.color\"\r\n                />\r\n                \r\n              </b-form-group>\r\n         \r\n\r\n         \r\n\r\n\r\n\r\n            </fieldset>\r\n            <div class=\"form-action\">\r\n             \r\n              <b-button type=\"button\" variant=\"default\" class=\"btn-rounded\" @click=\"navigateToView()\" >\r\n               Back\r\n              </b-button>\r\n              <b-button type=\"submit\" variant=\"danger\" class=\"btn-rounded float-right\" v-if=\"isLoading==false\">\r\n                Update\r\n              </b-button>\r\n            </div>\r\n          </b-form>\r\n        </Widget>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vSelect from 'vue-select';\r\nimport vue2Dropzone from 'vue2-dropzone';\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\r\nconst { Messenger } = window;\r\n\r\n/* eslint-disable */\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\n\r\nexport default {\r\n  name: 'FormValidation',\r\n  components: { Widget,vSelect,vueDropzone: vue2Dropzone },\r\n  data() {\r\n    return {\r\n       packingTypes:[],\r\n         manufacturerTypes:[],\r\n        data:{\r\n         company_name:'',\r\n         product_category:'',\r\n         manufacturer:'',\r\n         product_name:'',\r\n         ingredient:'',\r\n         color:'',\r\n         packing_type:'',\r\n         packing_quantity:'',\r\n         manufacturer_barcode:'',\r\n         internal_barcode:''\r\n      },\r\n      medicineId: this.$route.params.medicineId,\r\n     isLoading:false,\r\n     locationClasses: 'messenger-fixed messenger-on-top messenger-on-right'\r\n    };\r\n  },\r\n  methods: {\r\n     async getManufacturerTypes() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/development/manufacturerTypes')\r\n   this.manufacturerTypes = ['Favorex (Switzerland) / Thailand','Duopharma / Malaysia','Sanofi Aventis / France','Prime / Malaysia','Beaufour-Ipsen / France','Abbott / USA','DHA / Singapore','Pharmaniaga / Malaysia','Atlantic / Thailand','Arab Pharma / Jordan','Sanofi Aventis / UK','Aspen / Sweden','Glenmark / India','Galenium / Indonesia','GlaxoSmithKline / Philippines','Leo / Denmark','Hoe / Malaysia','GluStitch / Canada','Takeda / Germany','Novartis / Switzerland','Abbott / Australia','Pahang Pharmacy / Malaysia','Aspen / Holland','Pfizer / Belgium','LBS / Thailand','Bayer / Mexico','KRKA / Slovenia','Shin Poong / Korea','MSD / Belgium','LBS /  Thailand','Sandoz / Austria','Roche / Switzerland','Novartis / Italy','Serum Institute / India','Sanofi Pasteur / France','Japan BCG Lab / Japan','GlaxoSmithKline / Belgium','MSD / USA','Sanofi Pasteur / Korea','Abbott / Holland','GlaxoSmithKline / Italy','Pfizer / USA','Pfizer / Australia','Aspen / Australia','Aspen / France','Boehringer Ingelheim / Canada','Boehringer Ingelheim / Germany','GlaxoSmithKline / UK','AstraZeneca / Sweden','Cipla / India','GlaxoSmithKline / France','GlaxoSmithKline / Spain','GlaxoSmithKline / Australia','Abbott / Pakistan','Johnson & Johnson / Sweden','Roche / Germany','Roche / USA','Intercare / Korea','Johnson & Johnson / USA','Acro / USA','Allen Healthcare Products / Malaysi','Pahang Pharmacy / China','Becton Dickinson / USA','Intercare / Malaysia','Schmidt / China','Intercare / China','Xepa / Malaysia','Reckitt Benckiser / UK','Janssen / Belgium','Kotra / Malaysia','Sunward / Malaysia','iNova/India','iNova/Italy','iNova/Australia','Rowa / Ireland','DDD / UK','Reckitt Benckiser / Thailand','Biosis / Malaysia','MPI / Malaysia','CCM/DUOPHARMA/Malaysia','Prime/Malaysia','Hovid / Malaysia','Pfizer / UK','Menarini / Thailand','Torrent / India','Abbott / Malaysia','Sanofi Aventis / Italy','CCM/DUOPHARMA / Malaysia','Intas /  India','Eisai / Japan','Ranbaxy / Malaysia','Apotex / Canada','GlaxoSmithKline / China','Abbott / France','Abbott / Japan','DHA / Indonesia','Mayoly Spindler / France','Janssen / France','Sunward / Singapore','Sanofi Aventis / Germany','Meda / Germany','Kabi / Austria','Remedica/Cyprus','Biosis/Malaysia','Merck / Germany','Novo Nordisk / Denmark','Servier / France','Astra Zeneca / USA','Alphapharm / Australia','Actavis / Greece','Bayer / Germany','Merck / France','Merck  / France','MSD / Italy','Unam / Philippines','Pharmaton / Switzerland','Procter & Gamble / Austria','Pharmaton / Germany','Sanofi Aventis / Thailand','Pfizer / China','Novartis / UK','null','Abbott / Indonesia','Procter & Gamble / Indonesia','Reckitt Benkinser / UK','Actavis / Malta','Sandoz / India','Sanofi Aventis / Spain','Daiichi / Japan','Actavis / UK','Topridge / China','Aspen / Germany','SM Pharma / Malaysia','Janssen / Italy','Himalaya / India','Sanofi Aventis / Canada','AstraZeneca / Philippines','Roche / Italy','AstraZeneca / China','Menarini / UK','AstraZeneca / UK','Intas / India','Sandoz / Slovenia','Tanabe / Japan','Tanabe / Indonesia','Medochemie / Cyprus','Menarini / Sweden','Servier / Ireland','MSD / UK','MSD / Korea','Novartis / Spain','Sandoz / Iceland','Xepa  / Malaysia','Xepa /  Malaysia','SanofiAventis / Turkey','Boehringer Ingelheim / India','Sanofi Aventis/Czechoslavakia','AstraZeneca / USA','Pfizer / Ireland','Sanofi Aventis / Czechoslavakia','MSD / Singapore','GlaxoSmithKline / Switzerland','Rohto-Mentholatum / Australia','MSD / Canada','GlaxoSmithKline / Philipines','Galderma / USA','Reckitt Benckiser / Singapore','Sanofi Aventis / Vietnam','GlaxoSmithKline / Poland','Tena / Holland','Merz / Germany','Smith & Nephew / UK','Menarini / Switzerland','GlaxoSmithKline / Ireland','Almirall / Germany','Pfizer / Canada','Lilly / USA','GlaxoSmithKline / Germany','MSD / Australia','Shire / Italy','MSD / Holland','Bayer  / Germany','Gedeon Richter / Hungary','Remedica / Cyprus','Bayer / France','Pfizer / Italy','Bayer / Brazil','MSD / Ireland','Actavis / Singapore','Sandoz / Romania','Sandoz / Bangladesh','Ranbaxy/India','Pfizer / France','Abbott / UK','CCM/DUOPHARMA Duopharma / Malaysia','Hovid / Turkey','Pfizer / Japan','Unichem / India','Ain Medicare / Malaysia','B.Braun / Malaysia','Novartis / Turkey','Pfizer/ USA','Sandoz / Germany','Atnahs / Spain','Atnahs/Spain','Mylan / Ireland','Rohto-Mentholatum / China','Macro Phar / Thailand','Menarini / Italy','Actavis / Indonesia','iNova / India','Takeda / Thailand','Takeda / Spain','MSD / Spain','Walter Ritter / Germany','Medochemie/Cyprus','Cadila / India','Janssen / Korea','Pfizer / Germany','Zim Lab / India','GlaxoSmithKline / Malaysia','Boehringer Ingelheim/Italy','Boehringer Ingelheim/UK','Boehringer Ingelheim / UK','Sandoz / Turkey','AstraZeneca / Australia','Bayer / Belgium','Bayer/ Belgium','Sanofi Aventis / USA','Sanofi Aventis / Brazil','Mylan / Portugal','Bayer / Indonesia','Procter & Gamble / Germany','Alcon / Belgium','Alcon Cusi / Spain','Alcon / France','SMPharma / Malaysia','OM / Switzerland','Ursapharm / Germany','Pfizer / Indonesia','Madras Pharma / India','Prime / China','3M / USA','Urgo / France','Supermax / Malaysia','B.Braun / Vietnam','Terumo / China','Becton Dickinson / Singapore','Novo Nordisk / Japan','Terumo / Phillipines','Terumo / Korea','Terumo / Sweden','Banta / USA','Pal / UK','Sunbelt USA','B.Braun / Germany','Sunbelt / USA','YSP'];\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n       async getPackingTypes() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/development/packingTypes')\r\n   this.packingTypes = response.data.packingTypes;\r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n    navigateToView(){\r\n        this.$router.push({name:'MedicineListing' });\r\n    },\r\n    async getAccount() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/development/medicine/'+ this.medicineId)\r\n   this.data= response.data.medicineInfo[0];\r\n    \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n    onSubmit(e) {\r\n       var self = this;\r\n       \r\n      e.preventDefault();\r\n    \r\n      self.$validator.validateAll().then((result) => {\r\n\t\t  if (result) {\r\n     \r\n                self.axios.patch('https://backend.medicodesolution.com/development/medicine/'+ self.medicineId, {\r\n              \r\n    company_name: self.data.company_name,\r\n         product_category:self.data.product_category,\r\n         manufacturer:self.data.manufacturer,\r\n         product_name:self.data.product_name,\r\n         ingredient:self.data.ingredient,\r\n         color:self.data.color,\r\n         packing_type:self.data.packing_type,\r\n         packing_quantity:self.data.packing_quantity,\r\n         manufacturer_barcode:self.data.manufacturer_barcode,\r\n         internal_barcode:self.data.internal_barcode,\r\n          internal_qrcode:self.data.internal_qrcode\r\n\r\n                })\r\n                .then(function (response) {\r\n                  console.log(response);\r\n                if(response.status == 200 && response.data.success){\r\n                Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                return self.navigateToView();\r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n          \r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n                 return Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                  self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true});                \r\n                });   \r\n\t\t  }\r\n                  if(!result){\r\n                    self.isLoading = false;\r\n        \t          return;\r\n                  }\r\n\t\t});\r\n    },\r\n  },\r\n   mounted(){\r\n      this.getPackingTypes();\r\n     this.getManufacturerTypes();\r\n     this.getAccount();    \r\n     \r\n   },\r\n     created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src\\pages\\Medicine"}]}