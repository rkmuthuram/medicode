{"remainingRequest":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\thread-loader\\dist\\cjs.js!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Accounts\\ClinicCheckIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Accounts\\ClinicCheckIn.vue","mtime":1599639237061},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1591157760290},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\sunrisers\\\\medicode\\\\medicode\\\\adminPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport vSelect from 'vue-select';\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\n\nimport Widget from '@/components/Widget/Widget';\nimport vue2Dropzone from 'vue2-dropzone';\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\nimport { select2CountriesData, select2ShipmentData, cardTypesData } from './data';\nimport rns from '../../assets/cards/rns.png';\nimport moment from 'moment';\nimport VueBarcode from 'vue-barcode-master';\nimport VueQrcode from 'vue-qrcode-master';\nvar _window = window,\n    Messenger = _window.Messenger;\n\nfunction initializationMessengerCode() {\n  (function () {\n    var $,\n        FlatMessage,\n        spinner_template,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    $ = jQuery;\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\n\n    FlatMessage = function (_super) {\n      __extends(FlatMessage, _super);\n\n      function FlatMessage() {\n        return FlatMessage.__super__.constructor.apply(this, arguments);\n      }\n\n      FlatMessage.prototype.template = function (opts) {\n        var $message;\n        $message = FlatMessage.__super__.template.apply(this, arguments);\n        $message.append($(spinner_template));\n        return $message;\n      };\n\n      return FlatMessage;\n    }(Messenger.Message);\n\n    Messenger.themes.air = {\n      Message: FlatMessage\n    };\n  }).call(window);\n}\n/* eslint-enable */\n\n\nexport default {\n  name: 'FormWizardPage',\n  components: {\n    Widget: Widget,\n    vSelect: vSelect,\n    vueDropzone: vue2Dropzone,\n    barcode: VueBarcode,\n    qrcode: VueQrcode\n  },\n  data: function data() {\n    return {\n      manufacturerBarcodes: [],\n      showModal: false,\n      selectedVendorInfo: {},\n      unselectedProducts: [],\n      allSelectedProducts: [],\n      unselectedBarcode: null,\n      selectedPreCheckIn: null,\n      manualSelection: {},\n      clinicId: this.$route.params.clinicId,\n      loadingWizard: false,\n      errorMsg: null,\n      count: 0,\n      isLoading: false,\n      data: {\n        vendor: '',\n        preCheckIn: '',\n        invoiceId: '',\n        totalAmount: '',\n        attachments: [],\n        comments: ''\n      },\n      accept: false,\n      progress: 1,\n      preInfo: [],\n      medicineInfo: [],\n      data2: {},\n      componentKey: 0,\n      selectedMedicine: null,\n      data3: {},\n      dropzoneOptions: {\n        url: 'https://backend.medicodesolution.com/staging/checkin/attachments/upload',\n        thumbnailWidth: 150,\n        maxFilesize: 10.0,\n        maxFiles: 3,\n        addRemoveLinks: true //autoProcessQueue: false\n\n      }\n    };\n  },\n  watch: {\n    selectedPreCheckIn: function selectedPreCheckIn(preCheckIn) {\n      this.selectedPreCheckIn.allProducts = JSON.parse(this.selectedPreCheckIn.allProducts);\n      this.getPreSelectedVendor(this.selectedPreCheckIn.vendorId);\n    }\n  },\n  methods: {\n    processManual: function processManual() {\n      var self = this;\n\n      if (self.manualSelection == null || self.manualSelection == '') {\n        return Messenger().post({\n          type: 'error',\n          message: 'Scanned barcode not tagged to any product!',\n          hideAfter: 3,\n          showCloseButton: true\n        });\n      }\n\n      var selectedIndex = self.manualSelection.Index;\n      console.log(selectedIndex);\n      self.selectedPreCheckIn.allProducts[selectedIndex].manufacturer_barcode = self.unselectedBarcode;\n\n      if (self.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity == undefined || self.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity == '') {\n        self.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity = 1;\n      } else {\n        self.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity++;\n      }\n\n      return Messenger().post({\n        message: self.selectedPreCheckIn.allProducts[selectedIndex].product_name + ' scanned!',\n        hideAfter: 3,\n        showCloseButton: true\n      });\n      console.log(self.manualSelection.Index);\n    },\n    removeFromList: function removeFromList() {\n      this.selectedMedicine = null;\n      return Messenger().post({\n        type: 'success',\n        message: 'Item removed!',\n        hideAfter: 3,\n        showCloseButton: true\n      });\n    },\n    removeFromAllProducts: function removeFromAllProducts(index) {\n      this.allSelectedProducts.splice(index);\n      return Messenger().post({\n        type: 'success',\n        message: 'Item removed!',\n        hideAfter: 3,\n        showCloseButton: true\n      });\n    },\n    addToList: function addToList() {\n      if (this.selectedMedicine.quantity == null || this.selectedMedicine.quantity == undefined || this.selectedMedicine.quantity == '') {\n        return Messenger().post({\n          type: 'error',\n          message: 'Quantity required!',\n          hideAfter: 3,\n          showCloseButton: true\n        });\n      }\n\n      this.allSelectedProducts.push(this.selectedMedicine);\n      this.selectedMedicine = null;\n      console.log(this.allSelectedProducts);\n      return Messenger().post({\n        type: 'success',\n        message: 'Item added to list!',\n        hideAfter: 3,\n        showCloseButton: true\n      });\n    },\n    getBottleValue: function getBottleValue(index) {\n      if (this.selectedPreCheckIn.allProducts[index].quantity_boxes == undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_bottleperbox == undefined || this.selectedPreCheckIn.allProducts[index].quantity_bottleperbox == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_bottleperbox = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_bottles == undefined || this.selectedPreCheckIn.allProducts[index].quantity_bottle == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_bottles = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle == undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_perbottle == undefined || this.selectedPreCheckIn.allProducts[index].quantity_perbottle == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_perbottle = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle == undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity__unitperbottle = 'ml';\n      }\n\n      this.selectedPreCheckIn.allProducts[index].quantity_bottles = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_bottleperbox);\n      this.selectedPreCheckIn.allProducts[index].quantity_unittotal = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_bottles) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_perbottle);\n      this.componentKey += 1;\n    },\n    getTubeValue: function getTubeValue(index) {\n      if (this.selectedPreCheckIn.allProducts[index].quantity_boxes == undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_tubeperbox == undefined || this.selectedPreCheckIn.allProducts[index].quantity_tubeperbox == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_tubeperbox = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_tubes == undefined || this.selectedPreCheckIn.allProducts[index].quantity_tubes == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_tubes = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_unitpertube == undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitpertube == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_unitpertube = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_pertube == undefined || this.selectedPreCheckIn.allProducts[index].quantity_pertube == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_pertube = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_unitpertube == undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitpertube == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity__unitpertube = 'g';\n      }\n\n      this.selectedPreCheckIn.allProducts[index].quantity_tubes = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_tubeperbox);\n      this.selectedPreCheckIn.allProducts[index].quantity_unittotal = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_tubes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_pertube);\n      this.componentKey += 1;\n    },\n    getAmpuleValue: function getAmpuleValue(index) {\n      if (this.selectedPreCheckIn.allProducts[index].quantity_boxes == undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_ampuleperbox == undefined || this.selectedPreCheckIn.allProducts[index].quantity_ampuleperbox == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_ampuleperbox = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_ampules == undefined || this.selectedPreCheckIn.allProducts[index].quantity_ampules == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_ampules = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_mlperampule == undefined || this.selectedPreCheckIn.allProducts[index].quantity_mlperampule == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_mlperampule = 0;\n      }\n\n      this.selectedPreCheckIn.allProducts[index].quantity_ampules = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_ampuleperbox);\n      this.componentKey += 1;\n    },\n    getWholeValue: function getWholeValue(index) {\n      if (this.selectedPreCheckIn.allProducts[index].quantity_boxes == undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_unitperbox == undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitperbox == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_unitperbox = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_units == undefined || this.selectedPreCheckIn.allProducts[index].quantity_units == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_units = 0;\n      }\n\n      this.selectedPreCheckIn.allProducts[index].quantity_units = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_unitperbox);\n      this.componentKey += 1;\n    },\n    getVialValue: function getVialValue(index) {\n      if (this.selectedPreCheckIn.allProducts[index].quantity_boxes == undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_vialsperbox == undefined || this.selectedPreCheckIn.allProducts[index].quantity_vialsperbox == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_vialsperbox = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_vials == undefined || this.selectedPreCheckIn.allProducts[index].quantity_vials == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_vials = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_mlpervial == undefined || this.selectedPreCheckIn.allProducts[index].quantity_mlpervial == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_mlpervial = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_mls == undefined || this.selectedPreCheckIn.allProducts[index].quantity_mls == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_mls = 0;\n      }\n      /* if(this.selectedPreCheckIn.allProducts[index].quantity_mlperdose==undefined || this.selectedPreCheckIn.allProducts[index].quantity_mlperdose==''){\r\n         this.selectedPreCheckIn.allProducts[index].quantity_mlperdose = 0;\r\n       }\r\n       \r\n       if(this.selectedPreCheckIn.allProducts[index].quantity_doses==undefined || this.selectedPreCheckIn.allProducts[index].quantity_doses==''){\r\n         this.selectedPreCheckIn.allProducts[index].quantity_doses = 0;\r\n       } */\n\n\n      this.selectedPreCheckIn.allProducts[index].quantity_vials = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_vialsperbox);\n      this.selectedPreCheckIn.allProducts[index].quantity_mls = Number(this.selectedPreCheckIn.allProducts[index].quantity_mlpervial * this.selectedPreCheckIn.allProducts[index].quantity_vials);\n      this.componentKey += 1;\n    },\n    getTabletValue: function getTabletValue(index) {\n      if (this.selectedPreCheckIn.allProducts[index].quantity_boxes == undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox == undefined || this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox == undefined || this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_strips == undefined || this.selectedPreCheckIn.allProducts[index].quantity_strips == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_strips = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_tabletsperstrip == undefined || this.selectedPreCheckIn.allProducts[index].quantity_tabletsperstrip == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_tabletsperstrip = 0;\n      }\n\n      if (this.selectedPreCheckIn.allProducts[index].quantity_tablets == undefined || this.selectedPreCheckIn.allProducts[index].quantity_tablets == '') {\n        this.selectedPreCheckIn.allProducts[index].quantity_tablets = 0;\n      }\n\n      this.selectedPreCheckIn.allProducts[index].quantity_strips = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox);\n      this.selectedPreCheckIn.allProducts[index].quantity_tablets = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_strips) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_tabletsperstrip);\n      this.componentKey += 1;\n    },\n    onSearch: function () {\n      var _onSearch = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(search, loading) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(escape(search) == '' || escape(search) == null || escape(search) == undefined)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.medicineInfo);\n\n              case 2:\n                loading(true);\n                _context.next = 5;\n                return this.axios.get(\"https://backend.medicodesolution.com/staging/search/medicines/\".concat(escape(search)));\n\n              case 5:\n                response = _context.sent;\n                this.medicineInfo = response.data.medicineInfo;\n                loading(false);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function onSearch(_x, _x2) {\n        return _onSearch.apply(this, arguments);\n      };\n    }(),\n    successEvent: function successEvent(file) {\n      this.data.attachments.push(file.xhr.response);\n    },\n    onComplete: function onComplete() {\n      submit();\n    },\n    setLoading: function setLoading(value) {\n      this.loadingWizard = value;\n    },\n    handleValidation: function handleValidation(isValid, tabIndex) {//    console.log('Tab: '+tabIndex+ ' valid: '+isValid)\n    },\n    handleErrorMessage: function handleErrorMessage(errorMsg) {\n      this.errorMsg = errorMsg;\n    },\n    navigateToDashboard: function navigateToDashboard() {\n      this.$router.push({\n        name: 'Dashboard'\n      });\n    },\n    validOne: function validOne() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this.selectedPreCheckIn == '' || _this.selectedPreCheckIn == null) {\n          reject('Select Pre Check In to continue..');\n        }\n\n        if (_this.data.invoiceId == '' || _this.data.invoiceId == null) {\n          reject('Key in invoice number to continue..');\n        }\n\n        if (_this.data.totalAmount == '' || _this.data.totalAmount == null) {\n          reject('Key in Total Amount (RM) to continue..');\n        }\n\n        if (_this.data.attachments.length == 0 || _this.data.attachments == null) {\n          reject('Upload Invoice to continue..');\n        } else {\n          /*   console.log('precheckin:'+this.data.preCheckIn.id+'--- invoice number:'+this.data.invoiceId+'--- total amount:'+this.data.totalAmount+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments); */\n          resolve(true);\n        }\n      });\n    },\n    validTwo: function validTwo() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var minimumProductAdded = false;\n\n        _this2.selectedPreCheckIn.allProducts.forEach(function (entry) {\n          if (entry.delivered_quantity != null && entry.delivered_quantity != undefined) {\n            minimumProductAdded = true;\n          }\n        });\n\n        if (_this2.selectedPreCheckIn == '' || _this2.selectedPreCheckIn == null) {\n          reject('Select Pre Check In to continue..');\n        }\n\n        if (_this2.data.invoiceId == '' || _this2.data.invoiceId == null) {\n          reject('Key in invoice number to continue..');\n        }\n\n        if (_this2.data.totalAmount == '' || _this2.data.totalAmount == null) {\n          reject('Key in Total Amount (RM) to continue..');\n        }\n\n        if (_this2.data.attachments.length == 0 || _this2.data.attachments == null) {\n          reject('Upload Invoice to continue..');\n        }\n\n        if (minimumProductAdded == false) {\n          reject('Add at least one product to continue..');\n        } else {\n          resolve(true);\n        }\n      });\n    },\n    getQuantityColor: function getQuantityColor(ordered, received) {\n      if (received >= ordered) {\n        return 'success';\n      } else {\n        return 'warning';\n      }\n    },\n    submit: function submit() {\n      var self = this;\n      self.isLoading = true;\n\n      if (self.accept == false) {\n        self.isLoading = false;\n        return Messenger().post({\n          type: 'error',\n          message: 'Tick confirmation checkbox to continue!',\n          hideAfter: 3,\n          showCloseButton: true\n        });\n      } //no validation\n\n\n      self.$validator.validateAll().then(function (result) {\n        if (result) {\n          self.axios.post('https://backend.medicodesolution.com/staging/checkin/submit', {\n            clinicId: self.clinicId,\n            preCheckInId: self.selectedPreCheckIn.preId,\n            invoiceId: self.data.invoiceId,\n            totalAmount: self.data.totalAmount,\n            comments: self.data.comments,\n            attachments: self.data.attachments.join(),\n            allProducts: JSON.stringify(self.selectedPreCheckIn.allProducts)\n          }).then(function (response) {\n            if (response.status == 200 && response.data.success) {\n              self.isLoading = false;\n              Messenger().post({\n                message: response.data.success,\n                hideAfter: 3,\n                showCloseButton: true\n              });\n              return self.navigateToDashboard();\n            } else {\n              if (response.data.error) {\n                self.isLoading = false;\n                Messenger().post({\n                  type: 'error',\n                  message: response.data.error,\n                  hideAfter: 3,\n                  showCloseButton: true\n                });\n                return self.navigateToDashboard();\n              } else {\n                self.isLoading = false;\n                Messenger().post({\n                  type: 'error',\n                  message: response.error,\n                  hideAfter: 3,\n                  showCloseButton: true\n                });\n                return self.navigateToDashboard();\n              }\n            }\n          }).catch(function (error) {\n            self.isLoading = false;\n            Messenger().post({\n              type: 'error',\n              message: error,\n              hideAfter: 3,\n              showCloseButton: true\n            });\n            return self.navigateToDashboard();\n          });\n        }\n\n        if (!result) {\n          self.isLoading = false;\n          return Messenger().post({\n            type: 'error',\n            message: \"Ensure Batch Number,Expiry Date & Quantity infos are correctly filled in Step 2 (Scan Products)\",\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n      });\n    },\n    getPreCheckIns: function () {\n      var _getPreCheckIns = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.axios.get('https://backend.medicodesolution.com/staging/all/precheckins/' + this.clinicId);\n\n              case 3:\n                response = _context2.sent;\n                this.preInfo = response.data.preInfo;\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      return function getPreCheckIns() {\n        return _getPreCheckIns.apply(this, arguments);\n      };\n    }(),\n    getPreSelectedVendor: function () {\n      var _getPreSelectedVendor = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(id) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.axios.get('https://backend.medicodesolution.com/staging/vendor/' + id);\n\n              case 3:\n                response = _context3.sent;\n                this.selectedVendorInfo = response.data.vendorInfo[0];\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(_context3.t0);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      return function getPreSelectedVendor(_x3) {\n        return _getPreSelectedVendor.apply(this, arguments);\n      };\n    }(),\n    getManufacturerBarcodes: function () {\n      var _getManufacturerBarcodes = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this.axios.get('https://backend.medicodesolution.com/staging/manufacturerBarcodes');\n\n              case 3:\n                response = _context4.sent;\n                this.manufacturerBarcodes = response.data.manufacturerBarcodes;\n                console.log(this.manufacturerBarcodes);\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(_context4.t0);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 8]]);\n      }));\n\n      return function getManufacturerBarcodes() {\n        return _getManufacturerBarcodes.apply(this, arguments);\n      };\n    }(),\n    onBarcodeScanned: function onBarcodeScanned(barcode) {\n      var index = 0;\n      var selectedIndex;\n      var self = this;\n      self.unselectedProducts = [];\n      this.selectedPreCheckIn.allProducts.forEach(function (entry) {\n        if (entry.manufacturer_barcode == barcode) {\n          selectedIndex = index;\n        }\n\n        if (entry.manufacturer_barcode == '' || entry.manufacturer_barcode == null || entry.manufacturer_barcode == undefined) {\n          self.unselectedProducts.push({\n            label: entry.product_name,\n            Index: index\n          });\n        }\n\n        index++;\n      });\n\n      if (selectedIndex != null && selectedIndex != undefined) {\n        if (this.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity == undefined || this.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity == '') {\n          this.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity = 1;\n        } else {\n          this.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity++;\n        }\n\n        return Messenger().post({\n          message: this.selectedPreCheckIn.allProducts[selectedIndex].product_name + ' scanned!',\n          hideAfter: 3,\n          showCloseButton: true\n        });\n      } else {\n        if (this.manufacturerBarcodes.includes(barcode)) {\n          return Messenger().post({\n            type: 'error',\n            message: 'This barcode is tagged to product not in your precheckin list. Kindly ammend your precheckin info if you wish to add this product.',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        } else {\n          this.unselectedBarcode = barcode;\n          this.showModal = true;\n          return Messenger().post({\n            type: 'error',\n            message: 'Item not found',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.getPreCheckIns();\n    this.getManufacturerBarcodes();\n  },\n  created: function created() {\n    initializationMessengerCode();\n    Messenger.options = {\n      extraClasses: this.locationClasses,\n      theme: 'air',\n      showCloseButton: true\n    };\n    this.$barcodeScanner.init(this.onBarcodeScanned);\n  }\n};",{"version":3,"sources":["ClinicCheckIn.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <b-row>\r\n    <b-col xl='8' lg='16'>\r\n      <Widget\r\n        title=\"\r\n        <div>\r\n          <h4>\r\n            New Check In&nbsp;\r\n            <small></small>\r\n          </h4>\r\n          <p class='text-muted'>Follow these 4 simple steps to complete Check In!</p>\r\n        </div>\"\r\n        customHeader  collapse\r\n      >\r\n         <form-wizard\r\n          shape=\"tab\"\r\n          color=\"#3498db\"\r\n          title=\"\"\r\n          subtitle=\"\"\r\n       @on-validate=\"handleValidation\"\r\n      \r\n                  @on-loading=\"setLoading\"\r\n                  @on-error=\"handleErrorMessage\"\r\n        >\r\n          <b-progress class=\"progress-xs\" variant=\"gray-light\" :value=\"progress\" :max=\"3\" />\r\n          <b-button slot=\"prev\" variant=\"primary\">\r\n            <i class=\"fa fa-caret-left\" /> Previous\r\n          </b-button>\r\n          <b-button slot=\"next\" variant=\"primary\">\r\n            Next <i class=\"fa fa-caret-right\" />\r\n          </b-button>\r\n          <b-button  slot=\"finish\" variant=\"success\" @click=\"submit\" v-if=\"isLoading==false\" >\r\n            Proceed  <i class=\"fa fa-check\" />\r\n          </b-button>\r\n       <!-- <tab-content title=\"Invoice Info\" :before-change=\"validOne\"> -->\r\n         <tab-content title=\"Invoice Info\" >\r\n\r\n              <b-form>\r\n              \r\n             <b-form-group\r\n                  label=\"Select Pre Check In Record\"\r\n                >\r\n           \r\n               <v-select :options=\"preInfo\"    v-model=\"selectedPreCheckIn\" label=\"orderId\" >\r\n    <template slot=\"option\" slot-scope=\"option\">\r\n        {{option.orderId}} - {{ option.vendorName}} - Created {{option.created}}\r\n    </template>\r\n  </v-select>\r\n        </b-form-group>\r\n         <b-card class=\"mb-xlg border-0\"  v-if=\"selectedPreCheckIn!=null\">\r\n          <span class=\"fw-semi-bold text-success\">Vendor : {{selectedVendorInfo.name}}</span>\r\n          <span class=\"fw-semi-bold text-muted ml-sm\">{{selectedPreCheckIn.orderId}}</span>\r\n          <hr />\r\n          <div class=\"d-flex justify-content-between mb-lg\">\r\n          \r\n            <span class=\"text-muted\"><small>Comments:  {{selectedPreCheckIn.comments}} | Attachments : {{selectedPreCheckIn.attachments}}</small></span>\r\n          </div>\r\n          <div class=\"mb-lg\">\r\n           <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"hidden-sm-down\">Num.</th>\r\n                  <th>Product Name</th>\r\n                  <th>Product Type</th>\r\n                  <th class=\"hidden-sm-down\">Brand</th>\r\n                   <th class=\"hidden-sm-down\">Color</th>\r\n                  <th class=\"\">Purchase Order Qty</th>\r\n                  \r\n                </tr>\r\n              </thead>\r\n                     <tbody>\r\n                <tr v-for=\"(product,index) in selectedPreCheckIn.allProducts\" :key=\"product.product_name\">\r\n                  <td>{{index+1}}</td>\r\n                  <td> <b-badge variant=\"success\" class=\"text-gray-dark\">{{product.product_name}}</b-badge></td>\r\n                   <td>{{product.product_category}}</td>\r\n                    <td>{{product.manufacturer}}</td>\r\n                        <td>{{product.color}}</td>\r\n                     <td v-if=\"product.packing_type=='TABLETS'\"> {{product.quantity_strips}} strips ({{product.quantity_tabletsperstrip}} per strip) | {{product.quantity_tablets}} tablets</td>\r\n                                       <td v-if=\"product.packing_type=='Vial / per cc' || product.packing_type=='Vial / per 0.5 cc' || product.packing_type=='per vial' || product.packing_type=='Per vial' || product.packing_type=='vial per cc'\"> {{product.quantity_mlpervial}} ML/vial | {{product.quantity_vials}} vials</td>\r\n                                         <td v-if=\"product.packing_type=='per ampule'\"> {{product.quantity_mlperampule}} ML/ampule | {{product.quantity_ampules}} ampules</td>\r\n                                         <td v-if=\"product.packing_type=='BOTTLE'\">  {{product.quantity_perbottle}}{{product.quantity_unitperbottle}}/bottle | {{product.quantity_bottles}} bottles | {{product.quantity_unittotal}}{{product.quantity_unitperbottle}} </td>\r\n                                            <td v-if=\"product.packing_type=='TUBE'\">  {{product.quantity_pertube}}{{product.quantity_unitpertube}}/tube | {{product.quantity_tubes}} tubes | {{product.quantity_unittotal}}{{product.quantity_unitpertube}} </td>\r\n                                             <td v-if=\"product.packing_type=='Per supp' || product.packing_type=='SACHET' || product.packing_type=='Sachet' || product.packing_type=='box' || product.packing_type=='Set' || product.packing_type=='ROLLS' || product.packing_type=='PIECES' || product.packing_type=='pack' || product.packing_type=='Diskus' \">  {{product.quantity_units}} units </td>\r\n                           \r\n                     \r\n                </tr>\r\n              </tbody>\r\n            </table> \r\n          </div>\r\n          \r\n                        \r\n        </b-card>\r\n\r\n          <b-form-group\r\n                  label=\"Invoice Number\"\r\n                >\r\n               <input\r\n                       \r\n                  name=\"invoiceId\"\r\n                  :class=\"{ 'form-control': true}\"\r\n                  type=\"text\"\r\n               v-model=\"data.invoiceId\"\r\n                />\r\n        </b-form-group>\r\n            \r\n           <b-form-group\r\n                  label=\"Total Amount (RM)\"\r\n                >\r\n               <input\r\n                \r\n                  \r\n                  name=\"totalAmount\"\r\n                  :class=\"{ 'form-control': true}\"\r\n                  type=\"number\"\r\n               v-model=\"data.totalAmount\"\r\n                />\r\n        </b-form-group> \r\n          <b-form-group>\r\n           <label for=\"myvueDropZone\">Upload Invoice </label>\r\n             <label for=\"myvueDropZone\"> *upto 3 items, max 10MB size*</label>\r\n            \r\n              <vue-dropzone ref=\"myVueDropzone\" id=\"dropzone\" :options=\"dropzoneOptions\" v-on:vdropzone-success=\"successEvent\"></vue-dropzone>\r\n       \r\n              </b-form-group>\r\n            <b-form-group\r\n                  label=\"Additional Comments (optional)\"\r\n                >\r\n              <textarea-autosize\r\n                                  v-model=\"data.comments\"\r\n                                placeholder=\"\"\r\n                                :min-height=\"45\"\r\n                               \r\n                                 \r\n                             :class=\"{ 'form-control': true}\"\r\n                                id=\"comments\"\r\n                                name=\"comments\"\r\n                                />\r\n        </b-form-group>\r\n   \r\n\r\n\r\n                \r\n              </b-form>\r\n            </tab-content>\r\n          <tab-content title=\"Scan Products\" :before-change=\"validTwo\">\r\n             \r\n            \r\n              <b-form>\r\n              \r\n                  <b-card class=\"mb-xlg border-0\"  v-if=\"selectedPreCheckIn!=null\">\r\n          <span class=\"fw-semi-bold text-success\">Vendor : {{selectedVendorInfo.name}}</span>\r\n          <span class=\"fw-semi-bold text-muted ml-sm\">#{{selectedPreCheckIn.orderId}}</span>\r\n          <hr />\r\n          <div class=\"d-flex justify-content-between mb-lg\">\r\n          \r\n            <span class=\"text-muted\"><small>Comments:  {{selectedPreCheckIn.comments}} | Attachments : {{selectedPreCheckIn.attachments}}</small></span>\r\n          </div>\r\n          <div class=\"mb-lg\">\r\n            <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"hidden-sm-down\">Num.</th>\r\n                  <th>Product Name</th>\r\n                  <th>Product Type</th>\r\n                  <th class=\"hidden-sm-down\">Brand</th>\r\n                    <th class=\"\">Color</th>\r\n                  <th class=\"\">Purchase Order Qty</th>\r\n                  <th class=\"\">Delivered Qty</th>\r\n                  <th class=\"\">Expiry Date</th>\r\n                   <th class=\"\">Batch Number</th>\r\n                  \r\n                   <th class=\"\">Manufacturer Barcode</th>\r\n                    <th class=\"\">Internal QR Code</th>\r\n                </tr>\r\n              </thead>\r\n                     <tbody>\r\n                <tr v-for=\"(product,index) in selectedPreCheckIn.allProducts\" :key=\"product.product_name\">\r\n                  <td>{{index+1}}</td>\r\n                  <td> <b-badge variant=\"success\" class=\"text-gray-dark\">{{product.product_name}}</b-badge></td>\r\n                   <td>{{product.product_category}}</td>\r\n                    <td>{{product.manufacturer}}</td>\r\n                      <td>{{product.color}}</td>\r\n                      <td v-if=\"product.packing_type=='TABLETS'\"> {{product.quantity_strips}} strips ({{product.quantity_tabletsperstrip}} per strip) | {{product.quantity_tablets}} tablets</td>\r\n                                       <td v-if=\"product.packing_type=='Vial / per cc' || product.packing_type=='Vial / per 0.5 cc' || product.packing_type=='per vial' || product.packing_type=='Per vial' || product.packing_type=='vial per cc'\"> {{product.quantity_mlpervial}} ML/vial | {{product.quantity_vials}} vials</td>\r\n                                         <td v-if=\"product.packing_type=='per ampule'\"> {{product.quantity_mlperampule}} ML/ampule | {{product.quantity_ampules}} ampules</td>\r\n                                         <td v-if=\"product.packing_type=='BOTTLE'\">  {{product.quantity_perbottle}}{{product.quantity_unitperbottle}}/bottle | {{product.quantity_bottles}} bottles | {{product.quantity_unittotal}}{{product.quantity_unitperbottle}} </td>\r\n                                            <td v-if=\"product.packing_type=='TUBE'\">  {{product.quantity_pertube}}{{product.quantity_unitpertube}}/tube | {{product.quantity_tubes}} tubes | {{product.quantity_unittotal}}{{product.quantity_unitpertube}} </td>\r\n                                             <td v-if=\"product.packing_type=='Per supp' || product.packing_type=='SACHET' || product.packing_type=='Sachet' || product.packing_type=='box' || product.packing_type=='Set' || product.packing_type=='ROLLS' || product.packing_type=='PIECES' || product.packing_type=='pack' || product.packing_type=='Diskus' \">  {{product.quantity_units}} units </td>\r\n                    \r\n\r\n\r\n                               <td>\r\n                                 <b-badge v-if=\"!product.delivered_quantity\" variant=\"danger\" class=\"text-gray-dark\">NA</b-badge>\r\n                                         <div v-if=\"product.packing_type=='TABLETS' && product.delivered_quantity>0\" :key=\"componentKey\">\r\n\r\n     <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n                  <td>       <b-form-group\r\n              label=\"Boxes\"\r\n              label-for=\"append-field\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\"  @change=\"getTabletValue(index)\"  v-model=\"product.quantity_boxes\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group></td>\r\n                  <td> <b-form-group\r\n              label=\"Strips\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field2\" append=\"per box\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getTabletValue(index)\"  v-model=\"product.quantity_stripsperbox\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>                      \r\n            </tr>\r\n                  <tr>\r\n                  \r\n                  <td>       <b-form-group\r\n              label=\"Strips\"\r\n              label-for=\"append-field3\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\"  @change=\"getTabletValue(index)\"  v-model=\"product.quantity_strips\"></b-form-input>\r\n    </b-input-group>\r\n            </b-form-group></td>\r\n                  <td> <b-form-group\r\n              label=\"Tablets\"\r\n              label-for=\"append-field4\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field4\" append=\"per strip\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\" @change=\"getTabletValue(index)\"  v-model=\"product.quantity_tabletsperstrip\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>                      \r\n            </tr>\r\n                 <tr>\r\n                  <td>       <b-form-group\r\n              label=\"Tablets\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\"   @change=\"getTabletValue(index)\"  v-model=\"product.quantity_tablets\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group></td>\r\n                                \r\n            </tr>\r\n                    \r\n                \r\n              </tbody>\r\n            </table> \r\n                 \r\n  \r\n                </div>\r\n                  <div v-if=\" product.packing_type=='Per vial' || product.packing_type=='per vial'  && product.delivered_quantity>0 \" :key=\"componentKey\">\r\n <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n                  <td>       <b-form-group\r\n              label=\"Boxes\"\r\n              label-for=\"append-field\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\" @change=\"getVialValue(index)\"  v-model=\"product.quantity_boxes\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group></td>\r\n                  <td> <b-form-group\r\n              label=\"Vial\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field2\" append=\"per box\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_vialsperbox\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td> \r\n                <td> <b-form-group\r\n              label=\"Vial\"\r\n              label-for=\"append-field3\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_vials\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>  \r\n                                      \r\n            </tr>\r\n                         <tr>\r\n                 \r\n            <td> <b-form-group\r\n              label=\"ML / CC\"\r\n              label-for=\"append-field4\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field4\" append=\"per vial\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_mlpervial\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>     \r\n              <td> <b-form-group\r\n              label=\"ML / CC\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_mls\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>     \r\n                   \r\n          <!--  <td> <b-form-group\r\n              label=\"ML / CC\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"per dose\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_mlperdose\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>      -->  \r\n         <!--   <td> <b-form-group\r\n              label=\"Doses\"\r\n              label-for=\"append-field6\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field6\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_doses\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>     -->                           \r\n            </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div>\r\n                            <div v-if=\"product.packing_type=='Vial / per cc' || product.packing_type=='Vial / per 0.5 cc' || product.packing_type=='vial per cc'  && product.delivered_quantity>0 \" :key=\"componentKey\">\r\n<table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                     <tr>\r\n                  <td>       <b-form-group\r\n              label=\"Boxes\"\r\n              label-for=\"append-field\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\" @change=\"getVialValue(index)\"  v-model=\"product.quantity_boxes\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group></td>\r\n                  <td> <b-form-group\r\n              label=\"Vial\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field2\" append=\"per box\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_vialsperbox\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td> \r\n                <td> <b-form-group\r\n              label=\"Vial\"\r\n              label-for=\"append-field3\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_vials\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>  \r\n                                      \r\n            </tr>\r\n                         <tr>\r\n                 \r\n            <td> <b-form-group\r\n              label=\"ML / CC\"\r\n              label-for=\"append-field4\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field4\" append=\"per vial\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_mlpervial\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>     \r\n              <td> <b-form-group\r\n              label=\"ML / CC\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_mls\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>     \r\n                   \r\n          <!--  <td> <b-form-group\r\n              label=\"ML / CC\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"per dose\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_mlperdose\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>      -->  \r\n         <!--   <td> <b-form-group\r\n              label=\"Doses\"\r\n              label-for=\"append-field6\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field6\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"product.quantity_doses\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>     -->                           \r\n            </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n  \r\n                </div>\r\n      <div v-if=\"product.delivered_quantity>0 && product.packing_type=='per ampule'\" :key=\"componentKey\">\r\n    <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n                  <td>       <b-form-group\r\n              label=\"Boxes\"\r\n              label-for=\"append-field\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\"  @change=\"getAmpuleValue(index)\"  v-model=\"product.quantity_boxes\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group></td>\r\n                  <td> <b-form-group\r\n              label=\"Ampules\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field2\" append=\"per box\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"   @change=\"getAmpuleValue(index)\"  v-model=\"product.quantity_ampuleperbox\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>   \r\n                       <td> <b-form-group\r\n              label=\"Ampules\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"   @change=\"getAmpuleValue(index)\"  v-model=\"product.quantity_ampules\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>      \r\n              <td> <b-form-group\r\n              label=\"ML\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"per ampule\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"   @change=\"getAmpuleValue(index)\"  v-model=\"product.quantity_mlperampule\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>                      \r\n            </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div>\r\n                        <div v-if=\"product.packing_type=='BOTTLE' && product.delivered_quantity>0\" :key=\"componentKey\">\r\n       <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n                  <td>       <b-form-group\r\n              label=\"Boxes\"\r\n              label-for=\"append-field\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\" @change=\"getBottleValue(index)\"  v-model=\"product.quantity_boxes\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group></td>\r\n                  <td> <b-form-group\r\n              label=\"Bottles\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field2\" append=\"per box\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getBottleValue(index)\"  v-model=\"product.quantity_bottleperbox\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>  </tr><tr> \r\n                       <td> <b-form-group\r\n              label=\"Bottles\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getBottleValue(index)\"  v-model=\"product.quantity_bottles\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>    \r\n                    \r\n              <td>\r\n               <v-select  \r\n                    class=\"mt-xs\"\r\n                    :options=\"['L','ml','g','mg','mcg','doses','vials']\"\r\n                      v-model=\"product.quantity_unitperbottle\" />\r\n                 <b-form-group\r\n              label=\"\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"per tube\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\" @change=\"getBottleValue(index)\"  v-model=\"product.quantity_perbottle\" ></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>                      \r\n            </tr>\r\n            <tr>\r\n               <td> <b-form-group\r\n              :label=\"product.quantity_unitperbottle\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getBottleValue(index)\"  v-model=\"product.quantity_unittotal\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>    \r\n              </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div>\r\n\r\n                 <div v-if=\"product.packing_type=='TUBE' && product.delivered_quantity>0\" :key=\"componentKey\">\r\n    <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n                  <td>       <b-form-group\r\n              label=\"Boxes\"\r\n              label-for=\"append-field\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\" @change=\"getTubeValue(index)\"  v-model=\"product.quantity_boxes\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group></td>\r\n                  <td> <b-form-group\r\n              label=\"Tubes\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field2\" append=\"per box\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getTubeValue(index)\"  v-model=\"product.quantity_tubeperbox\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>  </tr><tr> \r\n                       <td> <b-form-group\r\n              label=\"Tubes\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getTubeValue(index)\"  v-model=\"product.quantity_tubes\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>    \r\n                    \r\n              <td>\r\n               <v-select  \r\n                    class=\"mt-xs\"\r\n                    :options=\"['L','ml','g','mg','mcg','doses','vials']\"\r\n                      v-model=\"product.quantity_unitpertube\" />\r\n                 <b-form-group\r\n              label=\"\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"per tube\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\" @change=\"getTubeValue(index)\"  v-model=\"product.quantity_pertube\" ></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>                      \r\n            </tr>\r\n            <tr>\r\n               <td> <b-form-group\r\n              :label=\"product.quantity_unitpertube\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getTubeValue(index)\"  v-model=\"product.quantity_unittotal\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>    \r\n              </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div>\r\n\r\n                  <div v-if=\"product.delivered_quantity>0 && product.packing_type=='Per supp' || product.packing_type=='SACHET' || product.packing_type=='Sachet' || product.packing_type=='box' || product.packing_type=='Set' || product.packing_type=='ROLLS' || product.packing_type=='PIECES' || product.packing_type=='pack' || product.packing_type=='Diskus' \"  :key=\"componentKey\">\r\n    <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n                  <td>       <b-form-group\r\n              label=\"Boxes\"\r\n              label-for=\"append-field\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\"  @change=\"getWholeValue(index)\"  v-model=\"product.quantity_boxes\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group></td>\r\n                  <td> <b-form-group\r\n              label=\"Units\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field2\" append=\"per box\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"   @change=\"getWholeValue(index)\"  v-model=\"product.quantity_unitperbox\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>   \r\n                       <td> <b-form-group\r\n              label=\"Units\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"   @change=\"getWholeValue(index)\"  v-model=\"product.quantity_units\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>      \r\n                            \r\n            </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div> \r\n                </td>\r\n                                 <div v-if=\"product.delivered_quantity>0\">\r\n                                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required'\"\r\n                  name=\"expirydate\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('expirydate')}\"\r\n                  type=\"date\"\r\n                v-model=\"product.expiry_date\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('expirydate')\">\r\n                  {{ errors.first('expirydate') }}\r\n                </span> \r\n                </div>\r\n                               <b-badge v-if=\"!product.delivered_quantity\" variant=\"danger\" class=\"text-gray-dark\">NA</b-badge></td>\r\n                                <td>\r\n                                   <div v-if=\"product.delivered_quantity>0\">\r\n                                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required'\"\r\n                  name=\"batch_number\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('batch_number')}\"\r\n                  type=\"text\"\r\n                v-model=\"product.batch_number\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('batch_number')\">\r\n                  {{ errors.first('batch_number') }}\r\n                </span> \r\n                </div>\r\n                                  <b-badge v-if=\"!product.delivered_quantity\" variant=\"danger\" class=\"text-gray-dark\">NA</b-badge></td>\r\n                                   \r\n                                       <td><barcode v-bind:value=\"product.manufacturer_barcode\" format=\"CODE128\" :options=\"{ height:100 }\" v-if=\"product.manufacturer_barcode\">\r\n  Show this if the rendering fails.\r\n</barcode><span v-if=\"!product.manufacturer_barcode\">No record</span></td>\r\n <td><qrcode :value=\"product.internal_qrcode+''+product.product_name\" :options=\"{ height:100 }\" v-if=\"product.internal_qrcode\"></qrcode> <span v-if=\"!product.internal_qrcode\">No record</span></td>\r\n                     \r\n                </tr>\r\n              </tbody>\r\n            </table> \r\n            \r\n                  <b-modal v-model=\"showModal\"  ref=\"modal\" id=\"small\" size=\"sm\" body-class=\"bg-white\" @ok=\"processManual\" title=\"Cannot find barcode for product you just scanned. Manually select the product from dropdown below, or Click Ignore button to close.\" cancel-title=\"Ignore\" ok-title=\"Submit\">\r\n                        <v-select :options=\"unselectedProducts\"  :value=\"Index\"  v-model=\"manualSelection\" placeholder=\"Select Product\" label=\"label\"  >\r\n    <template slot=\"option\" slot-scope=\"option\">\r\n        {{ option.label }}\r\n    </template>\r\n  </v-select>\r\n    </b-modal>\r\n          </div>\r\n          \r\n                        \r\n        </b-card>\r\n  \r\n\r\n\r\n       \r\n\r\n    \r\n              </b-form>\r\n            </tab-content>\r\n            <tab-content title=\"Review & Confirmation\">\r\n            \r\n          \r\n\r\n           <table  class=\"table table-bordered table-lg mt-lg mb-0\" v-if=\"allSelectedProducts.length!=0\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"hidden-sm-down\">Num.</th>\r\n                  <th>Product Name</th>\r\n                  <th>Product Type</th>\r\n                  <th class=\"hidden-sm-down\">Brand</th>\r\n                  <th class=\"\">Qty</th>\r\n                 \r\n                </tr>\r\n              </thead>\r\n                     <tbody>\r\n                <tr v-for=\"(product,index) in allSelectedProducts\" :key=\"product.product_name\">\r\n                  <td>{{index+1}}</td>\r\n                  <td> <b-badge variant=\"success\" class=\"text-gray-dark\">{{product.product_name}}</b-badge></td>\r\n                   <td>{{product.product_category}}</td>\r\n                    <td>{{product.manufacturer}}</td>\r\n                       <td>{{product.quantity}}</td>\r\n                   \r\n                </tr>\r\n              </tbody>\r\n            </table> \r\n\r\n        <div class=\"mb-lg\" v-if=\"selectedPreCheckIn!=null\">\r\n            <h3 class=\"text-success mb-0\">{{selectedPreCheckIn.preId}}</h3>\r\n            Pre Check In Record\r\n          </div>\r\n           <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.invoiceId}}</h3>\r\n            Invoice Number \r\n          </div>\r\n           <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.totalAmount}}</h3>\r\n            Total Amount (RM)\r\n          </div>\r\n           <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.comments}}</h3>\r\n            Comments\r\n          </div>\r\n\r\n\r\n      \r\n              <b-form-group>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"checkbox-default\"\r\n                    v-model=\"accept\"\r\n                  />\r\n                   <label for=\"checkbox-default\">I have reviewed the contents and am ready to proceed</label>\r\n                </b-form-group>\r\n            </tab-content>\r\n            <div class=\"loader\" v-if=\"loadingWizard\"></div>\r\n    <div v-if=\"errorMsg\">\r\n      <span class=\"error\">{{errorMsg}}</span>\r\n    </div>\r\n        </form-wizard>\r\n      </Widget>\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n<style>\r\nspan.error{\r\n  color:#e74c3c;\r\n  font-size:20px;\r\n  display:flex;\r\n  justify-content:center;\r\n}\r\n</style>\r\n<script>\r\n\r\nimport Vue from 'vue';\r\nimport vSelect from 'vue-select';\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vue2Dropzone from 'vue2-dropzone';\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\r\nimport { select2CountriesData, select2ShipmentData, cardTypesData } from './data';\r\nimport rns from '../../assets/cards/rns.png';\r\nimport moment from 'moment';\r\nimport VueBarcode from 'vue-barcode-master';\r\nimport VueQrcode from 'vue-qrcode-master';\r\n\r\nconst { Messenger } = window;\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\nexport default {\r\n  name: 'FormWizardPage',\r\n  components: { Widget, vSelect,vueDropzone: vue2Dropzone,barcode: VueBarcode,qrcode:VueQrcode},\r\n  data() {\r\n    return {\r\n      manufacturerBarcodes:[],\r\n      showModal:false,\r\n      selectedVendorInfo:{},\r\n      unselectedProducts:[],\r\n      allSelectedProducts:[],\r\n      unselectedBarcode:null,\r\n      selectedPreCheckIn:null,\r\n      manualSelection:{},\r\n        clinicId: this.$route.params.clinicId,\r\n        loadingWizard: false,\r\n         errorMsg: null,\r\n         count: 0,\r\n      isLoading:false,\r\n       data:{\r\n        vendor:'',\r\n       \r\n       preCheckIn:'',\r\n       invoiceId:'',\r\n       totalAmount:'',\r\n       attachments:[],\r\n        comments:''\r\n \r\n      },\r\n      accept:false,\r\n    progress:1,\r\n    preInfo:[],\r\n    medicineInfo:[],\r\n    data2:{\r\n\r\n    },\r\n    componentKey:0,\r\n    selectedMedicine:null,\r\n    data3:{\r\n\r\n    },\r\n    \r\n            dropzoneOptions: {\r\n          url: 'https://backend.medicodesolution.com/staging/checkin/attachments/upload',\r\n          thumbnailWidth: 150,\r\n          maxFilesize: 10.0,\r\n           maxFiles: 3,\r\n          addRemoveLinks: true,\r\n          //autoProcessQueue: false\r\n          \r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n  selectedPreCheckIn: function (preCheckIn) {\r\n  this.selectedPreCheckIn.allProducts = JSON.parse(this.selectedPreCheckIn.allProducts);\r\n  this.getPreSelectedVendor(this.selectedPreCheckIn.vendorId)\r\n  }\r\n},\r\n  methods: {\r\n    processManual(){ \r\n      const self=this;   \r\n      if(self.manualSelection==null || self.manualSelection==''){\r\n          return Messenger().post({type:'error',message:'Scanned barcode not tagged to any product!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n  \r\n        var selectedIndex = self.manualSelection.Index;\r\n        console.log(selectedIndex);\r\n        self.selectedPreCheckIn.allProducts[selectedIndex].manufacturer_barcode = self.unselectedBarcode;\r\n           if(self.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity==undefined || self.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity==''){\r\n     self.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity= 1;\r\n   }\r\n   else {\r\n     self.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity++;\r\n   }\r\n  return  Messenger().post({message:self.selectedPreCheckIn.allProducts[selectedIndex].product_name+' scanned!', hideAfter: 3,showCloseButton:true});\r\n        console.log(self.manualSelection.Index);\r\n    \r\n    },\r\n    removeFromList(){\r\n      this.selectedMedicine=null;\r\n      return Messenger().post({type:'success',message:'Item removed!',hideAfter: 3,showCloseButton:true});\r\n    },\r\n      removeFromAllProducts(index){\r\n      this.allSelectedProducts.splice(index);\r\n      return Messenger().post({type:'success',message:'Item removed!',hideAfter: 3,showCloseButton:true});\r\n    },\r\n    addToList(){\r\n      if(this.selectedMedicine.quantity==null || this.selectedMedicine.quantity==undefined || this.selectedMedicine.quantity==''){\r\n       return Messenger().post({type:'error',message:'Quantity required!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n      this.allSelectedProducts.push(this.selectedMedicine);\r\n      this.selectedMedicine=null;\r\n         console.log(this.allSelectedProducts);\r\n      return Messenger().post({type:'success',message:'Item added to list!',hideAfter: 3,showCloseButton:true});\r\n   \r\n    },\r\n      getBottleValue(index){\r\n         \r\n          if(this.selectedPreCheckIn.allProducts[index].quantity_boxes==undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\r\n  }\r\n      if(this.selectedPreCheckIn.allProducts[index].quantity_bottleperbox==undefined || this.selectedPreCheckIn.allProducts[index].quantity_bottleperbox==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_bottleperbox = 0;\r\n  }\r\n     if(this.selectedPreCheckIn.allProducts[index].quantity_bottles==undefined || this.selectedPreCheckIn.allProducts[index].quantity_bottle==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_bottles = 0;\r\n  }\r\n   if(this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle==undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle = 0;\r\n  }\r\n     if(this.selectedPreCheckIn.allProducts[index].quantity_perbottle==undefined || this.selectedPreCheckIn.allProducts[index].quantity_perbottle==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_perbottle = 0;\r\n  }\r\n     if(this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle==undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitperbottle==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity__unitperbottle = 'ml';\r\n  }\r\n  this.selectedPreCheckIn.allProducts[index].quantity_bottles = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_bottleperbox);\r\n  this.selectedPreCheckIn.allProducts[index].quantity_unittotal  = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_bottles) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_perbottle);\r\n  \r\n  this.componentKey+=1;\r\n\r\n    },\r\n        getTubeValue(index){\r\n        \r\n          if(this.selectedPreCheckIn.allProducts[index].quantity_boxes==undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\r\n  }\r\n      if(this.selectedPreCheckIn.allProducts[index].quantity_tubeperbox==undefined || this.selectedPreCheckIn.allProducts[index].quantity_tubeperbox==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_tubeperbox = 0;\r\n  }\r\n     if(this.selectedPreCheckIn.allProducts[index].quantity_tubes==undefined || this.selectedPreCheckIn.allProducts[index].quantity_tubes==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_tubes = 0;\r\n  }\r\n   if(this.selectedPreCheckIn.allProducts[index].quantity_unitpertube==undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitpertube==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_unitpertube = 0;\r\n  }\r\n     if(this.selectedPreCheckIn.allProducts[index].quantity_pertube==undefined || this.selectedPreCheckIn.allProducts[index].quantity_pertube==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_pertube = 0;\r\n  }\r\n     if(this.selectedPreCheckIn.allProducts[index].quantity_unitpertube==undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitpertube==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity__unitpertube = 'g';\r\n  }\r\n  this.selectedPreCheckIn.allProducts[index].quantity_tubes = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_tubeperbox);\r\n  this.selectedPreCheckIn.allProducts[index].quantity_unittotal  = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_tubes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_pertube);\r\n  \r\n  this.componentKey+=1;\r\n\r\n    },\r\n    getAmpuleValue(index){\r\n        if(this.selectedPreCheckIn.allProducts[index].quantity_boxes==undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\r\n  }\r\n    if(this.selectedPreCheckIn.allProducts[index].quantity_ampuleperbox==undefined || this.selectedPreCheckIn.allProducts[index].quantity_ampuleperbox==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_ampuleperbox = 0;\r\n  }\r\n    if(this.selectedPreCheckIn.allProducts[index].quantity_ampules==undefined || this.selectedPreCheckIn.allProducts[index].quantity_ampules==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_ampules = 0;\r\n  }\r\n      if(this.selectedPreCheckIn.allProducts[index].quantity_mlperampule==undefined || this.selectedPreCheckIn.allProducts[index].quantity_mlperampule==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_mlperampule = 0;\r\n  }\r\n      this.selectedPreCheckIn.allProducts[index].quantity_ampules = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_ampuleperbox);\r\n  \r\n  this.componentKey+=1;\r\n\r\n    },\r\n       getWholeValue(index){\r\n        if(this.selectedPreCheckIn.allProducts[index].quantity_boxes==undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\r\n  }\r\n    if(this.selectedPreCheckIn.allProducts[index].quantity_unitperbox==undefined || this.selectedPreCheckIn.allProducts[index].quantity_unitperbox==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_unitperbox = 0;\r\n  }\r\n    if(this.selectedPreCheckIn.allProducts[index].quantity_units==undefined || this.selectedPreCheckIn.allProducts[index].quantity_units==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_units = 0;\r\n  }\r\n  \r\n      this.selectedPreCheckIn.allProducts[index].quantity_units = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_unitperbox);\r\n  \r\n  this.componentKey+=1;\r\n\r\n    },\r\n    getVialValue(index){\r\n\r\n  if(this.selectedPreCheckIn.allProducts[index].quantity_boxes==undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\r\n  }\r\n    if(this.selectedPreCheckIn.allProducts[index].quantity_vialsperbox==undefined || this.selectedPreCheckIn.allProducts[index].quantity_vialsperbox==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_vialsperbox = 0;\r\n  }\r\n      if(this.selectedPreCheckIn.allProducts[index].quantity_vials==undefined || this.selectedPreCheckIn.allProducts[index].quantity_vials==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_vials = 0;\r\n  }\r\n  if(this.selectedPreCheckIn.allProducts[index].quantity_mlpervial==undefined || this.selectedPreCheckIn.allProducts[index].quantity_mlpervial==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_mlpervial = 0;\r\n  }\r\n     if(this.selectedPreCheckIn.allProducts[index].quantity_mls==undefined || this.selectedPreCheckIn.allProducts[index].quantity_mls==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_mls = 0;\r\n  }\r\n /* if(this.selectedPreCheckIn.allProducts[index].quantity_mlperdose==undefined || this.selectedPreCheckIn.allProducts[index].quantity_mlperdose==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_mlperdose = 0;\r\n  }\r\n  \r\n  if(this.selectedPreCheckIn.allProducts[index].quantity_doses==undefined || this.selectedPreCheckIn.allProducts[index].quantity_doses==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_doses = 0;\r\n  } */\r\n\r\n\r\n     this.selectedPreCheckIn.allProducts[index].quantity_vials = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_vialsperbox);\r\n      this.selectedPreCheckIn.allProducts[index].quantity_mls = Number(this.selectedPreCheckIn.allProducts[index].quantity_mlpervial*this.selectedPreCheckIn.allProducts[index].quantity_vials);\r\n  this.componentKey+=1;\r\n\r\n\r\n\r\n    },\r\ngetTabletValue(index){\r\n\r\n  if(this.selectedPreCheckIn.allProducts[index].quantity_boxes==undefined || this.selectedPreCheckIn.allProducts[index].quantity_boxes==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_boxes = 0;\r\n  }\r\n    if(this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox==undefined || this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox = 0;\r\n  }\r\n     if(this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox==undefined || this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox = 0;\r\n  }\r\n      if(this.selectedPreCheckIn.allProducts[index].quantity_strips==undefined || this.selectedPreCheckIn.allProducts[index].quantity_strips==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_strips = 0;\r\n  }\r\n    if(this.selectedPreCheckIn.allProducts[index].quantity_tabletsperstrip==undefined || this.selectedPreCheckIn.allProducts[index].quantity_tabletsperstrip==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_tabletsperstrip = 0;\r\n  }\r\n    if(this.selectedPreCheckIn.allProducts[index].quantity_tablets==undefined || this.selectedPreCheckIn.allProducts[index].quantity_tablets==''){\r\n    this.selectedPreCheckIn.allProducts[index].quantity_tablets = 0;\r\n  }\r\n\r\n   this.selectedPreCheckIn.allProducts[index].quantity_strips = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_boxes) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_stripsperbox);\r\n   this.selectedPreCheckIn.allProducts[index].quantity_tablets = parseInt(this.selectedPreCheckIn.allProducts[index].quantity_strips) * parseInt(this.selectedPreCheckIn.allProducts[index].quantity_tabletsperstrip);\r\n  this.componentKey+=1;\r\n},\r\nasync onSearch(search, loading) {\r\n  if(escape(search)=='' || escape(search)==null || escape(search)==undefined){\r\n   return this.medicineInfo;\r\n  }\r\n    loading(true);\r\n    const response = await this.axios.get(`https://backend.medicodesolution.com/staging/search/medicines/${escape(search)}`);\r\n    this.medicineInfo = response.data.medicineInfo;\r\n    loading(false);\r\n    },\r\n     successEvent (file) {\r\n        this.data.attachments.push(file.xhr.response);\r\n      },\r\n onComplete: function(){\r\n          submit()\r\n        },\r\n        setLoading: function(value) {\r\n            this.loadingWizard = value\r\n        },\r\n        handleValidation: function(isValid, tabIndex){\r\n       //    console.log('Tab: '+tabIndex+ ' valid: '+isValid)\r\n        },\r\n        handleErrorMessage: function(errorMsg){\r\n          this.errorMsg = errorMsg\r\n        },\r\n        navigateToDashboard(){\r\n        this.$router.push({name:'Dashboard' });\r\n    },\r\n      validOne:function() {\r\n     return new Promise((resolve, reject) => {\r\n           if(this.selectedPreCheckIn=='' || this.selectedPreCheckIn==null){\r\n        \r\n         \treject('Select Pre Check In to continue..')\r\n         }\r\n             if(this.data.invoiceId=='' || this.data.invoiceId==null){\r\n        \r\n         \treject('Key in invoice number to continue..')\r\n         }\r\n            if(this.data.totalAmount=='' || this.data.totalAmount==null){\r\n        \r\n         \treject('Key in Total Amount (RM) to continue..')\r\n         }\r\n             if(this.data.attachments.length==0 || this.data.attachments==null){\r\n        \r\n         \treject('Upload Invoice to continue..')\r\n         }\r\n              \r\n       \r\n       else{\r\n      /*   console.log('precheckin:'+this.data.preCheckIn.id+'--- invoice number:'+this.data.invoiceId+'--- total amount:'+this.data.totalAmount+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments); */\r\n          resolve(true)\r\n         }   \r\n     \r\n     })\r\n    },\r\n      validTwo:function() {\r\n     return new Promise((resolve, reject) => {\r\n        var minimumProductAdded=false;\r\n            this.selectedPreCheckIn.allProducts.forEach(function(entry) {\r\n    if(entry.delivered_quantity!=null && entry.delivered_quantity!=undefined){\r\n      minimumProductAdded=true;\r\n    }\r\n});\r\n                if(this.selectedPreCheckIn=='' || this.selectedPreCheckIn==null){\r\n        \r\n         \treject('Select Pre Check In to continue..')\r\n         }\r\n             if(this.data.invoiceId=='' || this.data.invoiceId==null){\r\n        \r\n         \treject('Key in invoice number to continue..')\r\n         }\r\n            if(this.data.totalAmount=='' || this.data.totalAmount==null){\r\n        \r\n         \treject('Key in Total Amount (RM) to continue..')\r\n         }\r\n             if(this.data.attachments.length==0 || this.data.attachments==null){\r\n        \r\n         \treject('Upload Invoice to continue..')\r\n         }\r\n             if(minimumProductAdded==false){\r\n        \r\n         \treject('Add at least one product to continue..')\r\n         }\r\n         else {\r\n            resolve(true);\r\n         }\r\n        \r\n     \r\n     \r\n     })\r\n    },\r\n  getQuantityColor(ordered,received){\r\n    if(received>=ordered){\r\n      return 'success';\r\n    }\r\n    else{\r\n      return 'warning';\r\n    }\r\n  },\r\n  submit(){\r\n    var self=this;\r\n     self.isLoading = true;\r\n    if(self.accept==false){\r\n       self.isLoading = false;\r\n      return Messenger().post({type:'error',message:'Tick confirmation checkbox to continue!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n \r\n\r\n   //no validation\r\n   self.$validator.validateAll().then((result) => {\r\n\t\t  if (result) {\r\n          self.axios.post('https://backend.medicodesolution.com/staging/checkin/submit', {\r\n        clinicId:self.clinicId,\r\n          preCheckInId:self.selectedPreCheckIn.preId,\r\n          invoiceId:self.data.invoiceId,\r\n          totalAmount:self.data.totalAmount,\r\n          comments:self.data.comments,\r\n          attachments:self.data.attachments.join(),\r\n          allProducts:JSON.stringify(self.selectedPreCheckIn.allProducts)\r\n\r\n    })\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                                   self.isLoading = false;\r\n                   Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                   return self.navigateToDashboard();\r\n         \r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                 Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n              return self.navigateToDashboard();\r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n               Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   return self.navigateToDashboard();\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                self.isLoading = false;\r\n                 Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true}); \r\n                     return self.navigateToDashboard();               \r\n                }); \r\n\t\t  }\r\n                  if(!result){\r\n                    self.isLoading = false;\r\n        \t         return  Messenger().post({ type:'error',message :\"Ensure Batch Number,Expiry Date & Quantity infos are correctly filled in Step 2 (Scan Products)\", hideAfter: 3,showCloseButton:true});\r\n                  }\r\n\t\t});\r\n    \r\n   \r\n  },\r\n async getPreCheckIns() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/all/precheckins/'+this.clinicId);\r\n\r\n   this.preInfo = response.data.preInfo;\r\n   \r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n\r\n async getPreSelectedVendor(id) {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/vendor/'+id);\r\n   this.selectedVendorInfo = response.data.vendorInfo[0];\r\n \r\n   \r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n  async getManufacturerBarcodes() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/manufacturerBarcodes')\r\n   this.manufacturerBarcodes = response.data.manufacturerBarcodes;\r\n\r\n   console.log(this.manufacturerBarcodes)\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n onBarcodeScanned (barcode) {\r\n       var index = 0; var selectedIndex;\r\n       var self=this;\r\n       self.unselectedProducts = [];\r\n     this.selectedPreCheckIn.allProducts.forEach(function(entry) {\r\n    if(entry.manufacturer_barcode==barcode){\r\n    selectedIndex = index;\r\n    }\r\n    if(entry.manufacturer_barcode=='' || entry.manufacturer_barcode==null || entry.manufacturer_barcode==undefined){\r\n      self.unselectedProducts.push({\r\n        label:entry.product_name,\r\n        Index:index\r\n      });\r\n    }\r\n    index++;\r\n});\r\n\r\nif(selectedIndex!=null && selectedIndex!=undefined){\r\n   if(this.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity==undefined || this.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity==''){\r\n     this.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity= 1;\r\n   }\r\n   else {\r\n     this.selectedPreCheckIn.allProducts[selectedIndex].delivered_quantity++;\r\n   }\r\n  return  Messenger().post({message:this.selectedPreCheckIn.allProducts[selectedIndex].product_name+' scanned!', hideAfter: 3,showCloseButton:true});\r\n}\r\nelse {\r\n  if(this.manufacturerBarcodes.includes(barcode)){\r\n\r\n    return  Messenger().post({type:'error',message:'This barcode is tagged to product not in your precheckin list. Kindly ammend your precheckin info if you wish to add this product.', hideAfter: 3,showCloseButton:true});\r\n  }\r\n  else {\r\n    this.unselectedBarcode = barcode;\r\n    this.showModal=true;\r\n    return  Messenger().post({type:'error',message:'Item not found', hideAfter: 3,showCloseButton:true});\r\n  }\r\n   \r\n}\r\n      },\r\n\r\n  },\r\n     mounted(){\r\n  this.getPreCheckIns();\r\n  this.getManufacturerBarcodes();\r\n \r\n \r\n   },\r\n    created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n   this.$barcodeScanner.init(this.onBarcodeScanned);\r\n  },\r\n};\r\n</script>\r\n\r\n<style src=\"./ClinicPreCheckIn.scss\" lang=\"scss\" />\r\n"],"sourceRoot":"src\\pages\\Accounts"}]}