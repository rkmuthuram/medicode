{"remainingRequest":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\thread-loader\\dist\\cjs.js!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Accounts\\ClinicCheckOut.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Accounts\\ClinicCheckOut.vue","mtime":1610346976616},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1591157760290},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\sunrisers\\\\medicode\\\\medicode\\\\adminPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport vSelect from 'vue-select';\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\n\nimport Widget from '@/components/Widget/Widget';\nimport vue2Dropzone from 'vue2-dropzone';\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\nimport { select2CountriesData, select2ShipmentData, cardTypesData } from './data';\nimport rns from '../../assets/cards/rns.png';\nimport moment from 'moment';\nimport VueBarcode from 'vue-barcode-master';\nimport VueQrcode from 'vue-qrcode-master';\nvar _window = window,\n    Messenger = _window.Messenger;\n\nfunction initializationMessengerCode() {\n  (function () {\n    var $,\n        FlatMessage,\n        spinner_template,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    $ = jQuery;\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\n\n    FlatMessage = function (_super) {\n      __extends(FlatMessage, _super);\n\n      function FlatMessage() {\n        return FlatMessage.__super__.constructor.apply(this, arguments);\n      }\n\n      FlatMessage.prototype.template = function (opts) {\n        var $message;\n        $message = FlatMessage.__super__.template.apply(this, arguments);\n        $message.append($(spinner_template));\n        return $message;\n      };\n\n      return FlatMessage;\n    }(Messenger.Message);\n\n    Messenger.themes.air = {\n      Message: FlatMessage\n    };\n  }).call(window);\n}\n/* eslint-enable */\n\n\nexport default {\n  name: 'FormWizardPage',\n  components: {\n    Widget: Widget,\n    vSelect: vSelect,\n    vueDropzone: vue2Dropzone\n  },\n  data: function data() {\n    return {\n      staffId: window.localStorage.getItem('id'),\n      liveInventory: new Array(),\n      componentKey: 0,\n      allSelectedProducts: [],\n      clinicId: this.$route.params.clinicId,\n      loadingWizard: false,\n      errorMsg: null,\n      count: 0,\n      isLoading: false,\n      data: {\n        vendor: '',\n        order_number: '',\n        attachments: [],\n        comments: ''\n      },\n      accept: false,\n      progress: 1,\n      vendorInfo: [],\n      medicineInfo: [],\n      data2: {},\n      selectedMedicine: null,\n      data3: {},\n      dropzoneOptions: {\n        url: 'https://backend.medicodesolution.com/development/precheckin/attachments/upload',\n        thumbnailWidth: 150,\n        maxFilesize: 10.0,\n        maxFiles: 3,\n        addRemoveLinks: true //autoProcessQueue: false\n\n      }\n    };\n  },\n  watch: {\n    selectedMedicine: function selectedMedicine(medicine) {}\n  },\n  methods: {\n    getInventory: function () {\n      var _getInventory = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.axios.get('https://backend.medicodesolution.com/development/all/inventory/' + this.clinicId);\n\n              case 3:\n                response = _context.sent;\n                this.liveInventory = response.data.inventoryInfo;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function getInventory() {\n        return _getInventory.apply(this, arguments);\n      };\n    }(),\n    onBarcodeScanned: function onBarcodeScanned(barcode) {\n      var self = this;\n      console.log(barcode);\n      var liveInventory = self.liveInventory;\n      self.selectedMedicine = null;\n      liveInventory.forEach(function (entry) {\n        if (entry.productId == barcode) {\n          self.selectedMedicine = entry;\n        } else if (entry.barcode == barcode) {\n          self.selectedMedicine = entry;\n        } else if (entry.internal_barcode == barcode) {\n          self.selectedMedicine = entry;\n        }\n      });\n    },\n    removeFromList: function removeFromList() {\n      this.selectedMedicine = null;\n      return Messenger().post({\n        type: 'success',\n        message: 'Item removed!',\n        hideAfter: 3,\n        showCloseButton: true\n      });\n    },\n    removeFromAllProducts: function removeFromAllProducts(index) {\n      this.allSelectedProducts.splice(index);\n      return Messenger().post({\n        type: 'success',\n        message: 'Item removed!',\n        hideAfter: 3,\n        showCloseButton: true\n      });\n    },\n    addToList: function addToList() {\n      var id = this.selectedMedicine.productId;\n      var i = 0;\n      var fail = false;\n      this.allSelectedProducts.forEach(function (entry) {\n        if (entry.productId == id) {\n          fail = true;\n        }\n\n        i++;\n      });\n\n      if (fail == true && i == this.allSelectedProducts.length) {\n        return Messenger().post({\n          type: 'error',\n          message: 'Product already added to the list!',\n          hideAfter: 3,\n          showCloseButton: true\n        });\n      }\n\n      if (this.selectedMedicine.packing_type == 'TABLETS') {\n        if (this.selectedMedicine.quantity_tablets == undefined && this.selectedMedicine.quantity_strips == undefined) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Select valid dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n\n        if (this.selectedMedicine.quantity_tablets == undefined) {\n          this.selectedMedicine.quantity_tablets = 0;\n        }\n\n        if (this.selectedMedicine.quantity_strips == undefined) {\n          this.selectedMedicine.quantity_strips = 0;\n        }\n\n        var qty = JSON.parse(this.selectedMedicine.quantity);\n        this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_tablets);\n\n        if (this.selectedMedicine.quantity_strips != undefined) {\n          this.selectedMedicine.dispensed_total += Number(this.selectedMedicine.quantity_strips) * Number(qty.tabletsperstrip);\n        }\n\n        if (this.selectedMedicine.dispensed_total > qty.tablets) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Insufficient dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n      }\n\n      if (this.selectedMedicine.packing_type == 'Vial / per cc' || this.selectedMedicine.packing_type == 'Vial / per 0.5 cc' || this.selectedMedicine.packing_type == 'per vial' || this.selectedMedicine.packing_type == 'Per vial' || this.selectedMedicine.packing_type == 'vial per cc') {\n        if (this.selectedMedicine.quantity_vials == undefined && this.selectedMedicine.quantity_mls == undefined) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Select valid dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n\n        if (this.selectedMedicine.quantity_vials == undefined) {\n          this.selectedMedicine.quantity_vials = 0;\n        }\n\n        if (this.selectedMedicine.quantity_mls == undefined) {\n          this.selectedMedicine.quantity_mls = 0;\n        }\n\n        var qty = JSON.parse(this.selectedMedicine.quantity);\n        this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_mls);\n\n        if (this.selectedMedicine.quantity_mls != undefined) {\n          this.selectedMedicine.dispensed_total += Number(this.selectedMedicine.quantity_vials * qty.mlpervial);\n        }\n\n        if (this.selectedMedicine.dispensed_total > qty.mls) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Insufficient dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n      }\n\n      if (this.selectedMedicine.packing_type == 'per ampule') {\n        if (this.selectedMedicine.quantity_ampules == undefined) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Select valid dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n\n        if (this.selectedMedicine.quantity_ampules == undefined) {\n          this.selectedMedicine.quantity_ampules = 0;\n        }\n\n        var qty = JSON.parse(this.selectedMedicine.quantity);\n        this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_ampules);\n\n        if (this.selectedMedicine.dispensed_total > qty.ampules) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Insufficient dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n      }\n\n      if (this.selectedMedicine.packing_type == 'Per supp' || this.selectedMedicine.packing_type == 'SACHET' || this.selectedMedicine.packing_type == 'Sachet' || this.selectedMedicine.packing_type == 'box' || this.selectedMedicine.packing_type == 'Set' || this.selectedMedicine.packing_type == 'ROLLS' || this.selectedMedicine.packing_type == 'PIECES' || this.selectedMedicine.packing_type == 'pack' || this.selectedMedicine.packing_type == 'Diskus') {\n        if (this.selectedMedicine.quantity_units == undefined) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Select valid dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n\n        if (this.selectedMedicine.quantity_units == undefined) {\n          this.selectedMedicine.quantity_units = 0;\n        }\n\n        var qty = JSON.parse(this.selectedMedicine.quantity);\n        this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_units);\n\n        if (this.selectedMedicine.dispensed_total > qty.units) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Insufficient dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n      }\n      /*    if(this.selectedMedicine.dispensed_quantity==null || this.selectedMedicine.dispensed_quantity==undefined || this.selectedMedicine.dispensed_quantity=='' || this.selectedMedicine.dispensed_quantity==0){\r\n           return Messenger().post({type:'error',message:'Valid dispensed quantity required!',hideAfter: 3,showCloseButton:true});\r\n          }\r\n            if(this.selectedMedicine.dispensed_quantity>this.selectedMedicine.stock_quantity ){\r\n           return Messenger().post({type:'error',message:'Dispense quantity must not be higher than stock quantity!',hideAfter: 3,showCloseButton:true});\r\n          }  */\n\n\n      if (this.selectedMedicine.packing_type == 'BOTTLE') {\n        if (this.selectedMedicine.quantity_bottles == undefined && this.selectedMedicine.quantity_unittotal == undefined) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Select valid dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n\n        if (this.selectedMedicine.quantity_bottles == undefined) {\n          this.selectedMedicine.quantity_bottles = 0;\n        }\n\n        if (this.selectedMedicine.quantity_unittotal == undefined) {\n          this.selectedMedicine.quantity_unittotal = 0;\n        }\n\n        this.selectedMedicine.quantity_unitperbottle = JSON.parse(this.selectedMedicine.quantity).unitperbottle;\n        var qty = JSON.parse(this.selectedMedicine.quantity);\n        this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_unittotal);\n\n        if (this.selectedMedicine.quantity_bottles != undefined) {\n          this.selectedMedicine.dispensed_total += Number(this.selectedMedicine.quantity_bottles * qty.perbottle);\n        }\n\n        if (this.selectedMedicine.dispensed_total > qty.unittotal) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Insufficient dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n      }\n\n      if (this.selectedMedicine.packing_type == 'TUBE') {\n        if (this.selectedMedicine.quantity_tubes == undefined && this.selectedMedicine.quantity_unittotal == undefined) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Select valid dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n\n        if (this.selectedMedicine.quantity_tubes == undefined) {\n          this.selectedMedicine.quantity_tubes = 0;\n        }\n\n        if (this.selectedMedicine.quantity_unittotal == undefined) {\n          this.selectedMedicine.quantity_unittotal = 0;\n        }\n\n        this.selectedMedicine.quantity_unitpertube = JSON.parse(this.selectedMedicine.quantity).unitpertube;\n        var qty = JSON.parse(this.selectedMedicine.quantity);\n        this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_unittotal);\n\n        if (this.selectedMedicine.quantity_tubes != undefined) {\n          this.selectedMedicine.dispensed_total += Number(this.selectedMedicine.quantity_tubes * qty.pertube);\n        }\n\n        console.log(this.selectedMedicine.dispensed_total);\n\n        if (this.selectedMedicine.dispensed_total > qty.unittotal) {\n          return Messenger().post({\n            type: 'error',\n            message: 'Insufficient dispense quantity!',\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        }\n      }\n\n      if (fail == false && i == this.allSelectedProducts.length) {\n        this.allSelectedProducts.push(this.selectedMedicine);\n        this.selectedMedicine = null;\n        return Messenger().post({\n          type: 'success',\n          message: 'Item added to list!',\n          hideAfter: 3,\n          showCloseButton: true\n        });\n      }\n    },\n    onSearch: function () {\n      var _onSearch = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(search, loading) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(escape(search) == '' || escape(search) == null || escape(search) == undefined)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", this.medicineInfo);\n\n              case 2:\n                loading(true);\n                _context2.next = 5;\n                return this.axios.get(\"https://backend.medicodesolution.com/development/search/liveInventory/\" + this.clinicId + \"/\".concat(escape(search)));\n\n              case 5:\n                response = _context2.sent;\n                this.medicineInfo = response.data.medicineInfo; // console.log(this.medicineInfo)\n\n                loading(false);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function onSearch(_x, _x2) {\n        return _onSearch.apply(this, arguments);\n      };\n    }(),\n    successEvent: function successEvent(file) {\n      this.data.attachments.push(file.xhr.response);\n    },\n    onComplete: function onComplete() {\n      submit();\n    },\n    setLoading: function setLoading(value) {\n      this.loadingWizard = value;\n    },\n    handleValidation: function handleValidation(isValid, tabIndex) {//    console.log('Tab: '+tabIndex+ ' valid: '+isValid)\n    },\n    handleErrorMessage: function handleErrorMessage(errorMsg) {\n      this.errorMsg = errorMsg;\n    },\n    navigateToDashboard: function navigateToDashboard() {\n      this.$router.push({\n        name: 'Dashboard'\n      });\n    },\n    validOne: function validOne() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this.data.patientId == '' || _this.data.patientId == null) {\n          reject('Enter Patient MRN to continue..');\n        }\n\n        if (_this.data.total_amount == '' || _this.data.total_amount == null) {\n          reject('Key in total amount to continue..');\n        } else {\n          //  console.log('vendor:'+this.data.vendor.name+'--- order number:'+this.data.order_number+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments);\n          resolve(true);\n        }\n      });\n    },\n    validTwo: function validTwo() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this2.data.patientId == '' || _this2.data.patientId == null) {\n          reject('Enter Patient MRN to continue..');\n        }\n\n        if (_this2.data.total_amount == '' || _this2.data.total_amount == null) {\n          reject('Key in total amount to continue..');\n        }\n\n        if (_this2.allSelectedProducts.length == 0) {\n          reject('Add at least 1 (one) product to continue..');\n        }\n        /* if(this.data.subtotal=='' || this.data.subtotal==null){\r\n              \treject('Key in Subtotal (RM) to continue..')\r\n        }\r\n        if(this.data.tax_rate=='' || this.data.tax_rate==null){\r\n              \treject('Key in Tax Rate (RM) to continue..')\r\n        }\r\n        if(this.data.total_amount=='' || this.data.total_amount==null){\r\n              \treject('Key in Total Amount (RM) to continue..')\r\n        }\r\n        if(this.data.comments=='' || this.data.comments==null){\r\n              \treject('Key in Comments..')\r\n        } */\n        else {\n            //  console.log('vendor:'+this.data.vendor.name+'--- order number:'+this.data.order_number+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments);\n            resolve(true);\n          }\n      });\n    },\n    submit: function submit() {\n      var self = this;\n      self.isLoading = true;\n\n      if (self.accept == false) {\n        self.isLoading = false;\n        return Messenger().post({\n          type: 'error',\n          message: 'Tick confirmation checkbox to continue!',\n          hideAfter: 3,\n          showCloseButton: true\n        });\n      }\n\n      var finalProducts = new Array();\n      var index = 0;\n      var length = self.allSelectedProducts.length; //  console.log(this.allSelectedProducts);\n\n      self.allSelectedProducts.forEach(function (entry) {\n        if (entry.packing_type == 'TABLETS') {\n          var quantity = {\n            tablets: Number(entry.quantity_tablets),\n            strips: Number(entry.quantity_strips),\n            totaltablets: Number(entry.dispensed_total)\n          };\n          finalProducts.push({\n            clinicId: self.clinicId,\n            productId: entry.productId,\n            quantity: JSON.stringify(quantity),\n            packing_type: entry.packing_type\n          });\n        }\n\n        if (entry.packing_type == 'Per vial' || entry.packing_type == 'per vial' || entry.packing_type == 'Vial / per cc' || entry.packing_type == 'Vial / per 0.5 cc' || entry.packing_type == 'vial per cc') {\n          var quantity = {\n            vials: Number(entry.quantity_vials),\n            mls: Number(entry.quantity_mls),\n            totalmls: Number(entry.dispensed_total)\n          };\n          finalProducts.push({\n            clinicId: self.clinicId,\n            productId: entry.productId,\n            quantity: JSON.stringify(quantity),\n            packing_type: entry.packing_type\n          });\n        }\n\n        if (entry.packing_type == 'per ampule') {\n          var quantity = {\n            ampules: Number(entry.quantity_ampules),\n            totalampules: Number(entry.dispensed_total)\n          };\n          finalProducts.push({\n            clinicId: self.clinicId,\n            productId: entry.productId,\n            quantity: JSON.stringify(quantity),\n            packing_type: entry.packing_type\n          });\n        }\n\n        if (entry.packing_type == 'BOTTLE') {\n          var quantity = {\n            bottles: Number(entry.quantity_bottles),\n            unittotal: Number(entry.quantity_unittotal),\n            totalunits: Number(entry.dispensed_total)\n          };\n          finalProducts.push({\n            clinicId: self.clinicId,\n            productId: entry.productId,\n            quantity: JSON.stringify(quantity),\n            packing_type: entry.packing_type\n          });\n        }\n\n        if (entry.packing_type == 'TUBE') {\n          var quantity = {\n            tubes: Number(entry.quantity_tubes),\n            unittotal: Number(entry.quantity_unittotal),\n            totalunits: Number(entry.dispensed_total)\n          };\n          finalProducts.push({\n            clinicId: self.clinicId,\n            productId: entry.productId,\n            quantity: JSON.stringify(quantity),\n            packing_type: entry.packing_type\n          });\n        }\n\n        if (entry.packing_type == 'Per supp' || entry.packing_type == 'SACHET' || entry.packing_type == 'Sachet' || entry.packing_type == 'box' || entry.packing_type == 'Set' || entry.packing_type == 'ROLLS' || entry.packing_type == 'PIECES' || entry.packing_type == 'pack' || entry.packing_type == 'Diskus') {\n          var quantity = {\n            units: Number(entry.quantity_units),\n            totalunits: Number(entry.dispensed_total)\n          };\n          finalProducts.push({\n            clinicId: self.clinicId,\n            productId: entry.productId,\n            quantity: JSON.stringify(quantity),\n            packing_type: entry.packing_type\n          });\n        }\n\n        index++;\n      });\n\n      if (index == length) {\n        // return console.log(finalProducts);\n        self.axios.post('https://backend.medicodesolution.com/development/checkout/submit', {\n          clinicId: self.clinicId,\n          patientId: self.data.patientId,\n          total_amount: self.data.total_amount,\n          allProducts: JSON.stringify(self.allSelectedProducts),\n          finalProducts: finalProducts,\n          staffId: self.staffId\n        }).then(function (response) {\n          if (response.status == 200 && response.data.success) {\n            self.isLoading = false;\n            Messenger().post({\n              message: response.data.success,\n              hideAfter: 3,\n              showCloseButton: true\n            });\n            return self.navigateToDashboard();\n          } else {\n            if (response.data.error) {\n              self.isLoading = false;\n              Messenger().post({\n                type: 'error',\n                message: response.data.error,\n                hideAfter: 3,\n                showCloseButton: true\n              });\n              return self.navigateToDashboard();\n            } else {\n              self.isLoading = false;\n              Messenger().post({\n                type: 'error',\n                message: response.error,\n                hideAfter: 3,\n                showCloseButton: true\n              });\n              return self.navigateToDashboard();\n            }\n          }\n        }).catch(function (error) {\n          self.isLoading = false;\n          Messenger().post({\n            type: 'error',\n            message: error,\n            hideAfter: 3,\n            showCloseButton: true\n          });\n          return self.navigateToDashboard();\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.getInventory();\n    this.$barcodeScanner.init(this.onBarcodeScanned);\n  },\n  created: function created() {\n    initializationMessengerCode();\n    Messenger.options = {\n      extraClasses: this.locationClasses,\n      theme: 'air',\n      showCloseButton: true\n    };\n  }\n};",{"version":3,"sources":["ClinicCheckOut.vue"],"names":[],"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","sourcesContent":["<template>\r\n  <b-row>\r\n    <b-col xl='8' lg='16'>\r\n      <Widget\r\n        title=\"\r\n        <div>\r\n          <h4>\r\n            New Check Out&nbsp;\r\n            <small></small>\r\n          </h4>\r\n          <p class='text-muted'>Follow these 4 simple steps to complete Check Out!</p>\r\n        </div>\"\r\n        customHeader  collapse\r\n      >\r\n         <form-wizard\r\n          shape=\"tab\"\r\n          color=\"#3498db\"\r\n          title=\"\"\r\n          subtitle=\"\"\r\n       @on-validate=\"handleValidation\"\r\n      \r\n                  @on-loading=\"setLoading\"\r\n                  @on-error=\"handleErrorMessage\"\r\n        >\r\n          <b-progress class=\"progress-xs\" variant=\"gray-light\" :value=\"progress\" :max=\"3\" />\r\n          <b-button slot=\"prev\" variant=\"primary\">\r\n            <i class=\"fa fa-caret-left\" /> Previous\r\n          </b-button>\r\n          <b-button slot=\"next\" variant=\"primary\">\r\n            Next <i class=\"fa fa-caret-right\" />\r\n          </b-button>\r\n          <b-button  slot=\"finish\" variant=\"success\" @click=\"submit\" v-if=\"isLoading==false\" >\r\n            Proceed  <i class=\"fa fa-check\" />\r\n          </b-button>\r\n   <tab-content title=\"Customer Info\" :before-change=\"validOne\"> \r\n     <!--    <tab-content title=\"Customer Info\">-->\r\n          <b-form-group\r\n                  label=\"  Patient Identification Number (MRN Number)\"\r\n                >\r\n               <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:4'\" \r\n                  name=\"patientId\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('patientId')}\"\r\n                  type=\"text\"\r\n               v-model=\"data.patientId\"\r\n                />\r\n        </b-form-group>\r\n            <b-form-group\r\n                  label=\"Total Amount (RM)\"\r\n                >\r\n               <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:2'\"\r\n                  name=\"total_amount\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('total_amount')}\"\r\n                  type=\"number\"\r\n               v-model=\"data.total_amount\"\r\n                />\r\n        </b-form-group>\r\n       <!--   <b-form-group>\r\n           <label for=\"myvueDropZone\">Upload Purchase Order</label>\r\n             <label for=\"myvueDropZone\"> *upto 3 items, max 10MB size*</label>\r\n            \r\n              <vue-dropzone ref=\"myVueDropzone\" id=\"dropzone\" :options=\"dropzoneOptions\" v-on:vdropzone-success=\"successEvent\"></vue-dropzone>\r\n       \r\n              </b-form-group>\r\n            <b-form-group\r\n                  label=\"Additional Comments (optional)\"\r\n                >\r\n              <textarea-autosize\r\n                                  v-model=\"data.comments\"\r\n                                placeholder=\"\"\r\n                                :min-height=\"45\"\r\n                               \r\n                                  v-validate=\"'required|min:4'\"\r\n                             :class=\"{ 'form-control': true}\"\r\n                                id=\"comments\"\r\n                                name=\"comments\"\r\n                                />\r\n        </b-form-group> -->\r\n   \r\n\r\n\r\n                \r\n              </b-form>\r\n            </tab-content>\r\n     <tab-content title=\"Add Products\" :before-change=\"validTwo\"> \r\n       <!--       <tab-content title=\"Add Products\" > -->\r\n            \r\n              <b-form>\r\n              \r\n                  <b-form-group\r\n                  label=\"Select Medicine OR Start Scanning (QR / Barcode)\"\r\n                >\r\n            <v-select label=\"product_name\" :filterable=\"false\" :options=\"medicineInfo\"  @search=\"onSearch\"  v-model=\"selectedMedicine\" change=\"\" >\r\n    <template slot=\"no-options\">\r\n    type to search medicine by name / category / manufacturer / any barcodes..\r\n    </template>\r\n    <template slot=\"option\" slot-scope=\"option\">\r\n      <div class=\"d-center\">\r\n        {{ option.product_name }} - {{ option.manufacturer }} - {{option.color}}\r\n        </div>\r\n    </template>\r\n    <template slot=\"selected-option\" slot-scope=\"option\">\r\n      <div class=\"selected d-center\">\r\n        {{ option.product_name }}\r\n      </div>\r\n    </template>\r\n  </v-select>\r\n            <!--   <v-select    v-model=\"data2.medicine\" label=\"name\" >\r\n    <template slot=\"option\" slot-scope=\"option\">\r\n         {{ option.product_name }} - {{ option.product_category }} - {{ option.company_name }}\r\n    </template>\r\n  </v-select>-->\r\n        </b-form-group>\r\n  \r\n  <b-card class=\"mb-xlg border-0\"  v-if=\"selectedMedicine!=null\" :key=\"componentKey\">\r\n          <span class=\"fw-semi-bold text-primary\">{{selectedMedicine.product_category}}</span>\r\n          <span class=\"fw-semi-bold text-muted ml-sm\">{{selectedMedicine.product_name}}</span>\r\n          <hr />\r\n          <div class=\"d-flex justify-content-between mb-lg\">\r\n          \r\n            <span class=\"text-muted\"><small>Manufacturer :  {{selectedMedicine.manufacturer}} | Distributor : {{selectedMedicine.company_name}}</small></span><br>\r\n            \r\n          </div>\r\n          <div class=\"mb-lg\">\r\n            <h3 class=\"text-primary mb-0\">{{selectedMedicine.packing_type}} | {{selectedMedicine.packing_quantity}} | {{selectedMedicine.color}}</h3>\r\n          </div>\r\n           <!--   <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">Available Stock : {{selectedMedicine.quantity}} units</h3>\r\n          </div> -->\r\n            <div v-if=\"selectedMedicine.packing_type=='TABLETS'\" :key=\"componentKey\">\r\n   <span class=\"fw-semi-bold text-primary\">Current Stock :<img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/pills.png?alt=media&token=70eb9961-0de4-4554-95fb-d8cad97a5d79' />  {{JSON.parse(selectedMedicine.quantity).tablets}} tablets ({{JSON.parse(selectedMedicine.quantity).tablets/JSON.parse(selectedMedicine.quantity).tabletsperstrip}} strips)</span>\r\n     <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                   \r\n                  <tr>\r\n                  \r\n              <!--    <td>       <b-form-group\r\n              label=\"Strips\"\r\n              label-for=\"append-field3\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n           \r\n              <select v-model=\"selectedMedicine.quantity_strips\">\r\n    <option v-for=\"n in JSON.parse(selectedMedicine.quantity).strips\" :value=\"n\">{{ n }}</option>\r\n  </select>\r\n            <!--  <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\"  v-model=\"selectedMedicine.quantity_strips\"></b-form-input>\r\n    </b-input-group> -->\r\n          <!--  </b-form-group></td>  -->\r\n              <!--     <td>       <b-form-group\r\n              label=\"Tablets\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <select v-model=\"selectedMedicine.quantity_tablets\">\r\n    <option v-for=\"n in JSON.parse(selectedMedicine.quantity).tablets\" :value=\"n\">{{ n }}</option>\r\n  </select>\r\n          <!--    <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\"    v-model=\"selectedMedicine.quantity_tablets\"></b-form-input>\r\n              </b-input-group> -->\r\n         <!--   </b-form-group></td> -->\r\n      <td> <b-form-group\r\n              label=\"TABLETS\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n            \r\n             <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  v-model=\"selectedMedicine.quantity_tablets\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group>  </td>     \r\n                                              \r\n            </tr>\r\n              \r\n                    \r\n                \r\n              </tbody>\r\n            </table> \r\n                 \r\n  \r\n                </div>\r\n                  <div v-if=\" selectedMedicine.packing_type=='Per vial' || selectedMedicine.packing_type=='per vial'\" :key=\"componentKey\">\r\n                       <span class=\"fw-semi-bold text-primary\">Current Stock : <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/ampoule.png?alt=media&token=96a8f68c-caac-417f-9356-05e4831907f5' /> {{JSON.parse(selectedMedicine.quantity).vials}} vials</span>\r\n <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n         \r\n            \r\n                <td> <b-form-group\r\n              label=\"Vial\"\r\n              label-for=\"append-field3\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n               <select v-model=\"selectedMedicine.quantity_vials\">\r\n    <option v-for=\"n in JSON.parse(selectedMedicine.quantity).vials\" :value=\"n\">{{ n }}</option>\r\n  </select>\r\n            <!--\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"selectedMedicine.quantity_vials\"></b-form-input>\r\n              </b-input-group>-->\r\n            </b-form-group>  </td>  \r\n                                      \r\n            </tr>\r\n                         <tr>\r\n                 \r\n            \r\n        <!--      <td> <b-form-group\r\n              label=\"BY ML / CC\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n            \r\n             <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"selectedMedicine.quantity_mls\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group>  </td>     -->\r\n                   \r\n          <!--  <td> <b-form-group\r\n              label=\"ML / CC\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"per dose\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"selectedMedicine.quantity_mlperdose\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>      -->  \r\n         <!--   <td> <b-form-group\r\n              label=\"Doses\"\r\n              label-for=\"append-field6\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field6\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"selectedMedicine.quantity_doses\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>     -->                           \r\n            </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div>\r\n           <div v-if=\"selectedMedicine.packing_type=='Vial / per cc' || selectedMedicine.packing_type=='Vial / per 0.5 cc' || selectedMedicine.packing_type=='vial per cc'\" :key=\"componentKey\">\r\n              <span class=\"fw-semi-bold text-primary\">Current Stock : <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/injection.png?alt=media&token=d415a06a-ccaf-4c5d-88cc-2df1afbb6b51' /> {{JSON.parse(selectedMedicine.quantity).mls}} CC ({{JSON.parse(selectedMedicine.quantity).mls/JSON.parse(selectedMedicine.quantity).mlpervial}} vials)</span>\r\n<table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                     <tr>\r\n              \r\n               \r\n              <td> <b-form-group\r\n              label=\"Vial\"\r\n              label-for=\"append-field3\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n             <select v-model=\"selectedMedicine.quantity_vials\">\r\n    <option v-for=\"n in JSON.parse(selectedMedicine.quantity).vials\" :value=\"n\">{{ n }}</option>\r\n  </select>\r\n            </b-form-group> </td>  \r\n                                      \r\n            </tr>\r\n                         <tr>\r\n                 \r\n            \r\n              <td> <b-form-group\r\n              label=\"BY ML / CC\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"selectedMedicine.quantity_mls\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>     \r\n                   \r\n          <!--  <td> <b-form-group\r\n              label=\"ML / CC\"\r\n              label-for=\"append-field5\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field5\" append=\"per dose\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"selectedMedicine.quantity_mlperdose\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>      -->  \r\n         <!--   <td> <b-form-group\r\n              label=\"Doses\"\r\n              label-for=\"append-field6\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field6\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getVialValue(index)\"  v-model=\"selectedMedicine.quantity_doses\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>     -->                           \r\n            </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n  \r\n                </div>\r\n      <div v-if=\"selectedMedicine.packing_type=='per ampule'\" :key=\"componentKey\">\r\n           <span class=\"fw-semi-bold text-primary\">Current Stock :  <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/ampoule.png?alt=media&token=96a8f68c-caac-417f-9356-05e4831907f5' />{{JSON.parse(selectedMedicine.quantity).ampules}} ampules</span>\r\n    <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n             \r\n             \r\n                       <td> <b-form-group\r\n              label=\"Ampules\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n             <select v-model=\"selectedMedicine.quantity_ampules\">\r\n    <option v-for=\"n in JSON.parse(selectedMedicine.quantity).ampules\" :value=\"n\">{{ n }}</option>\r\n  </select>\r\n           <!--   <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"   @change=\"getAmpuleValue(index)\"  v-model=\"selectedMedicine.quantity_ampules\"></b-form-input> -->\r\n           \r\n            </b-form-group> </td>      \r\n                          \r\n            </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div>\r\n                        <div v-if=\"selectedMedicine.packing_type=='BOTTLE'\" :key=\"componentKey\">\r\n                             <span class=\"fw-semi-bold text-primary\">Current Stock : <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/bottles.png?alt=media&token=784f4166-e1d3-4e53-b7e5-de05b90a20e1' /> {{JSON.parse(selectedMedicine.quantity).unittotal}}{{JSON.parse(selectedMedicine.quantity).unitperbottle}}  ({{JSON.parse(selectedMedicine.quantity).unittotal/JSON.parse(selectedMedicine.quantity).perbottle}} bottles)</span>\r\n       <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n             <!--    <td>       <b-form-group\r\n              label=\"Boxes\"\r\n              label-for=\"append-field\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\" type=\"number\" @change=\"getBottleValue(index)\"  v-model=\"selectedMedicine.quantity_boxes\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group></td>\r\n                  <td> <b-form-group\r\n              label=\"Bottles\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <b-input-group class=\"input-group-transparent\" id=\"append-field2\" append=\"per box\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getBottleValue(index)\"  v-model=\"selectedMedicine.quantity_bottleperbox\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td> -->  </tr><tr> \r\n                       <td> <b-form-group\r\n              label=\"Bottles\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n              \r\n            >\r\n             <select v-model=\"selectedMedicine.quantity_bottles\">\r\n    <option v-for=\"n in JSON.parse(selectedMedicine.quantity).bottles\" :value=\"n\">{{ n }}</option>\r\n  </select>\r\n             <!-- <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getBottleValue(index)\"  v-model=\"selectedMedicine.quantity_bottles\"></b-form-input>\r\n              </b-input-group> -->\r\n            </b-form-group> </td>    \r\n                    \r\n              <td>\r\n               <v-select  \r\n                    class=\"mt-xs\"\r\n                    :options=\"['L','ml','g','mg','mcg','doses','vials']\"\r\n                      v-model=\"JSON.parse(selectedMedicine.quantity).unitperbottle\" \r\n                      disabled/>\r\n                 <b-form-group\r\n              label=\"\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n               <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getBottleValue(index)\"  v-model=\"selectedMedicine.quantity_unittotal\"></b-form-input>\r\n              </b-input-group>\r\n           <!--   <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"per tube\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\" @change=\"getBottleValue(index)\"  v-model=\"selectedMedicine.quantity_perbottle\" ></b-form-input>\r\n              </b-input-group> -->\r\n            </b-form-group> </td>                      \r\n            </tr>               \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div>\r\n\r\n                 <div v-if=\"selectedMedicine.packing_type=='TUBE'\" :key=\"componentKey\">\r\n                    <span class=\"fw-semi-bold text-primary\">Current Stock : <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/tubes.png?alt=media&token=be09cc67-f444-4e0e-8b09-226b3ecd3558' /> {{JSON.parse(selectedMedicine.quantity).unittotal}}{{JSON.parse(selectedMedicine.quantity).unitpertube}}  ({{JSON.parse(selectedMedicine.quantity).unittotal/JSON.parse(selectedMedicine.quantity).pertube}} tubes)</span>\r\n    <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n              \r\n             <tr> \r\n                       <td> <b-form-group\r\n              label=\"Tubes\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n              <select v-model=\"selectedMedicine.quantity_tubes\">\r\n    <option v-for=\"n in JSON.parse(selectedMedicine.quantity).tubes\" :value=\"n\">{{ n }}</option>\r\n  </select>\r\n            </b-form-group> </td>    \r\n                    \r\n              <td>\r\n               <v-select  \r\n                    class=\"mt-xs\"\r\n                    :options=\"['L','ml','g','mg','mcg','doses','vials']\"\r\n                      v-model=\"JSON.parse(selectedMedicine.quantity).unitpertube\" \r\n                      disabled/>\r\n                 <b-form-group\r\n              label=\"\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n            <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"  @change=\"getBottleValue(index)\"  v-model=\"selectedMedicine.quantity_unittotal\"></b-form-input>\r\n              </b-input-group>\r\n            </b-form-group> </td>                      \r\n            </tr>\r\n            <tr>\r\n                \r\n              </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div>\r\n\r\n                  <div v-if=\"selectedMedicine.packing_type=='Per supp' || selectedMedicine.packing_type=='SACHET' || selectedMedicine.packing_type=='Sachet' || selectedMedicine.packing_type=='box' || selectedMedicine.packing_type=='Set' || selectedMedicine.packing_type=='ROLLS' || selectedMedicine.packing_type=='PIECES' || selectedMedicine.packing_type=='pack' || selectedMedicine.packing_type=='Diskus' \"  :key=\"componentKey\">\r\n                     <span class=\"fw-semi-bold text-primary\">Current Stock : <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/units.png?alt=media&token=17211f17-6705-47e8-8cfe-e005409e5194' /> {{JSON.parse(selectedMedicine.quantity).units}} units</span>\r\n    <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n           \r\n                     <tbody>\r\n                      <tr>\r\n                 \r\n                 \r\n                       <td> <b-form-group\r\n              label=\"Units\"\r\n              label-for=\"append-field2\"\r\n              label-class=\"text-md-right px-3\"\r\n              label-cols=\"4\"\r\n              breakpoint=\"md\"\r\n            >\r\n             <select v-model=\"selectedMedicine.quantity_units\">\r\n    <option v-for=\"n in JSON.parse(selectedMedicine.quantity).units\" :value=\"n\">{{ n }}</option>\r\n  </select>\r\n          <!--    <b-input-group class=\"input-group-transparent\" id=\"append-field3\" append=\"total\">\r\n                <b-form-input class=\"input-transparent\"  type=\"number\"   @change=\"getWholeValue(index)\"  v-model=\"selectedMedicine.quantity_units\"></b-form-input>\r\n              </b-input-group> -->\r\n            </b-form-group> </td>      \r\n                            \r\n            </tr>\r\n          \r\n                \r\n              </tbody>\r\n            </table> \r\n                   \r\n  \r\n                </div> \r\n          \r\n          \r\n      \r\n         <b-button type=\"button\" variant=\"success\" class=\"btn-rounded\" @click=\"addToList()\" >\r\n             Verify & Add to List\r\n              </b-button> &nbsp;&nbsp;\r\n               <b-button type=\"button\" variant=\"danger\" class=\"btn-rounded\" @click=\"removeFromList()\" >\r\n             Remove Item\r\n              </b-button>\r\n\r\n                        \r\n        </b-card>\r\n\r\n       \r\n\r\n     <table  class=\"table table-bordered table-lg mt-lg mb-0\" v-if=\"allSelectedProducts.length!=0\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"hidden-sm-down\">Num.</th>\r\n                  <th>Product Name</th>\r\n                  <th>Product Type</th>\r\n                  <th class=\"hidden-sm-down\">Brand</th>\r\n                  <th class=\"\">Packing Type</th>\r\n                  <th class=\"\">Dispensed Qty</th>\r\n                   <th class=\"\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n                     <tbody>\r\n                <tr v-for=\"(product,index) in allSelectedProducts\" :key=\"product.product_name\">\r\n                  <td>{{index+1}}</td>\r\n                  <td> <b-badge variant=\"success\" class=\"text-gray-dark\">{{product.product_name}}</b-badge></td>\r\n                   <td>{{product.product_category}}</td>\r\n                    <td>{{product.manufacturer}}</td>\r\n                    <td>{{product.packing_type}}</td>\r\n                    <td v-if=\"product.packing_type=='TABLETS'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/pills.png?alt=media&token=70eb9961-0de4-4554-95fb-d8cad97a5d79' /> <!--{{product.quantity_strips}} strips  &amp;-->   <span v-if=\"product.quantity_strips==0 && product.quantity_tablets!=0\">{{product.quantity_tablets}} tablets</span>\r\n                         <span v-if=\"product.quantity_strips!=0 && product.quantity_tablets==0\">{{product.quantity_strips}} strips</span>\r\n                  <span v-if=\"product.quantity_strips!=0 && product.quantity_tablets!=0\">  {{product.quantity_strips}} strips  &amp; {{product.quantity_tablets}} tablets</span>\r\n                          </td>\r\n                                         <td v-if=\"product.packing_type=='Vial / per cc' || product.packing_type=='Vial / per 0.5 cc'  || product.packing_type=='vial per cc'\"> <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/injection.png?alt=media&token=d415a06a-ccaf-4c5d-88cc-2df1afbb6b51' />         <span v-if=\"product.quantity_mls==0 && product.quantity_vials!=0\">{{product.quantity_vials}} vials</span>\r\n                         <span v-if=\"product.quantity_mls!=0 && product.quantity_vials==0\">{{product.quantity_mls}} loose ML</span>\r\n                  <span v-if=\"product.quantity_mls!=0 && product.quantity_vials!=0\"> {{product.quantity_mls}} loose ML &amp; {{product.quantity_vials}} vials</span></td>\r\n                                         <td v-if=\"product.packing_type=='per vial' || product.packing_type=='Per vial'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/ampoule.png?alt=media&token=96a8f68c-caac-417f-9356-05e4831907f5' /> {{product.quantity_vials}} vials</td>\r\n                                         <td v-if=\"product.packing_type=='per ampule'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/ampoule.png?alt=media&token=96a8f68c-caac-417f-9356-05e4831907f5' /> {{product.quantity_ampules}} ampules</td>\r\n                                         <td v-if=\"product.packing_type=='BOTTLE'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/bottles.png?alt=media&token=784f4166-e1d3-4e53-b7e5-de05b90a20e1' /> <span v-if=\"product.quantity_unittotal==0 && product.quantity_bottles!=0\">{{product.quantity_bottles}} bottles</span>\r\n                         <span v-if=\"product.quantity_unittotal!=0 && product.quantity_bottles==0\">{{product.quantity_unittotal}}{{product.quantity_unitperbottle}}/ loose</span>\r\n                  <span v-if=\"product.quantity_unittotal!=0 && product.quantity_bottles!=0\"> {{product.quantity_unittotal}}{{product.quantity_unitperbottle}}/ loose &amp; {{product.quantity_bottles}} bottles</span> </td>\r\n                                            <td v-if=\"product.packing_type=='TUBE'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/tubes.png?alt=media&token=be09cc67-f444-4e0e-8b09-226b3ecd3558' />    <span v-if=\"product.quantity_unittotal==0 && product.quantity_tubes!=0\">{{product.quantity_tubes}} tubes</span>\r\n                         <span v-if=\"product.quantity_unittotal!=0 && product.quantity_tubes==0\">{{product.quantity_unittotal}}{{product.quantity_unitpertube}}/ loose</span>\r\n                  <span v-if=\"product.quantity_unittotal!=0 && product.quantity_tubes!=0\"> {{product.quantity_unittotal}}{{product.quantity_unitpertube}}/ loose &amp; {{product.quantity_tubes}} tubes</span></td>\r\n                                             <td v-if=\"product.packing_type=='Per supp' || product.packing_type=='SACHET' || product.packing_type=='Sachet' || product.packing_type=='box' || product.packing_type=='Set' || product.packing_type=='ROLLS' || product.packing_type=='PIECES' || product.packing_type=='pack' || product.packing_type=='Diskus' \"> <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/units.png?alt=media&token=17211f17-6705-47e8-8cfe-e005409e5194' /> {{product.quantity_units}} units </td>\r\n                       <td><b-button type=\"button\" variant=\"danger\" class=\"btn-rounded\" @click=\"removeFromAllProducts(index)\"> Remove Item </b-button></td>\r\n                </tr>\r\n              </tbody>\r\n            </table> \r\n     \r\n              </b-form>\r\n            </tab-content>\r\n            <tab-content title=\"Review & Confirmation\">\r\n            \r\n          \r\n\r\n           <table  class=\"table table-bordered table-lg mt-lg mb-0\" v-if=\"allSelectedProducts.length!=0\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"hidden-sm-down\">Num.</th>\r\n                  <th>Product Name</th>\r\n                  <th>Product Type</th>\r\n                  <th class=\"hidden-sm-down\">Brand</th>\r\n                   <th class=\"\">Packing Type</th>\r\n                  <th class=\"\">Dispensed Qty</th>\r\n                 \r\n                </tr>\r\n              </thead>\r\n                     <tbody>\r\n               <tr v-for=\"(product,index) in allSelectedProducts\" :key=\"product.product_name\">\r\n                  <td>{{index+1}}</td>\r\n                  <td> <b-badge variant=\"success\" class=\"text-gray-dark\">{{product.product_name}}</b-badge></td>\r\n                   <td>{{product.product_category}}</td>\r\n                    <td>{{product.manufacturer}}</td>\r\n                    <td>{{product.packing_type}}</td>\r\n                            <td v-if=\"product.packing_type=='TABLETS'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/pills.png?alt=media&token=70eb9961-0de4-4554-95fb-d8cad97a5d79' /> <!--{{product.quantity_strips}} strips  &amp;-->   <span v-if=\"product.quantity_strips==0 && product.quantity_tablets!=0\">{{product.quantity_tablets}} tablets</span>\r\n                         <span v-if=\"product.quantity_strips!=0 && product.quantity_tablets==0\">{{product.quantity_strips}} strips</span>\r\n                  <span v-if=\"product.quantity_strips!=0 && product.quantity_tablets!=0\">  {{product.quantity_strips}} strips  &amp; {{product.quantity_tablets}} tablets</span>\r\n                          </td>\r\n                                         <td v-if=\"product.packing_type=='Vial / per cc' || product.packing_type=='Vial / per 0.5 cc'  || product.packing_type=='vial per cc'\"> <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/injection.png?alt=media&token=d415a06a-ccaf-4c5d-88cc-2df1afbb6b51' />         <span v-if=\"product.quantity_mls==0 && product.quantity_vials!=0\">{{product.quantity_vials}} vials</span>\r\n                         <span v-if=\"product.quantity_mls!=0 && product.quantity_vials==0\">{{product.quantity_mls}} loose ML</span>\r\n                  <span v-if=\"product.quantity_mls!=0 && product.quantity_vials!=0\"> {{product.quantity_mls}} loose ML &amp; {{product.quantity_vials}} vials</span></td>\r\n                                         <td v-if=\"product.packing_type=='per vial' || product.packing_type=='Per vial'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/ampoule.png?alt=media&token=96a8f68c-caac-417f-9356-05e4831907f5' /> {{product.quantity_vials}} vials</td>\r\n                                         <td v-if=\"product.packing_type=='per ampule'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/ampoule.png?alt=media&token=96a8f68c-caac-417f-9356-05e4831907f5' /> {{product.quantity_ampules}} ampules</td>\r\n                                         <td v-if=\"product.packing_type=='BOTTLE'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/bottles.png?alt=media&token=784f4166-e1d3-4e53-b7e5-de05b90a20e1' /> <span v-if=\"product.quantity_unittotal==0 && product.quantity_bottles!=0\">{{product.quantity_bottles}} bottles</span>\r\n                         <span v-if=\"product.quantity_unittotal!=0 && product.quantity_bottles==0\">{{product.quantity_unittotal}}{{product.quantity_unitperbottle}}/ loose</span>\r\n                  <span v-if=\"product.quantity_unittotal!=0 && product.quantity_bottles!=0\"> {{product.quantity_unittotal}}{{product.quantity_unitperbottle}}/ loose &amp; {{product.quantity_bottles}} bottles</span> </td>\r\n                                            <td v-if=\"product.packing_type=='TUBE'\"><img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/tubes.png?alt=media&token=be09cc67-f444-4e0e-8b09-226b3ecd3558' />    <span v-if=\"product.quantity_unittotal==0 && product.quantity_tubes!=0\">{{product.quantity_tubes}} tubes</span>\r\n                         <span v-if=\"product.quantity_unittotal!=0 && product.quantity_tubes==0\">{{product.quantity_unittotal}}{{product.quantity_unitpertube}}/ loose</span>\r\n                  <span v-if=\"product.quantity_unittotal!=0 && product.quantity_tubes!=0\"> {{product.quantity_unittotal}}{{product.quantity_unitpertube}}/ loose &amp; {{product.quantity_tubes}} tubes</span></td>\r\n                                             <td v-if=\"product.packing_type=='Per supp' || product.packing_type=='SACHET' || product.packing_type=='Sachet' || product.packing_type=='box' || product.packing_type=='Set' || product.packing_type=='ROLLS' || product.packing_type=='PIECES' || product.packing_type=='pack' || product.packing_type=='Diskus' \"> <img src='https://firebasestorage.googleapis.com/v0/b/kka-pj.appspot.com/o/units.png?alt=media&token=17211f17-6705-47e8-8cfe-e005409e5194' /> {{product.quantity_units}} units </td>\r\n                   \r\n                </tr>\r\n              </tbody>\r\n            </table> \r\n\r\n       <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.patientId}}</h3>\r\n          Patient Identification Number (MRN Number)\r\n          </div>\r\n           <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.total_amount}}</h3>\r\n           Total Amount\r\n          </div>\r\n          \r\n\r\n      \r\n              <b-form-group>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"checkbox-default\"\r\n                    v-model=\"accept\"\r\n                  />\r\n                   <label for=\"checkbox-default\">I have reviewed the contents and am ready to proceed</label>\r\n                </b-form-group>\r\n            </tab-content>\r\n            <div class=\"loader\" v-if=\"loadingWizard\"></div>\r\n    <div v-if=\"errorMsg\">\r\n      <span class=\"error\">{{errorMsg}}</span>\r\n    </div>\r\n        </form-wizard>\r\n      </Widget>\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n<style>\r\nspan.error{\r\n  color:#e74c3c;\r\n  font-size:20px;\r\n  display:flex;\r\n  justify-content:center;\r\n}\r\n</style>\r\n<script>\r\n\r\nimport Vue from 'vue';\r\nimport vSelect from 'vue-select';\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vue2Dropzone from 'vue2-dropzone';\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\r\nimport { select2CountriesData, select2ShipmentData, cardTypesData } from './data';\r\nimport rns from '../../assets/cards/rns.png';\r\nimport moment from 'moment';\r\nimport VueBarcode from 'vue-barcode-master';\r\nimport VueQrcode from 'vue-qrcode-master';\r\nconst { Messenger } = window;\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\nexport default {\r\n  name: 'FormWizardPage',\r\n  components: { Widget, vSelect,vueDropzone: vue2Dropzone},\r\n  data() {\r\n    return {\r\n      staffId:window.localStorage.getItem('id'),\r\n      liveInventory:new Array(),\r\n      componentKey:0,\r\n      allSelectedProducts:[],\r\n        clinicId: this.$route.params.clinicId,\r\n        loadingWizard: false,\r\n         errorMsg: null,\r\n         count: 0,\r\n      isLoading:false,\r\n       data:{\r\n        vendor:'',\r\n        order_number:'',\r\n       attachments:[],\r\n        comments:''\r\n \r\n      },\r\n      accept:false,\r\n    progress:1,\r\n    vendorInfo:[],\r\n    medicineInfo:[],\r\n    data2:{\r\n\r\n    },\r\n    selectedMedicine:null,\r\n    data3:{\r\n\r\n    },\r\n    \r\n            dropzoneOptions: {\r\n          url: 'https://backend.medicodesolution.com/development/precheckin/attachments/upload',\r\n          thumbnailWidth: 150,\r\n          maxFilesize: 10.0,\r\n           maxFiles: 3,\r\n          addRemoveLinks: true,\r\n          //autoProcessQueue: false\r\n          \r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n  selectedMedicine: function (medicine) {\r\n\r\n \r\n  }\r\n},\r\n  methods: {\r\n     async getInventory() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/development/all/inventory/'+this.clinicId);\r\n   this.liveInventory = response.data.inventoryInfo; \r\n   \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n     onBarcodeScanned (barcode) {\r\n       \r\n       var self=this;\r\n       console.log(barcode)\r\n       var liveInventory = self.liveInventory; \r\n        self.selectedMedicine = null;\r\n       liveInventory.forEach(function(entry) {\r\n    if(entry.productId==barcode){\r\n    self.selectedMedicine = entry;\r\n    }\r\n   else if(entry.barcode==barcode){\r\n self.selectedMedicine = entry;\r\n    }\r\n    else if(entry.internal_barcode==barcode){\r\n self.selectedMedicine = entry;\r\n    }\r\n\r\n    \r\n});\r\n      \r\n\r\n      },\r\n    removeFromList(){\r\n      this.selectedMedicine=null;\r\n      return Messenger().post({type:'success',message:'Item removed!',hideAfter: 3,showCloseButton:true});\r\n    },\r\n      removeFromAllProducts(index){\r\n      this.allSelectedProducts.splice(index);\r\n      return Messenger().post({type:'success',message:'Item removed!',hideAfter: 3,showCloseButton:true});\r\n    },\r\n    addToList(){\r\n        var id=this.selectedMedicine.productId;\r\n      var i=0;var fail=false;\r\n               this.allSelectedProducts.forEach(function(entry) {\r\n    if(entry.productId==id){\r\n       fail=true;\r\n    }\r\n    i++;\r\n});\r\n    if(fail==true && i==this.allSelectedProducts.length){\r\n return Messenger().post({type:'error',message:'Product already added to the list!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n    if(this.selectedMedicine.packing_type=='TABLETS'){\r\n  \r\n     \r\n      if(this.selectedMedicine.quantity_tablets==undefined  && this.selectedMedicine.quantity_strips==undefined){\r\n         return Messenger().post({type:'error',message:'Select valid dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n      if(this.selectedMedicine.quantity_tablets == undefined) { this.selectedMedicine.quantity_tablets=0; }\r\n      if(this.selectedMedicine.quantity_strips == undefined) { this.selectedMedicine.quantity_strips=0; }\r\n      var qty = JSON.parse(this.selectedMedicine.quantity);\r\n      this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_tablets);\r\n      if(this.selectedMedicine.quantity_strips != undefined) { this.selectedMedicine.dispensed_total += (Number(this.selectedMedicine.quantity_strips)* Number(qty.tabletsperstrip)); }\r\n         if(this.selectedMedicine.dispensed_total>qty.tablets){\r\n return Messenger().post({type:'error',message:'Insufficient dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n  \r\n   \r\n    }\r\n    if(this.selectedMedicine.packing_type=='Vial / per cc' || this.selectedMedicine.packing_type=='Vial / per 0.5 cc' || this.selectedMedicine.packing_type=='per vial' || this.selectedMedicine.packing_type=='Per vial' || this.selectedMedicine.packing_type=='vial per cc'){\r\n\r\n     \r\n      if(this.selectedMedicine.quantity_vials==undefined  && this.selectedMedicine.quantity_mls==undefined){\r\n         return Messenger().post({type:'error',message:'Select valid dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n      if(this.selectedMedicine.quantity_vials == undefined) { this.selectedMedicine.quantity_vials=0; }\r\n      if(this.selectedMedicine.quantity_mls == undefined) { this.selectedMedicine.quantity_mls=0; }\r\n      var qty = JSON.parse(this.selectedMedicine.quantity);\r\n      this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_mls);\r\n          if(this.selectedMedicine.quantity_mls != undefined) { this.selectedMedicine.dispensed_total += Number(this.selectedMedicine.quantity_vials* (qty.mlpervial)); }        \r\n         if(this.selectedMedicine.dispensed_total>qty.mls){\r\n return Messenger().post({type:'error',message:'Insufficient dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n\r\n    }\r\n      if(this.selectedMedicine.packing_type=='per ampule'){\r\n\r\n     \r\n      if(this.selectedMedicine.quantity_ampules==undefined ){\r\n         return Messenger().post({type:'error',message:'Select valid dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n      if(this.selectedMedicine.quantity_ampules == undefined) { this.selectedMedicine.quantity_ampules=0; }\r\n      var qty = JSON.parse(this.selectedMedicine.quantity);\r\n      this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_ampules);\r\n       \r\n         if(this.selectedMedicine.dispensed_total>qty.ampules){\r\n return Messenger().post({type:'error',message:'Insufficient dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n\r\n    }\r\n       if(this.selectedMedicine.packing_type=='Per supp' || this.selectedMedicine.packing_type=='SACHET' || this.selectedMedicine.packing_type=='Sachet' || this.selectedMedicine.packing_type=='box' || this.selectedMedicine.packing_type=='Set' || this.selectedMedicine.packing_type=='ROLLS' || this.selectedMedicine.packing_type=='PIECES' || this.selectedMedicine.packing_type=='pack' || this.selectedMedicine.packing_type=='Diskus' ){\r\n\r\n     \r\n      if(this.selectedMedicine.quantity_units==undefined ){\r\n         return Messenger().post({type:'error',message:'Select valid dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n      if(this.selectedMedicine.quantity_units == undefined) { this.selectedMedicine.quantity_units=0; }\r\n      var qty = JSON.parse(this.selectedMedicine.quantity);\r\n      this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_units);\r\n       \r\n         if(this.selectedMedicine.dispensed_total>qty.units){\r\n return Messenger().post({type:'error',message:'Insufficient dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n\r\n    }\r\n  /*    if(this.selectedMedicine.dispensed_quantity==null || this.selectedMedicine.dispensed_quantity==undefined || this.selectedMedicine.dispensed_quantity=='' || this.selectedMedicine.dispensed_quantity==0){\r\n       return Messenger().post({type:'error',message:'Valid dispensed quantity required!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n        if(this.selectedMedicine.dispensed_quantity>this.selectedMedicine.stock_quantity ){\r\n       return Messenger().post({type:'error',message:'Dispense quantity must not be higher than stock quantity!',hideAfter: 3,showCloseButton:true});\r\n      }  */\r\n   if(this.selectedMedicine.packing_type=='BOTTLE'){\r\n\r\n     \r\n      if(this.selectedMedicine.quantity_bottles==undefined  && this.selectedMedicine.quantity_unittotal==undefined){\r\n         return Messenger().post({type:'error',message:'Select valid dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n      if(this.selectedMedicine.quantity_bottles == undefined) { this.selectedMedicine.quantity_bottles=0; }\r\n      if(this.selectedMedicine.quantity_unittotal == undefined) { this.selectedMedicine.quantity_unittotal=0; }\r\n     this.selectedMedicine.quantity_unitperbottle = JSON.parse(this.selectedMedicine.quantity).unitperbottle;\r\n      var qty = JSON.parse(this.selectedMedicine.quantity);\r\n      this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_unittotal);\r\n  \r\n          if(this.selectedMedicine.quantity_bottles != undefined) { this.selectedMedicine.dispensed_total += Number(this.selectedMedicine.quantity_bottles* (qty.perbottle)); }        \r\n    \r\n         if(this.selectedMedicine.dispensed_total>qty.unittotal){\r\n return Messenger().post({type:'error',message:'Insufficient dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n\r\n    }\r\n       if(this.selectedMedicine.packing_type=='TUBE'){\r\n\r\n     \r\n      if(this.selectedMedicine.quantity_tubes==undefined  && this.selectedMedicine.quantity_unittotal==undefined){\r\n         return Messenger().post({type:'error',message:'Select valid dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n      if(this.selectedMedicine.quantity_tubes == undefined) { this.selectedMedicine.quantity_tubes=0; }\r\n      if(this.selectedMedicine.quantity_unittotal == undefined) { this.selectedMedicine.quantity_unittotal=0; }\r\n       this.selectedMedicine.quantity_unitpertube = JSON.parse(this.selectedMedicine.quantity).unitpertube;\r\n      var qty = JSON.parse(this.selectedMedicine.quantity);\r\n      this.selectedMedicine.dispensed_total = Number(this.selectedMedicine.quantity_unittotal);\r\n          if(this.selectedMedicine.quantity_tubes != undefined) { this.selectedMedicine.dispensed_total += Number(this.selectedMedicine.quantity_tubes* (qty.pertube)); }        \r\n            console.log(this.selectedMedicine.dispensed_total)\r\n         if(this.selectedMedicine.dispensed_total>qty.unittotal){\r\n return Messenger().post({type:'error',message:'Insufficient dispense quantity!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n\r\n    }\r\n   if(fail==false && i==this.allSelectedProducts.length){\r\n      this.allSelectedProducts.push(this.selectedMedicine);\r\n      this.selectedMedicine=null;\r\n      return Messenger().post({type:'success',message:'Item added to list!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n\r\n    \r\n    \r\n   \r\n    },\r\nasync onSearch(search, loading) {\r\n  if(escape(search)=='' || escape(search)==null || escape(search)==undefined){\r\n   return this.medicineInfo;\r\n  }\r\n    loading(true);\r\n    const response = await this.axios.get(`https://backend.medicodesolution.com/development/search/liveInventory/`+ this.clinicId +`/${escape(search)}`);\r\n    this.medicineInfo = response.data.medicineInfo;\r\n   // console.log(this.medicineInfo)\r\n    loading(false);\r\n    },\r\n     successEvent (file) {\r\n        this.data.attachments.push(file.xhr.response);\r\n      },\r\n onComplete: function(){\r\n          submit()\r\n        },\r\n        setLoading: function(value) {\r\n            this.loadingWizard = value\r\n        },\r\n        handleValidation: function(isValid, tabIndex){\r\n       //    console.log('Tab: '+tabIndex+ ' valid: '+isValid)\r\n        },\r\n        handleErrorMessage: function(errorMsg){\r\n          this.errorMsg = errorMsg\r\n        },\r\n        navigateToDashboard(){\r\n        this.$router.push({name:'Dashboard' });\r\n    },\r\n      validOne:function() {\r\n     return new Promise((resolve, reject) => {\r\n           if(this.data.patientId=='' || this.data.patientId==null){\r\n        \r\n         \treject('Enter Patient MRN to continue..')\r\n         }\r\n             if(this.data.total_amount=='' || this.data.total_amount==null){\r\n        \r\n         \treject('Key in total amount to continue..')\r\n         }\r\n         \r\n       \r\n       else{\r\n        //  console.log('vendor:'+this.data.vendor.name+'--- order number:'+this.data.order_number+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments);\r\n          resolve(true)\r\n         }   \r\n     \r\n     })\r\n    },\r\n      validTwo:function() {\r\n     return new Promise((resolve, reject) => {\r\n               if(this.data.patientId=='' || this.data.patientId==null){\r\n        \r\n        \treject('Enter Patient MRN to continue..')\r\n         }\r\n             if(this.data.total_amount=='' || this.data.total_amount==null){\r\n        \r\n         \treject('Key in total amount to continue..')\r\n         }\r\n         \r\n             if(this.allSelectedProducts.length==0 ){\r\n        \r\n         \treject('Add at least 1 (one) product to continue..')\r\n         }\r\n             /* if(this.data.subtotal=='' || this.data.subtotal==null){\r\n        \r\n         \treject('Key in Subtotal (RM) to continue..')\r\n         }\r\n           if(this.data.tax_rate=='' || this.data.tax_rate==null){\r\n        \r\n         \treject('Key in Tax Rate (RM) to continue..')\r\n         }\r\n\r\n      if(this.data.total_amount=='' || this.data.total_amount==null){\r\n        \r\n         \treject('Key in Total Amount (RM) to continue..')\r\n         }\r\n           if(this.data.comments=='' || this.data.comments==null){\r\n        \r\n         \treject('Key in Comments..')\r\n         } */\r\n\r\n       \r\n       \r\n       else{\r\n        //  console.log('vendor:'+this.data.vendor.name+'--- order number:'+this.data.order_number+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments);\r\n          resolve(true)\r\n         }   \r\n     \r\n     })\r\n    },\r\n\r\n  submit(){\r\n    var self=this;\r\n    self.isLoading = true;\r\n    if(self.accept==false){\r\n       self.isLoading = false;\r\n      return Messenger().post({type:'error',message:'Tick confirmation checkbox to continue!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n  \r\n   var finalProducts = new Array();\r\n\r\n  var index=0;var length = self.allSelectedProducts.length;\r\n \r\n//  console.log(this.allSelectedProducts);\r\n   self.allSelectedProducts.forEach(function(entry) {\r\n   \r\n   \r\n    \r\n if(entry.packing_type=='TABLETS'){\r\n  var quantity = {\r\n     tablets:Number(entry.quantity_tablets),\r\n     strips:Number(entry.quantity_strips),\r\n     totaltablets:Number(entry.dispensed_total)\r\n   };\r\n finalProducts.push({clinicId:self.clinicId,productId:entry.productId,quantity:JSON.stringify(quantity),packing_type:entry.packing_type});\r\n   }\r\n    if(entry.packing_type=='Per vial' || entry.packing_type=='per vial' || entry.packing_type=='Vial / per cc' || entry.packing_type=='Vial / per 0.5 cc' || entry.packing_type=='vial per cc'){\r\n  var quantity = {\r\n    \r\n     vials:Number(entry.quantity_vials),\r\n     mls:Number(entry.quantity_mls),\r\n    totalmls:Number(entry.dispensed_total)\r\n   };\r\n finalProducts.push({clinicId:self.clinicId,productId:entry.productId,quantity:JSON.stringify(quantity),packing_type:entry.packing_type});\r\n   }\r\n     if(entry.packing_type=='per ampule'){\r\n  var quantity = {\r\n    ampules:Number(entry.quantity_ampules),\r\n    totalampules:Number(entry.dispensed_total)\r\n   };\r\n finalProducts.push({clinicId:self.clinicId,productId:entry.productId,quantity:JSON.stringify(quantity),packing_type:entry.packing_type});\r\n   }\r\n        if(entry.packing_type=='BOTTLE'){\r\n  var quantity = {\r\n\r\n     bottles:Number(entry.quantity_bottles),\r\n     unittotal:Number(entry.quantity_unittotal),\r\n    totalunits:Number(entry.dispensed_total)\r\n   };\r\n  finalProducts.push({clinicId:self.clinicId,productId:entry.productId,quantity:JSON.stringify(quantity),packing_type:entry.packing_type});\r\n   }\r\n     if(entry.packing_type=='TUBE'){\r\n  var quantity = {\r\n    tubes:Number(entry.quantity_tubes),\r\n     unittotal:Number(entry.quantity_unittotal),\r\n    totalunits:Number(entry.dispensed_total)\r\n   };\r\n finalProducts.push({clinicId:self.clinicId,productId:entry.productId,quantity:JSON.stringify(quantity),packing_type:entry.packing_type});\r\n   }\r\n\r\n      if(entry.packing_type=='Per supp' || entry.packing_type=='SACHET' || entry.packing_type=='Sachet' || entry.packing_type=='box' || entry.packing_type=='Set' || entry.packing_type=='ROLLS' || entry.packing_type=='PIECES' || entry.packing_type=='pack' || entry.packing_type=='Diskus'){\r\n  var quantity = {\r\n     units:Number(entry.quantity_units),\r\n    totalunits:Number(entry.dispensed_total)\r\n   };\r\n finalProducts.push({clinicId:self.clinicId,productId:entry.productId,quantity:JSON.stringify(quantity),packing_type:entry.packing_type});\r\n   }\r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n    index++;\r\n});\r\n \r\n    if(index==length){\r\n     // return console.log(finalProducts);\r\n self.axios.post('https://backend.medicodesolution.com/development/checkout/submit', {\r\n          clinicId:self.clinicId,\r\n          patientId:self.data.patientId,\r\n          total_amount:self.data.total_amount,\r\n          allProducts:JSON.stringify(self.allSelectedProducts),\r\n          finalProducts:finalProducts,\r\n          staffId:self.staffId\r\n\r\n    })\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                                   self.isLoading = false;\r\n                   Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                   return self.navigateToDashboard();\r\n         \r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                 Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n              return self.navigateToDashboard();\r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n               Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   return self.navigateToDashboard();\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                self.isLoading = false;\r\n                 Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true}); \r\n                     return self.navigateToDashboard();               \r\n                }); \r\n\r\n\r\n    }\r\n   \r\n  },\r\n  },\r\n     mounted(){\r\n      this.getInventory();\r\n  this.$barcodeScanner.init(this.onBarcodeScanned);\r\n \r\n \r\n   },\r\n    created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n};\r\n</script>\r\n\r\n<style src=\"./ClinicPreCheckIn.scss\" lang=\"scss\" />\r\n"],"sourceRoot":"src\\pages\\Accounts"}]}