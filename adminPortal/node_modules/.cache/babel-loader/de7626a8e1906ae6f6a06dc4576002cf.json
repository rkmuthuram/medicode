{"remainingRequest":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\thread-loader\\dist\\cjs.js!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Dashboard\\components\\TaskContainer\\TaskContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Dashboard\\components\\TaskContainer\\TaskContainer.vue","mtime":1556797291000},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1591157760290},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport Widget from '@/components/Widget/Widget';\nimport Task from '../Task/Task';\nexport default {\n  name: 'TaskContainer',\n  props: ['data'],\n  components: {\n    Widget: Widget,\n    Task: Task\n  },\n  data: function data() {\n    return {\n      tasks: this.data\n    };\n  },\n  methods: {\n    toggleTaskState: function toggleTaskState(index) {\n      var task = this.tasks.find(function (_ref) {\n        var id = _ref.id;\n        return id === index;\n      });\n      task.completed = !task.completed;\n      Vue.set(this.tasks, index, task);\n    }\n  },\n  created: function created() {\n    var tasks = this.data;\n    tasks.map(function (task) {\n      task.completed = false; // eslint-disable-line\n\n      return task;\n    });\n    this.tasks = tasks;\n  }\n};",{"version":3,"sources":["TaskContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,MAAA,MAAA,4BAAA;AACA,OAAA,IAAA,MAAA,cAAA;AAEA,eAAA;AACA,QAAA,eADA;AAEA,SAAA,CAAA,MAAA,CAFA;AAGA,cAAA;AAAA,kBAAA;AAAA;AAAA,GAHA;AAIA,MAJA,kBAIA;AACA,WAAA;AACA,aAAA,KAAA;AADA,KAAA;AAGA,GARA;AASA,WAAA;AACA,mBADA,2BACA,KADA,EACA;AACA,UAAA,OAAA,KAAA,KAAA,CAAA,IAAA,CAAA;AAAA,YAAA,EAAA,QAAA,EAAA;AAAA,eAAA,OAAA,KAAA;AAAA,OAAA,CAAA;AACA,WAAA,SAAA,GAAA,CAAA,KAAA,SAAA;AAEA,UAAA,GAAA,CAAA,KAAA,KAAA,EAAA,KAAA,EAAA,IAAA;AACA;AANA,GATA;AAiBA,SAjBA,qBAiBA;AACA,QAAA,QAAA,KAAA,IAAA;AAEA,UAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,WAAA,SAAA,GAAA,KAAA,CADA,CACA;;AACA,aAAA,IAAA;AACA,KAHA;AAKA,SAAA,KAAA,GAAA,KAAA;AACA;AA1BA,CAAA","sourcesContent":["<template>\n  <Widget\n    className=\"mb-xlg pb-2\"\n    bodyClass=\"task-container mt\"\n    :title=\"`\n      <div>\n        <h5>Today&apos;s Tasks\n          <span class='badge badge-pill badge-success fw-normal pull-right mt-xs'>\n            ${tasks.length}\n          </span>\n        </h5>\n        <p class='text-primary mb-0'><small>\n          ${tasks.filter(t => t.completed).length} of ${tasks.length} completed\n        </small></p>\n      </div>`\"\n    customHeader\n  >\n    <Task\n      v-for=\"task in tasks\"\n      :task=\"task\"\n      :completed=\"task.completed\"\n      :toggle=\"toggleTaskState\"\n      :key=\"task.id\"\n    />\n    <b-button variant=\"transparent\" class=\"w-100 text-center text-muted\">\n      See All <i class=\"la la-arrow-down\" />\n    </b-button>\n  </Widget>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Widget from '@/components/Widget/Widget';\nimport Task from '../Task/Task';\n\nexport default {\n  name: 'TaskContainer',\n  props: ['data'],\n  components: { Widget, Task },\n  data() {\n    return {\n      tasks: this.data,\n    };\n  },\n  methods: {\n    toggleTaskState(index) {\n      const task = this.tasks.find(({ id }) => id === index);\n      task.completed = !task.completed;\n\n      Vue.set(this.tasks, index, task);\n    },\n  },\n  created() {\n    const tasks = this.data;\n\n    tasks.map((task) => {\n      task.completed = false; // eslint-disable-line\n      return task;\n    });\n\n    this.tasks = tasks;\n  },\n};\n</script>\n"],"sourceRoot":"src\\pages\\Dashboard\\components\\TaskContainer"}]}