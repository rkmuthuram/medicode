{"remainingRequest":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\babel-loader\\lib\\index.js!F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\kka-pj\\adminPortal\\src\\pages\\Accounts\\CheckInView.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\src\\pages\\Accounts\\CheckInView.vue","mtime":1597296848581},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\sunrisers\\\\kka-pj\\\\adminPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\n\nimport Widget from '@/components/Widget/Widget';\nimport vSelect from 'vue-select';\nimport mock from './mock';\nimport VueBarcode from 'vue-barcode-master';\nimport VueQrcode from 'vue-qrcode-master';\nvar _window = window,\n    Messenger = _window.Messenger;\n/* eslint-disable */\n\nfunction initializationMessengerCode() {\n  (function () {\n    var $,\n        FlatMessage,\n        spinner_template,\n        __hasProp = {}.hasOwnProperty,\n        __extends = function __extends(child, parent) {\n      for (var key in parent) {\n        if (__hasProp.call(parent, key)) child[key] = parent[key];\n      }\n\n      function ctor() {\n        this.constructor = child;\n      }\n\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    };\n\n    $ = jQuery;\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\n\n    FlatMessage = function (_super) {\n      __extends(FlatMessage, _super);\n\n      function FlatMessage() {\n        return FlatMessage.__super__.constructor.apply(this, arguments);\n      }\n\n      FlatMessage.prototype.template = function (opts) {\n        var $message;\n        $message = FlatMessage.__super__.template.apply(this, arguments);\n        $message.append($(spinner_template));\n        return $message;\n      };\n\n      return FlatMessage;\n    }(Messenger.Message);\n\n    Messenger.themes.air = {\n      Message: FlatMessage\n    };\n  }).call(window);\n}\n/* eslint-enable */\n\n\nexport default {\n  name: 'FormValidation',\n  components: {\n    Widget: Widget,\n    vSelect: vSelect,\n    barcode: VueBarcode,\n    qrcode: VueQrcode\n  },\n  data: function data() {\n    return {\n      mock: mock,\n      data: {\n        attachments: []\n      },\n      checkInId: this.$route.params.checkInId,\n      isLoading: false,\n      locationClasses: 'messenger-fixed messenger-on-top messenger-on-right'\n    };\n  },\n  methods: {\n    getQuantityColor: function getQuantityColor(ordered, received) {\n      if (received >= ordered) {\n        return 'success';\n      } else {\n        return 'warning';\n      }\n    },\n    getCheckIn: function () {\n      var _getCheckIn = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.axios.get('https://backend.medicodesolution.com/staging/checkin/' + this.checkInId);\n\n              case 3:\n                response = _context.sent;\n                this.data = response.data.checkInInfo[0];\n                this.data.allProducts = JSON.parse(this.data.allProducts);\n                console.log(this.data.allProducts);\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      return function getCheckIn() {\n        return _getCheckIn.apply(this, arguments);\n      };\n    }()\n  },\n  mounted: function mounted() {\n    this.getCheckIn();\n  },\n  created: function created() {\n    initializationMessengerCode();\n    Messenger.options = {\n      extraClasses: this.locationClasses,\n      theme: 'air',\n      showCloseButton: true\n    };\n  }\n};",{"version":3,"sources":["CheckInView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\">YOU ARE HERE</li>\r\n      <li class=\"breadcrumb-item active\">Check In Dashboard </li>\r\n    </ol>\r\n\r\n\r\n    <b-row>\r\n      <b-col md=\"8\" xs=\"12\">\r\n        <b-tabs class=\"mb-lg\">\r\n          <b-tab title=\"Information\" active>\r\n                 <fieldset>\r\n   <legend>Complete Information</legend>\r\n\r\n     <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.preCheckInId}}</h3>\r\n            Pre Check In Record\r\n          </div>\r\n           <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.invoiceId}}</h3>\r\n            Invoice Number \r\n          </div>\r\n           <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.totalAmount}}</h3>\r\n            Total Amount (RM)\r\n          </div>\r\n           <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.comments}}</h3>\r\n            Comments\r\n          </div>\r\n            <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.attachments}}</h3>\r\n            Attachments\r\n          </div>\r\n\r\n\r\n        \r\n          <table  class=\"table table-bordered table-lg mt-lg mb-0\" >\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"hidden-sm-down\">Num.</th>\r\n                  <th>Product Name</th>\r\n                  <th>Product Type</th>\r\n                  <th class=\"hidden-sm-down\">Brand</th>\r\n                  <th class=\"\">Purchase Order Qty</th>\r\n                  <th class=\"\">Delivered Qty</th>\r\n                  <th class=\"\">Expiry Date</th>\r\n                   <th class=\"\">Manufacturer Barcode</th>\r\n                    <th class=\"\">Internal QR Code</th>\r\n                </tr>\r\n              </thead>\r\n                     <tbody>\r\n                <tr v-for=\"(product,index) in data.allProducts\" :key=\"product.product_name\">\r\n                  <td>{{index+1}}</td>\r\n                  <td> <b-badge variant=\"success\" class=\"text-gray-dark\">{{product.product_name}}</b-badge></td>\r\n                   <td>{{product.product_category}}</td>\r\n                    <td>{{product.manufacturer}}</td>\r\n                       <td>{{product.quantity}}</td>\r\n                           <td><b-badge v-if=\"product.delivered_quantity\" :variant=\"getQuantityColor(product.quantity,product.delivered_quantity)\" class=\"text-gray-dark\">{{product.delivered_quantity}}</b-badge> <b-badge v-if=\"!product.delivered_quantity\" variant=\"danger\" class=\"text-gray-dark\">NA</b-badge></td>\r\n                               <td><input type=\"date\" v-model=\"product.expiry_date\" v-if=\"product.delivered_quantity>0\"> <b-badge v-if=\"!product.delivered_quantity\" variant=\"danger\" class=\"text-gray-dark\">NA</b-badge></td>\r\n                                   \r\n                                       <td><barcode v-bind:value=\"product.manufacturer_barcode\" format=\"CODE128\" :options=\"{ height:100 }\" v-if=\"product.manufacturer_barcode\">\r\n  Show this if the rendering fails.\r\n</barcode><span v-if=\"!product.manufacturer_barcode\">No record</span></td>\r\n <td><qrcode :value=\"product.internal_qrcode\" :options=\"{ height:100 }\" v-if=\"product.internal_qrcode\"></qrcode> <span v-if=\"!product.internal_qrcode\">No record</span></td>\r\n                     \r\n                </tr>\r\n              </tbody>\r\n            </table> \r\n                 </fieldset>\r\n          </b-tab>\r\n          \r\n        </b-tabs>\r\n      </b-col>\r\n      <b-col lg='8' xs='12'>\r\n       \r\n\r\n      \r\n      </b-col>\r\n    </b-row>\r\n    \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vSelect from 'vue-select';\r\nimport mock from './mock';\r\nimport VueBarcode from 'vue-barcode-master';\r\nimport VueQrcode from 'vue-qrcode-master';\r\nconst { Messenger } = window;\r\n\r\n/* eslint-disable */\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\n\r\n\r\nexport default {\r\n  name: 'FormValidation',\r\n  components: { Widget,vSelect,barcode: VueBarcode,qrcode:VueQrcode},\r\n  data() {\r\n    return {\r\n            mock,\r\n      data:{\r\n        attachments:[]\r\n      },\r\n      checkInId: this.$route.params.checkInId,\r\n      isLoading:false,\r\n      locationClasses: 'messenger-fixed messenger-on-top messenger-on-right',\r\n    };\r\n  },\r\n  \r\n  methods: {\r\n        getQuantityColor(ordered,received){\r\n    if(received>=ordered){\r\n      return 'success';\r\n    }\r\n    else{\r\n      return 'warning';\r\n    }\r\n  },\r\n   async getCheckIn() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/checkin/'+ this.checkInId)\r\n   this.data = response.data.checkInInfo[0];\r\n  this.data.allProducts = JSON.parse(this.data.allProducts);\r\n     console.log(this.data.allProducts)\r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n  },\r\n   mounted(){\r\n     this.getCheckIn();\r\n         \r\n     \r\n  \r\n      \r\n   },\r\n     created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":"src\\pages\\Accounts"}]}