{"remainingRequest":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\thread-loader\\dist\\cjs.js!F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\babel-loader\\lib\\index.js!F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\src\\pages\\Bookings\\Scheduling.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\src\\pages\\Bookings\\Scheduling.vue","mtime":1594668771107},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1591157760290},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:\\\\antorse\\\\dbc-asia-phase2\\\\STAGING_dbc_phase_2\\\\physioPortal\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/asyncToGenerator\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'pretty-checkbox/src/pretty-checkbox.scss';\nimport Widget from '@/components/Widget/Widget';\nimport Vue from 'vue';\nimport PrettyCheckbox from 'pretty-checkbox-vue';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nexport default {\n  name: 'FormValidation',\n  components: {\n    Widget: Widget,\n    PrettyCheckbox: PrettyCheckbox,\n    vSelect: vSelect,\n    moment: moment\n  },\n  data: function data() {\n    return {\n      onDutyCount: 0,\n      notOnDutyCount: 0,\n      onDutyPercentage: 0,\n      updateMode: false,\n      capacity: {},\n      entry: [{\n        date: '',\n        sessions: [{\n          id: '1a',\n          label: '08:00 AM',\n          value: '08:00',\n          capacity: [{}]\n        }, {\n          id: '1b',\n          label: '09:00 AM',\n          value: '09:00',\n          capacity: [{}]\n        }, {\n          id: '1c',\n          label: '10:00 AM',\n          value: '10:00',\n          capacity: [{}]\n        }, {\n          id: '1d',\n          label: '11:00 AM',\n          value: '11:00',\n          capacity: [{}]\n        }, {\n          id: '1e',\n          label: '12:00 PM',\n          value: '12:00',\n          capacity: [{}]\n        }, {\n          id: '1f',\n          label: '01:00 PM',\n          value: '13:00',\n          capacity: [{}]\n        }, {\n          id: '1g',\n          label: '02:00 PM',\n          value: '14:00',\n          capacity: [{}]\n        }, {\n          id: '1h',\n          label: '03:00 PM',\n          value: '15:00',\n          capacity: [{}]\n        }, {\n          id: '1i',\n          label: '04:00 PM',\n          value: '16:00',\n          capacity: [{}]\n        }, {\n          id: '1j',\n          label: '05:00 PM',\n          value: '17:00',\n          capacity: [{}]\n        }, {\n          id: '1k',\n          label: '06:00 PM',\n          value: '18:00',\n          capacity: [{}]\n        }, {\n          id: '1l',\n          label: '07:00 PM',\n          value: '19:00',\n          capacity: [{}]\n        }, {\n          id: '1m',\n          label: '08:00 PM',\n          value: '20:00',\n          capacity: [{}]\n        }]\n      }],\n      data: {\n        sessions: {\n          physio: []\n        }\n      },\n      selection: {\n        branch: '',\n        year: '',\n        month: ''\n      },\n      dates: [],\n      years: [{\n        label: '2020',\n        Year: 2020\n      }, {\n        label: '2021',\n        Year: 2021\n      }],\n      months: [{\n        label: 'January',\n        Month: 0\n      }, {\n        label: 'February',\n        Month: 1\n      }, {\n        label: 'March',\n        Month: 2\n      }, {\n        label: 'April',\n        Month: 3\n      }, {\n        label: 'May',\n        Month: 4\n      }, {\n        label: 'June',\n        Month: 5\n      }, {\n        label: 'July',\n        Month: 6\n      }, {\n        label: 'August',\n        Month: 7\n      }, {\n        label: 'September',\n        Month: 8\n      }, {\n        label: 'October',\n        Month: 9\n      }, {\n        label: 'November',\n        Month: 10\n      }, {\n        label: 'December',\n        Month: 11\n      }],\n      physioInfo: []\n    };\n  },\n  methods: {\n    updateSchedule: function updateSchedule() {\n      var self = this;\n      self.axios.patch('https://staging-app-dot-dbc-asia-269419.appspot.com/bookingsAvailibility', {\n        year: self.selection.year.Year,\n        month: self.selection.month.Month,\n        branch: self.selection.branch,\n        data: self.entry,\n        data2: self.capacity\n      }).then(function (response) {\n        if (response.status == 200 && response.data.success) {\n          self.isLoading = false;\n          return Messenger().post({\n            message: response.data.success,\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        } else {\n          if (response.data.error) {\n            self.isLoading = false;\n            return Messenger().post({\n              type: 'error',\n              message: response.data.error,\n              hideAfter: 3,\n              showCloseButton: true\n            });\n          } else {\n            self.isLoading = false;\n            return Messenger().post({\n              type: 'error',\n              message: response.error,\n              hideAfter: 3,\n              showCloseButton: true\n            });\n          }\n        }\n      }).catch(function (error) {\n        self.isLoading = false;\n        return Messenger().post({\n          type: 'error',\n          message: error,\n          hideAfter: 3,\n          showCloseButton: true\n        });\n      });\n    },\n    submitSchedule: function submitSchedule() {\n      var self = this;\n      self.axios.post('https://staging-app-dot-dbc-asia-269419.appspot.com/bookingsAvailibility', {\n        year: self.selection.year.Year,\n        month: self.selection.month.Month,\n        branch: self.selection.branch,\n        data: self.entry,\n        data2: self.capacity\n      }).then(function (response) {\n        if (response.status == 200 && response.data.success) {\n          self.isLoading = false;\n          self.getSchedule();\n          return Messenger().post({\n            message: response.data.success,\n            hideAfter: 3,\n            showCloseButton: true\n          });\n        } else {\n          if (response.data.error) {\n            self.isLoading = false;\n            return Messenger().post({\n              type: 'error',\n              message: response.data.error,\n              hideAfter: 3,\n              showCloseButton: true\n            });\n          } else {\n            self.isLoading = false;\n            return Messenger().post({\n              type: 'error',\n              message: response.error,\n              hideAfter: 3,\n              showCloseButton: true\n            });\n          }\n        }\n      }).catch(function (error) {\n        self.isLoading = false;\n        return Messenger().post({\n          type: 'error',\n          message: error,\n          hideAfter: 3,\n          showCloseButton: true\n        });\n      });\n    },\n    checkCapacity: function checkCapacity(entryIndex, sessionIndex, staffId) {\n      if (this.capacity[entryIndex + '_' + sessionIndex + '_' + staffId] == false || this.capacity[entryIndex + '_' + sessionIndex + '_' + staffId] == undefined) {\n        this.entry[entryIndex].sessions[sessionIndex].capacity[staffId] = false;\n      } else {\n        this.entry[entryIndex].sessions[sessionIndex].capacity[staffId] = true;\n      }\n    },\n    getOnDutyCount: function getOnDutyCount(entryIndex, sessionIndex) {\n      var capacity = this.entry[entryIndex].sessions[sessionIndex].capacity;\n      return capacity.filter(Boolean).length - 1;\n    },\n    getStyle: function getStyle(entryIndex, sessionIndex) {\n      var capacity = this.entry[entryIndex].sessions[sessionIndex].capacity;\n      var onDuty = capacity.filter(Boolean).length - 1;\n      var totalPhysios = this.physioInfo.length;\n      var percentage = onDuty / totalPhysios * 100;\n\n      if (percentage < 50) {\n        return \"background-color:#FF0000\";\n      } else return \"background-color:#00FF00\";\n    },\n    getOnDutyCountPercentage: function getOnDutyCountPercentage(entryIndex, sessionIndex) {\n      var capacity = this.entry[entryIndex].sessions[sessionIndex].capacity;\n      var onDuty = capacity.filter(Boolean).length - 1;\n      var totalPhysios = this.physioInfo.length;\n      var percentage = onDuty / totalPhysios * 100;\n      return percentage;\n    },\n    getNotOnDutyCount: function getNotOnDutyCount(entryIndex, sessionIndex) {\n      var capacity = this.entry[entryIndex].sessions[sessionIndex].capacity;\n      var onDuty = capacity.filter(Boolean).length - 1;\n      return this.physioInfo.length - onDuty;\n    },\n    getDaysInMonthUTC: function getDaysInMonthUTC(month, year) {\n      var i = 0;\n      var date = new Date(Date.UTC(year, month, 1));\n      var days = [];\n\n      while (date.getUTCMonth() === month) {\n        //  console.log(i);\n        // days.push(new Date(date));\n        if (i == 0) {\n          this.entry[i] = {\n            date: '',\n            sessions: [{\n              id: '1a',\n              label: '08:00 AM',\n              value: '08:00',\n              capacity: [{}]\n            }, {\n              id: '1b',\n              label: '09:00 AM',\n              value: '09:00',\n              capacity: [{}]\n            }, {\n              id: '1c',\n              label: '10:00 AM',\n              value: '10:00',\n              capacity: [{}]\n            }, {\n              id: '1d',\n              label: '11:00 AM',\n              value: '11:00',\n              capacity: [{}]\n            }, {\n              id: '1e',\n              label: '12:00 PM',\n              value: '12:00',\n              capacity: [{}]\n            }, {\n              id: '1f',\n              label: '01:00 PM',\n              value: '13:00',\n              capacity: [{}]\n            }, {\n              id: '1g',\n              label: '02:00 PM',\n              value: '14:00',\n              capacity: [{}]\n            }, {\n              id: '1h',\n              label: '03:00 PM',\n              value: '15:00',\n              capacity: [{}]\n            }, {\n              id: '1i',\n              label: '04:00 PM',\n              value: '16:00',\n              capacity: [{}]\n            }, {\n              id: '1j',\n              label: '05:00 PM',\n              value: '17:00',\n              capacity: [{}]\n            }, {\n              id: '1k',\n              label: '06:00 PM',\n              value: '18:00',\n              capacity: [{}]\n            }, {\n              id: '1l',\n              label: '07:00 PM',\n              value: '19:00',\n              capacity: [{}]\n            }, {\n              id: '1m',\n              label: '08:00 PM',\n              value: '20:00',\n              capacity: [{}]\n            }]\n          };\n        }\n\n        if (this.entry[i] === undefined) {\n          this.entry[i] = {\n            date: '',\n            sessions: [{\n              id: '1a',\n              label: '08:00 AM',\n              value: '08:00',\n              capacity: [{}]\n            }, {\n              id: '1b',\n              label: '09:00 AM',\n              value: '09:00',\n              capacity: [{}]\n            }, {\n              id: '1c',\n              label: '10:00 AM',\n              value: '10:00',\n              capacity: [{}]\n            }, {\n              id: '1d',\n              label: '11:00 AM',\n              value: '11:00',\n              capacity: [{}]\n            }, {\n              id: '1e',\n              label: '12:00 PM',\n              value: '12:00',\n              capacity: [{}]\n            }, {\n              id: '1f',\n              label: '01:00 PM',\n              value: '13:00',\n              capacity: [{}]\n            }, {\n              id: '1g',\n              label: '02:00 PM',\n              value: '14:00',\n              capacity: [{}]\n            }, {\n              id: '1h',\n              label: '03:00 PM',\n              value: '15:00',\n              capacity: [{}]\n            }, {\n              id: '1i',\n              label: '04:00 PM',\n              value: '16:00',\n              capacity: [{}]\n            }, {\n              id: '1j',\n              label: '05:00 PM',\n              value: '17:00',\n              capacity: [{}]\n            }, {\n              id: '1k',\n              label: '06:00 PM',\n              value: '18:00',\n              capacity: [{}]\n            }, {\n              id: '1l',\n              label: '07:00 PM',\n              value: '19:00',\n              capacity: [{}]\n            }, {\n              id: '1m',\n              label: '08:00 PM',\n              value: '20:00',\n              capacity: [{}]\n            }]\n          };\n        }\n\n        this.entry[i].date = new Date(date);\n        i++;\n        date.setUTCDate(date.getUTCDate() + 1);\n      }\n\n      return days;\n    },\n    getSchedule: function () {\n      var _getSchedule = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response, check, _response;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.updateMode = false;\n                this.capacity = {};\n                this.entry = [{\n                  date: '',\n                  sessions: [{\n                    id: '1a',\n                    label: '08:00 AM',\n                    value: '08:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1b',\n                    label: '09:00 AM',\n                    value: '09:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1c',\n                    label: '10:00 AM',\n                    value: '10:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1d',\n                    label: '11:00 AM',\n                    value: '11:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1e',\n                    label: '12:00 PM',\n                    value: '12:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1f',\n                    label: '01:00 PM',\n                    value: '13:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1g',\n                    label: '02:00 PM',\n                    value: '14:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1h',\n                    label: '03:00 PM',\n                    value: '15:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1i',\n                    label: '04:00 PM',\n                    value: '16:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1j',\n                    label: '05:00 PM',\n                    value: '17:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1k',\n                    label: '06:00 PM',\n                    value: '18:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1l',\n                    label: '07:00 PM',\n                    value: '19:00',\n                    capacity: [{}]\n                  }, {\n                    id: '1m',\n                    label: '08:00 PM',\n                    value: '20:00',\n                    capacity: [{}]\n                  }]\n                }];\n                _context.prev = 3;\n                _context.next = 6;\n                return this.axios.get('https://staging-app-dot-dbc-asia-269419.appspot.com/bookingsAvailibility/' + this.selection.year.Year + '/' + this.selection.month.Month + '/' + this.selection.branch);\n\n              case 6:\n                response = _context.sent;\n\n                if (!response.data.error) {\n                  _context.next = 21;\n                  break;\n                }\n\n                check = this.getDaysInMonthUTC(this.selection.month.Month, this.selection.year.Year);\n                _context.prev = 9;\n                _context.next = 12;\n                return this.axios.get('https://staging-app-dot-dbc-asia-269419.appspot.com/physio/branch/' + this.selection.branch);\n\n              case 12:\n                _response = _context.sent;\n                this.physioInfo = _response.data.physioInfo;\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](9);\n                console.error(_context.t0);\n\n              case 19:\n                _context.next = 24;\n                break;\n\n              case 21:\n                this.updateMode = true;\n                this.entry = JSON.parse(response.data.scheduleInfo[0].temp_data1);\n                this.capacity = JSON.parse(response.data.scheduleInfo[0].temp_data2);\n\n              case 24:\n                _context.next = 29;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t1 = _context[\"catch\"](3);\n                console.error(_context.t1);\n\n              case 29:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 26], [9, 16]]);\n      }));\n\n      return function getSchedule() {\n        return _getSchedule.apply(this, arguments);\n      };\n    }(),\n    filter: function filter(username) {\n      return username.split(\" \")[0];\n    },\n    toReadableDate: function toReadableDate(date) {\n      var datee = moment(date).format('dddd , MMMM Do YYYY');\n      return datee;\n    }\n  },\n  mounted: function mounted() {}\n};",{"version":3,"sources":["Scheduling.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\">YOU ARE HERE</li>\r\n      <li class=\"breadcrumb-item active\">Smart Scheduler</li>\r\n    </ol>\r\n\r\n\r\n    <b-row>\r\n\r\n      <b-col lg='12' xs='12'>\r\n        <Widget\r\n        \r\n        >\r\n           \r\n                            <v-select\r\n                                id=\"corestatus\"\r\n                                class=\"mt-xs\"\r\n                                placeholder=\"Branch\"\r\n                                :options=\"['Ampang','Bangi','Jalan Kuching','TTDI']\"\r\n                               v-model=\"selection.branch\"\r\n                               @change=\"getSchedule\"\r\n                            />\r\n                           <v-select :options=\"years\"    v-model=\"selection.year\"   placeholder=\"Year\"   @change=\"getSchedule\" label=\"label\" :value=\"Year\" >\r\n    <template slot=\"option\" slot-scope=\"option\">\r\n        {{ option.label }}\r\n    </template>\r\n  </v-select>\r\n  <v-select :options=\"months\"    v-model=\"selection.month\" placeholder=\"Month\"   @change=\"getSchedule\" label=\"label\" :value=\"Month\">\r\n    <template slot=\"option\" slot-scope=\"option\">\r\n        {{ option.label }}\r\n    </template>\r\n  </v-select>\r\n          \r\n                     \r\n              \r\n                     \r\n                            <br>\r\n                    <b-button variant=\"danger\" type=\"submit\" class=\"mr-xs\" v-if=\"selection.branch!='' && selection.year!='' && selection.month!='' && updateMode==true\" @click=\"updateSchedule()\">Update Schedule for {{selection.month.label}} / {{selection.year.Year}} / {{selection.branch}}</b-button>\r\n                      <b-button variant=\"danger\" type=\"submit\" class=\"mr-xs\" v-if=\"selection.branch!='' && selection.year!='' && selection.month!='' && updateMode==false\" @click=\"submitSchedule()\">Create Schedule for {{selection.month.label}} / {{selection.year.Year}} / {{selection.branch}}</b-button>\r\n                    <br>\r\n\r\n <table class=\"table table-striped\" v-if=\"selection.branch!='' && selection.year!='' && selection.month!=''\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"hidden-sm-down\">Date</th>\r\n                  <th>TIMINGS</th>\r\n                  <th>PHYSIOS</th>\r\n                  <th class=\"hidden-sm-down\">SUMMARY</th>\r\n         \r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(date,entryIndex) in entry\" >\r\n                  <td>{{entryIndex+1}})  {{ toReadableDate(entry[entryIndex].date) }}</td>\r\n                  <td>\r\n                   <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                 \r\n                 \r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"session in entry[entryIndex].sessions\" >\r\n                  <td>{{session.label}}</td>\r\n\r\n                \r\n             \r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n                  </td>\r\n                  <td>\r\n                       <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                 \r\n                 \r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(session,sessionIndex) in entry[entryIndex].sessions\" >\r\n                 \r\n                  <td v-for=\"physio in physioInfo\"> <p-check class=\"p-switch p-fill\" v-model=\"capacity[entryIndex+'_'+sessionIndex+'_'+physio.id]\"  @change=\"checkCapacity(entryIndex,sessionIndex,physio.id)\"  >{{ filter(physio.username) }}</p-check>\r\n\r\n                  \r\n                 \r\n                  </td>\r\n             \r\n                \r\n             \r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n                  </td>\r\n               <td>\r\n                    \r\n                   <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                 \r\n                 \r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                   <tr v-for=\"(session,sessionIndex) in entry[entryIndex].sessions\" >\r\n                                   <td :style=\"getStyle(entryIndex,sessionIndex)\">On Duty : {{getOnDutyCount(entryIndex,sessionIndex)}} | Unavailable : {{getNotOnDutyCount(entryIndex,sessionIndex)}} | Current Bookings : TBD | Capacity : {{getOnDutyCountPercentage(entryIndex,sessionIndex)}}% </td>\r\n                \r\n             \r\n                </tr>\r\n           \r\n              </tbody>\r\n            </table>\r\n               \r\n                   </td>\r\n             \r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Widget>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'pretty-checkbox/src/pretty-checkbox.scss';\r\nimport Widget from '@/components/Widget/Widget';\r\nimport Vue from 'vue';\r\nimport PrettyCheckbox from 'pretty-checkbox-vue';\r\nimport vSelect from 'vue-select';\r\nimport moment from 'moment';\r\nexport default {\r\n  name: 'FormValidation',\r\n  components: { Widget,PrettyCheckbox,vSelect,moment},\r\n  data() {\r\n    return {\r\n      onDutyCount:0,\r\n      notOnDutyCount:0,\r\n      onDutyPercentage:0,\r\n      updateMode:false,\r\n      capacity:{},\r\n      entry:[{\r\n                date:'',\r\n               sessions: [\r\n                        {\r\n                            id: '1a',\r\n                            label: '08:00 AM',\r\n                            value:'08:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                        {\r\n                            id: '1b',\r\n                            label: '09:00 AM',\r\n                            value:'09:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1c',\r\n                            label: '10:00 AM',\r\n                            value:'10:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1d',\r\n                            label: '11:00 AM',\r\n                            value:'11:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1e',\r\n                            label: '12:00 PM',\r\n                            value:'12:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1f',\r\n                            label: '01:00 PM',\r\n                            value:'13:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1g',\r\n                            label: '02:00 PM',\r\n                            value:'14:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1h',\r\n                            label: '03:00 PM',\r\n                            value:'15:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1i',\r\n                            label: '04:00 PM',\r\n                            value:'16:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1j',\r\n                            label: '05:00 PM',\r\n                            value:'17:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1k',\r\n                            label: '06:00 PM',\r\n                            value:'18:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1l',\r\n                            label: '07:00 PM',\r\n                            value:'19:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1m',\r\n                            label: '08:00 PM',\r\n                            value:'20:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                     \r\n                    ],\r\n        \r\n \r\n      }],\r\n      data:{\r\n      sessions:{\r\n        physio:[]\r\n      }\r\n        \r\n      },\r\n      selection:{\r\n        branch:'',\r\n        year:'',\r\n        month:''\r\n      },\r\n      dates:[],\r\n         years: [\r\n                        {\r\n                            label: '2020',\r\n                            Year:2020\r\n                        },\r\n                        {\r\n                            label: '2021',\r\n                            Year:2021\r\n                        }\r\n                    ],\r\n        months: [\r\n                        {\r\n                            label: 'January',\r\n                            Month:0\r\n                        },\r\n                        {\r\n                            label: 'February',\r\n                            Month:1\r\n                        },\r\n                         {\r\n                            label: 'March',\r\n                            Month:2\r\n                        },\r\n                         {\r\n                            label: 'April',\r\n                            Month:3\r\n                        },\r\n                        {\r\n                            label: 'May',\r\n                            Month:4\r\n                        },\r\n                       {\r\n                            label: 'June',\r\n                            Month:5\r\n                        },\r\n                      {\r\n                            label: 'July',\r\n                            Month:6\r\n                        },\r\n                       {\r\n                            label: 'August',\r\n                            Month:7\r\n                        },\r\n                        {\r\n                            label: 'September',\r\n                            Month:8\r\n                        },\r\n                        {\r\n                            label: 'October',\r\n                            Month:9\r\n                        },\r\n                         {\r\n                            label: 'November',\r\n                            Month:10\r\n                        },\r\n                       {\r\n                            label: 'December',\r\n                            Month:11\r\n                        },\r\n                         \r\n                    ],\r\n          physioInfo:[],\r\n          \r\n    };\r\n  },\r\n  methods: {\r\n    updateSchedule(){\r\n\r\n     var self=this;\r\n   \r\n         self.axios.patch('https://staging-app-dot-dbc-asia-269419.appspot.com/bookingsAvailibility', {\r\n                  year:self.selection.year.Year,\r\n                  month:self.selection.month.Month,\r\n                  branch:self.selection.branch,\r\n                  data:self.entry,\r\n                  data2:self.capacity\r\n                })\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                self.isLoading = false;\r\n         \r\n            return Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n              \r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n          \r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n                 return Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                  self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true});                \r\n                }); \r\n\r\n\r\n    },\r\n    submitSchedule(){\r\n    \r\n  var self=this;\r\n   \r\n         self.axios.post('https://staging-app-dot-dbc-asia-269419.appspot.com/bookingsAvailibility', {\r\n                  year:self.selection.year.Year,\r\n                  month:self.selection.month.Month,\r\n                  branch:self.selection.branch,\r\n                  data:self.entry,\r\n                  data2:self.capacity\r\n                })\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                self.isLoading = false;\r\n                self.getSchedule();\r\n            return Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n              \r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n          \r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n                 return Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                  self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true});                \r\n                }); \r\n\r\n    },\r\n      checkCapacity(entryIndex,sessionIndex,staffId){\r\n \r\n      if(this.capacity[entryIndex+'_'+sessionIndex+'_'+staffId]==false || this.capacity[entryIndex+'_'+sessionIndex+'_'+staffId]==undefined){\r\n      \r\n        this.entry[entryIndex].sessions[sessionIndex].capacity[staffId] = false;\r\n      }\r\n      else {\r\n     \r\n        this.entry[entryIndex].sessions[sessionIndex].capacity[staffId] = true;\r\n      }\r\n      \r\n    },\r\ngetOnDutyCount(entryIndex,sessionIndex){\r\n  var capacity =  this.entry[entryIndex].sessions[sessionIndex].capacity;\r\n  return capacity.filter(Boolean).length-1;\r\n},\r\ngetStyle(entryIndex,sessionIndex){\r\n  var capacity =  this.entry[entryIndex].sessions[sessionIndex].capacity;\r\n  var onDuty = capacity.filter(Boolean).length-1;\r\n  var totalPhysios = this.physioInfo.length;\r\n  var percentage = (onDuty/totalPhysios)*100;\r\n  if(percentage<50){\r\n    return \"background-color:#FF0000\";\r\n  }\r\n  else return \"background-color:#00FF00\";\r\n},\r\ngetOnDutyCountPercentage(entryIndex,sessionIndex){\r\n  var capacity =  this.entry[entryIndex].sessions[sessionIndex].capacity;\r\n  var onDuty = capacity.filter(Boolean).length-1;\r\n  var totalPhysios = this.physioInfo.length;\r\n  var percentage = (onDuty/totalPhysios)*100;\r\n  return percentage;\r\n},\r\ngetNotOnDutyCount(entryIndex,sessionIndex){\r\n  var capacity =  this.entry[entryIndex].sessions[sessionIndex].capacity;\r\n  var onDuty = capacity.filter(Boolean).length-1;\r\n  return this.physioInfo.length - onDuty;\r\n},\r\ngetDaysInMonthUTC(month, year) {\r\n\r\n  var i=0;\r\n  var date = new Date(Date.UTC(year, month, 1));\r\n  var days = [];\r\n  while (date.getUTCMonth() === month) {\r\n  //  console.log(i);\r\n    // days.push(new Date(date));\r\n       if(i==0){\r\n      \r\n      this.entry[i] =  {\r\n                date:'',\r\n               sessions: [\r\n                        {\r\n                            id: '1a',\r\n                            label: '08:00 AM',\r\n                            value:'08:00',\r\n                            capacity:[{\r\n\r\n                            }]\r\n                        },\r\n                        {\r\n                            id: '1b',\r\n                            label: '09:00 AM',\r\n                            value:'09:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1c',\r\n                            label: '10:00 AM',\r\n                            value:'10:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1d',\r\n                            label: '11:00 AM',\r\n                            value:'11:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1e',\r\n                            label: '12:00 PM',\r\n                            value:'12:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1f',\r\n                            label: '01:00 PM',\r\n                            value:'13:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1g',\r\n                            label: '02:00 PM',\r\n                            value:'14:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1h',\r\n                            label: '03:00 PM',\r\n                            value:'15:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1i',\r\n                            label: '04:00 PM',\r\n                            value:'16:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1j',\r\n                            label: '05:00 PM',\r\n                            value:'17:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1k',\r\n                            label: '06:00 PM',\r\n                            value:'18:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1l',\r\n                            label: '07:00 PM',\r\n                            value:'19:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1m',\r\n                            label: '08:00 PM',\r\n                            value:'20:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                     \r\n                    ],\r\n        \r\n \r\n      };\r\n    }\r\n    if(this.entry[i]===undefined){\r\n      \r\n      this.entry[i] =  {\r\n                date:'',\r\n               sessions: [\r\n                        {\r\n                            id: '1a',\r\n                            label: '08:00 AM',\r\n                            value:'08:00',\r\n                            capacity:[{\r\n\r\n                            }]\r\n                        },\r\n                        {\r\n                            id: '1b',\r\n                            label: '09:00 AM',\r\n                            value:'09:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1c',\r\n                            label: '10:00 AM',\r\n                            value:'10:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1d',\r\n                            label: '11:00 AM',\r\n                            value:'11:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1e',\r\n                            label: '12:00 PM',\r\n                            value:'12:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1f',\r\n                            label: '01:00 PM',\r\n                            value:'13:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1g',\r\n                            label: '02:00 PM',\r\n                            value:'14:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1h',\r\n                            label: '03:00 PM',\r\n                            value:'15:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1i',\r\n                            label: '04:00 PM',\r\n                            value:'16:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1j',\r\n                            label: '05:00 PM',\r\n                            value:'17:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1k',\r\n                            label: '06:00 PM',\r\n                            value:'18:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1l',\r\n                            label: '07:00 PM',\r\n                            value:'19:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1m',\r\n                            label: '08:00 PM',\r\n                            value:'20:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                     \r\n                    ],\r\n        \r\n \r\n      };\r\n    }\r\n     this.entry[i].date = new Date(date);\r\n     i++;\r\n    date.setUTCDate(date.getUTCDate() + 1);\r\n   \r\n  }\r\n  return days;\r\n},\r\n\r\n   async getSchedule() {\r\n     this.updateMode = false;\r\n     this.capacity= {};\r\n     this.entry = [{\r\n                date:'',\r\n               sessions: [\r\n                        {\r\n                            id: '1a',\r\n                            label: '08:00 AM',\r\n                            value:'08:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                        {\r\n                            id: '1b',\r\n                            label: '09:00 AM',\r\n                            value:'09:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1c',\r\n                            label: '10:00 AM',\r\n                            value:'10:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1d',\r\n                            label: '11:00 AM',\r\n                            value:'11:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1e',\r\n                            label: '12:00 PM',\r\n                            value:'12:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1f',\r\n                            label: '01:00 PM',\r\n                            value:'13:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1g',\r\n                            label: '02:00 PM',\r\n                            value:'14:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1h',\r\n                            label: '03:00 PM',\r\n                            value:'15:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1i',\r\n                            label: '04:00 PM',\r\n                            value:'16:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1j',\r\n                            label: '05:00 PM',\r\n                            value:'17:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1k',\r\n                            label: '06:00 PM',\r\n                            value:'18:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1l',\r\n                            label: '07:00 PM',\r\n                            value:'19:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                         {\r\n                            id: '1m',\r\n                            label: '08:00 PM',\r\n                            value:'20:00',\r\n                            capacity:[{\r\n                              \r\n                            }]\r\n                        },\r\n                     \r\n                    ],\r\n        \r\n \r\n      }];\r\n  try {\r\n   const response = await this.axios.get('https://staging-app-dot-dbc-asia-269419.appspot.com/bookingsAvailibility/' + this.selection.year.Year + '/' + this.selection.month.Month + '/' + this.selection.branch);\r\n   if(response.data.error){\r\n  var check = this.getDaysInMonthUTC(this.selection.month.Month,this.selection.year.Year);\r\n  try {\r\n\r\n   const response = await this.axios.get('https://staging-app-dot-dbc-asia-269419.appspot.com/physio/branch/' + this.selection.branch)\r\n   this.physioInfo = response.data.physioInfo;\r\n\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n   }\r\n   else{\r\n     this.updateMode=true;\r\n  \r\n     this.entry = JSON.parse(response.data.scheduleInfo[0].temp_data1);\r\n     this.capacity = JSON.parse(response.data.scheduleInfo[0].temp_data2);\r\n\r\n\r\n   }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n},\r\nfilter (username){\r\n    return username.split(\" \")[0];\r\n},\r\ntoReadableDate(date){\r\n  \r\n var datee = moment(date).format('dddd , MMMM Do YYYY');\r\n \r\n return datee;\r\n}\r\n  },\r\nmounted(){\r\n  \r\n\r\n      \r\n   },\r\n};\r\n</script>\r\n\r\n\r\n"],"sourceRoot":"src\\pages\\Bookings"}]}