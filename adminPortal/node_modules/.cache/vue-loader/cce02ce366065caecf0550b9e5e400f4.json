{"remainingRequest":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\src\\pages\\Bookings\\BookingsView.vue?vue&type=template&id=e59ce840&","dependencies":[{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\src\\pages\\Bookings\\BookingsView.vue","mtime":1594308451986},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1591157760591},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\antorse\\dbc-asia-phase2\\STAGING_dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"ol\", { staticClass: \"breadcrumb\" }, [\n        _c(\"li\", { staticClass: \"breadcrumb-item\" }, [_vm._v(\"YOU ARE HERE\")]),\n        _c(\"li\", { staticClass: \"breadcrumb-item active\" }, [\n          _vm._v(\"View Booking - #\" + _vm._s(_vm.data.token))\n        ])\n      ]),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { lg: \"8\", xs: \"12\" } },\n            [\n              _c(\n                \"b-tabs\",\n                { staticClass: \"mb-lg\" },\n                [\n                  _c(\n                    \"b-tab\",\n                    { attrs: { title: \"Profile\", active: \"\" } },\n                    [\n                      _c(\"b-form\", [\n                        _c(\n                          \"fieldset\",\n                          [\n                            _c(\"legend\", [_vm._v(\"Booking Information\")]),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"username\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                  Booking Reference ID\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:5\",\n                                      expression: \"'required|min:5'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.token,\n                                      expression: \"data.token\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.token },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"token\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"tel_no\",\n                                  description: \"\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n               Member\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:7\",\n                                      expression: \"'required|min:7'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.user_name,\n                                      expression: \"data.user_name\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.user_name },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"user_name\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"tel_no\",\n                                  description: \"\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                 Member ID\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:7\",\n                                      expression: \"'required|min:7'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.user_id,\n                                      expression: \"data.user_id\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.user_id },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"user_id\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"username\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                  Branch\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:5\",\n                                      expression: \"'required|min:5'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.branch,\n                                      expression: \"data.branch\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.branch },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"branch\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"username\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                Appointment Date\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:5\",\n                                      expression: \"'required|min:5'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.date,\n                                      expression: \"data.date\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.date },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"date\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"username\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                 Appointment Time\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:5\",\n                                      expression: \"'required|min:5'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.time,\n                                      expression: \"data.time\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.time },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"time\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"tel_no\",\n                                  description: \"\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                  Comments\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:7\",\n                                      expression: \"'required|min:7'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.comments,\n                                      expression: \"data.comments\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.comments },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"comments\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"username\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                  Physio Assigned\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:5\",\n                                      expression: \"'required|min:5'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.physio_name,\n                                      expression: \"data.physio_name\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.physio_name },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"physio_name\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"tel_no\",\n                                  description: \"\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                  Registration Date\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:7\",\n                                      expression: \"'required|min:7'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.create_time,\n                                      expression: \"data.create_time\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.create_time },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"create_time\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              {\n                                attrs: {\n                                  horizontal: \"\",\n                                  \"label-cols\": 3,\n                                  \"label-breakpoint\": \"md\",\n                                  \"label-for\": \"last_updated\",\n                                  description: \"\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"div\",\n                                  { attrs: { slot: \"label\" }, slot: \"label\" },\n                                  [\n                                    _vm._v(\n                                      \"\\n                  Last Updated\\n                \"\n                                    )\n                                  ]\n                                ),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|min:7\",\n                                      expression: \"'required|min:7'\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.data.update_time,\n                                      expression: \"data.update_time\"\n                                    }\n                                  ],\n                                  class: {\n                                    \"form-control\": true,\n                                    \"is-invalid\": _vm.errors.has(\"minlength\")\n                                  },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"change\",\n                                    name: \"minlength\",\n                                    type: \"text\",\n                                    disabled: \"\"\n                                  },\n                                  domProps: { value: _vm.data.update_time },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.data,\n                                        \"update_time\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            ),\n                            _c(\n                              \"b-form-group\",\n                              [\n                                _c(\"label\", { attrs: { for: \"otherActive\" } }, [\n                                  _vm._v(\"Additional Comments/Requests\")\n                                ]),\n                                _c(\"textarea-autosize\", {\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    placeholder:\n                                      \"eg: I am looking for knee treatment.\",\n                                    \"min-height\": 35,\n                                    id: \"otherActive\",\n                                    disabled: \"\"\n                                  },\n                                  model: {\n                                    value: _vm.data.comments,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.data, \"comments\", $$v)\n                                    },\n                                    expression: \"data.comments\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _c(\"b-form-group\", [\n                              _c(\n                                \"div\",\n                                { attrs: { slot: \"label\" }, slot: \"label\" },\n                                [\n                                  _vm._v(\n                                    \"\\n           Uploaded Attachments (Relevant medical documents:- MRI/Xray Report, Dr Referral, Insurance Card(GL), etc)\\n                \"\n                                  )\n                                ]\n                              ),\n                              _vm.data.attachments != \"\"\n                                ? _c(\n                                    \"ul\",\n                                    { attrs: { id: \"example-2\" } },\n                                    _vm._l(_vm.data.attachments, function(\n                                      item,\n                                      index\n                                    ) {\n                                      return _c(\"li\", [\n                                        _c(\"p\", [\n                                          _vm._v(\" \" + _vm._s(index + 1) + \")\"),\n                                          _c(\n                                            \"a\",\n                                            {\n                                              attrs: {\n                                                href: item,\n                                                target: \"_blank\"\n                                              }\n                                            },\n                                            [_vm._v(_vm._s(item))]\n                                          )\n                                        ])\n                                      ])\n                                    })\n                                  )\n                                : _vm._e(),\n                              _vm.data.attachments == \"\"\n                                ? _c(\"span\", [_vm._v(\"None\")])\n                                : _vm._e()\n                            ])\n                          ],\n                          1\n                        )\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"Widget\",\n                { attrs: { customHeader: \"\" } },\n                [\n                  _c(\n                    \"fieldset\",\n                    [\n                      _c(\"legend\", [_vm._v(\"Booking Management \")]),\n                      _vm.data.status == 0\n                        ? _c(\"b-badge\", { attrs: { variant: \"success\" } }, [\n                            _vm._v(\"STATUS : UPCOMING\")\n                          ])\n                        : _vm._e(),\n                      _vm.data.status == 1\n                        ? _c(\"b-badge\", { attrs: { variant: \"success\" } }, [\n                            _vm._v(\"STATUS : SESSION COMPLETED\")\n                          ])\n                        : _vm._e(),\n                      _vm.data.status == -1\n                        ? _c(\"b-badge\", { attrs: { variant: \"danger\" } }, [\n                            _vm._v(\"STATUS : SESSION CANCELLED\")\n                          ])\n                        : _vm._e(),\n                      _vm.data.status == -2\n                        ? _c(\"b-badge\", { attrs: { variant: \"danger\" } }, [\n                            _vm._v(\"STATUS : SESSION NO SHOW\")\n                          ])\n                        : _vm._e(),\n                      _c(\"br\"),\n                      _c(\"br\"),\n                      _vm.data.checkIn == 0\n                        ? _c(\"b-badge\", { attrs: { variant: \"danger\" } }, [\n                            _vm._v(\"CHECK IN : INCOMPLETE\")\n                          ])\n                        : _vm._e(),\n                      _vm.data.checkIn == 1\n                        ? _c(\"b-badge\", { attrs: { variant: \"success\" } }, [\n                            _vm._v(\"CHECK IN : COMPLETE\")\n                          ])\n                        : _vm._e(),\n                      _c(\"br\")\n                    ],\n                    1\n                  ),\n                  _c(\"br\"),\n                  _c(\"br\"),\n                  _vm.isLoading == false &&\n                  _vm.data.status == 0 &&\n                  _vm.data.checkIn == 0\n                    ? _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"btn-rounded float\",\n                          attrs: { type: \"submit\", variant: \"secondary\" },\n                          on: { click: _vm.completeCheckIn }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n             Complete Check In\\n              \"\n                          )\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm._v(\"   \\n                 \"),\n                  _vm.isLoading == false &&\n                  _vm.data.status == 0 &&\n                  _vm.data.checkIn == 1\n                    ? _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"btn-rounded float\",\n                          attrs: { type: \"submit\", variant: \"secondary\" },\n                          on: { click: _vm.cancelCheckIn }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n             Cancel Check In\\n              \"\n                          )\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm._v(\"   \\n               \"),\n                  _vm.isLoading == false && _vm.data.status == 0\n                    ? _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"btn-rounded float\",\n                          attrs: { type: \"submit\", variant: \"success\" },\n                          on: { click: _vm.completeBooking }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n              Session Complete\\n              \"\n                          )\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm._v(\"   \\n                  \"),\n                  _vm.isLoading == false && _vm.data.status == 0\n                    ? _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"btn-rounded float\",\n                          attrs: { type: \"submit\", variant: \"danger\" },\n                          on: { click: _vm.noShowBooking }\n                        },\n                        [_vm._v(\"\\n              No Show\\n              \")]\n                      )\n                    : _vm._e(),\n                  _vm._v(\"   \\n           \"),\n                  _vm.isLoading == false && _vm.data.status == 0\n                    ? _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"btn-rounded float\",\n                          attrs: { type: \"submit\", variant: \"warning\" },\n                          on: { click: _vm.displayPanel }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n             Edit Booking Preferences \\n              \"\n                          )\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm._v(\"   \\n           \"),\n                  _vm.isLoading == false && _vm.data.status == 0\n                    ? _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"btn-rounded float\",\n                          attrs: { type: \"submit\", variant: \"primary\" },\n                          on: { click: _vm.displayPanel2 }\n                        },\n                        [_vm._v(\"\\n             Assign Physio\\n              \")]\n                      )\n                    : _vm._e(),\n                  _vm._v(\"\\n                \\n           \\n           \"),\n                  _vm.isLoading == false && _vm.data.status == 0\n                    ? _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"btn-rounded float\",\n                          attrs: { type: \"submit\", variant: \"primary\" },\n                          on: { click: _vm.displayPanel3 }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n             Assign Programme\\n              \"\n                          )\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm._v(\"  \"),\n                  _c(\"br\"),\n                  _c(\"br\"),\n                  _vm.isLoading == false &&\n                  _vm.data.status == 0 &&\n                  _vm.data.user_name == \"OFFLINE / MANUAL BOOKING\"\n                    ? _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"btn-rounded float\",\n                          attrs: { type: \"submit\", variant: \"primary\" },\n                          on: { click: _vm.displayPanel4 }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n             Re-Assign Member\\n              \"\n                          )\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm._v(\"\\n                \"),\n                  _c(\"br\"),\n                  _c(\"br\")\n                ],\n                1\n              ),\n              _vm.panel == true\n                ? _c(\n                    \"Widget\",\n                    {\n                      attrs: {\n                        title:\n                          \"\\n        <div>\\n          <h4>\\n            Edit Booking Preferences&nbsp;\\n            <small></small>\\n          </h4>\\n          <p class='text-muted'></p>\\n        </div>\",\n                        customHeader: \"\",\n                        collapse: \"\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"form-wizard\",\n                        {\n                          attrs: {\n                            shape: \"tab\",\n                            color: \"#3498db\",\n                            title: \"\",\n                            subtitle: \"\"\n                          },\n                          on: {\n                            \"on-validate\": _vm.handleValidation,\n                            \"on-loading\": _vm.setLoading,\n                            \"on-error\": _vm.handleErrorMessage\n                          }\n                        },\n                        [\n                          _c(\"b-progress\", {\n                            staticClass: \"progress-xs\",\n                            attrs: {\n                              variant: \"gray-light\",\n                              value: _vm.progress,\n                              max: 4\n                            }\n                          }),\n                          _c(\n                            \"b-button\",\n                            {\n                              attrs: { slot: \"prev\", variant: \"primary\" },\n                              slot: \"prev\"\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fa fa-caret-left\" }),\n                              _vm._v(\" Previous\\n          \")\n                            ]\n                          ),\n                          _c(\n                            \"b-button\",\n                            {\n                              attrs: { slot: \"next\", variant: \"primary\" },\n                              slot: \"next\"\n                            },\n                            [\n                              _vm._v(\"\\n            Next \"),\n                              _c(\"i\", { staticClass: \"fa fa-caret-right\" })\n                            ]\n                          ),\n                          _vm.isLoading == false\n                            ? _c(\n                                \"b-button\",\n                                {\n                                  attrs: { slot: \"finish\", variant: \"success\" },\n                                  on: { click: _vm.submit },\n                                  slot: \"finish\"\n                                },\n                                [\n                                  _vm._v(\"\\n            Proceed  \"),\n                                  _c(\"i\", { staticClass: \"fa fa-check\" })\n                                ]\n                              )\n                            : _vm._e(),\n                          _c(\n                            \"tab-content\",\n                            {\n                              attrs: {\n                                title: \"1. DBC Center\",\n                                \"before-change\": _vm.validBranch\n                              }\n                            },\n                            [\n                              _c(\n                                \"b-form\",\n                                [\n                                  _c(\n                                    \"b-form-group\",\n                                    { attrs: { label: \"Select Branch\" } },\n                                    [\n                                      _c(\"v-select\", {\n                                        attrs: {\n                                          options: [\n                                            \"TTDI\",\n                                            \"Ampang\",\n                                            \"Jalan Kuching\",\n                                            \"Bangi\"\n                                          ]\n                                        },\n                                        on: { change: _vm.checkBranch },\n                                        model: {\n                                          value: _vm.data.branch,\n                                          callback: function($$v) {\n                                            _vm.$set(_vm.data, \"branch\", $$v)\n                                          },\n                                          expression: \"data.branch\"\n                                        }\n                                      })\n                                    ],\n                                    1\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"tab-content\",\n                            {\n                              attrs: {\n                                title: \"2. Appointment Date\",\n                                \"before-change\": _vm.validDate\n                              }\n                            },\n                            [\n                              _c(\n                                \"b-form\",\n                                [\n                                  _c(\n                                    \"b-form-group\",\n                                    {\n                                      attrs: {\n                                        label: \"Select Appointment Date\",\n                                        \"label-for\": \"description\",\n                                        description:\n                                          \"Booking has to be made one day in advance \"\n                                      }\n                                    },\n                                    [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.data.date,\n                                            expression: \"data.date\"\n                                          }\n                                        ],\n                                        staticClass: \"form-control\",\n                                        attrs: {\n                                          type: \"date\",\n                                          placeholder: \"Start\",\n                                          min: _vm.minDate,\n                                          max: _vm.maxDate\n                                        },\n                                        domProps: { value: _vm.data.date },\n                                        on: {\n                                          change: _vm.checkSession,\n                                          input: function($event) {\n                                            if ($event.target.composing) {\n                                              return\n                                            }\n                                            _vm.$set(\n                                              _vm.data,\n                                              \"date\",\n                                              $event.target.value\n                                            )\n                                          }\n                                        }\n                                      })\n                                    ]\n                                  )\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"tab-content\",\n                            {\n                              attrs: {\n                                title: \"3. Select Session Time\",\n                                \"before-change\": _vm.validTime\n                              }\n                            },\n                            [\n                              _c(\n                                \"b-form\",\n                                [\n                                  _c(\"p\", [\n                                    _vm._v(\"Select Preferable Session Time\")\n                                  ]),\n                                  _vm._l(_vm.sessions, function(\n                                    session,\n                                    index\n                                  ) {\n                                    return _c(\n                                      \"b-form-group\",\n                                      {\n                                        key: session.value,\n                                        staticClass: \"radio abc-radio\"\n                                      },\n                                      [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.data.time,\n                                              expression: \"data.time\"\n                                            }\n                                          ],\n                                          attrs: {\n                                            type: \"radio\",\n                                            name: \"radio\",\n                                            id: \"diagn\" + index,\n                                            disabled: session.capacity < 1\n                                          },\n                                          domProps: {\n                                            value: session.value,\n                                            checked: _vm._q(\n                                              _vm.data.time,\n                                              session.value\n                                            )\n                                          },\n                                          on: {\n                                            change: function($event) {\n                                              _vm.$set(\n                                                _vm.data,\n                                                \"time\",\n                                                session.value\n                                              )\n                                            }\n                                          }\n                                        }),\n                                        _c(\n                                          \"label\",\n                                          { attrs: { for: \"diagn\" + index } },\n                                          [\n                                            _vm._v(\n                                              _vm._s(session.text) +\n                                                \" ~ \" +\n                                                _vm._s(session.capacity) +\n                                                \" slots left\"\n                                            )\n                                          ]\n                                        )\n                                      ]\n                                    )\n                                  })\n                                ],\n                                2\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"tab-content\",\n                            { attrs: { title: \"4. Review & Confirmation\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                [\n                                  _c(\n                                    \"label\",\n                                    { attrs: { for: \"myvueDropZone\" } },\n                                    [\n                                      _vm._v(\n                                        \"Upload Attachments (Relevant medical documents:- MRI/Xray Report, Dr Referral, Insurance Card(GL), etc)\"\n                                      )\n                                    ]\n                                  ),\n                                  _c(\n                                    \"label\",\n                                    { attrs: { for: \"myvueDropZone\" } },\n                                    [_vm._v(\" *upto 15 items, max 10MB size*\")]\n                                  ),\n                                  _c(\n                                    \"ul\",\n                                    { attrs: { id: \"example-2\" } },\n                                    _vm._l(_vm.data.attachments, function(\n                                      item,\n                                      index\n                                    ) {\n                                      return _vm.data.attachments != \"\"\n                                        ? _c(\n                                            \"li\",\n                                            [\n                                              _c(\"p\", [\n                                                _vm._v(\n                                                  \" \" + _vm._s(index + 1) + \")\"\n                                                ),\n                                                _c(\n                                                  \"a\",\n                                                  {\n                                                    attrs: {\n                                                      href: item,\n                                                      target: \"_blank\"\n                                                    }\n                                                  },\n                                                  [_vm._v(_vm._s(item))]\n                                                )\n                                              ]),\n                                              _vm._v(\"   \\n     \"),\n                                              _c(\n                                                \"b-button\",\n                                                {\n                                                  staticClass: \"mb-xs mr-xs\",\n                                                  attrs: {\n                                                    variant: \"warning\",\n                                                    size: \"xs\"\n                                                  },\n                                                  on: {\n                                                    click: function($event) {\n                                                      _vm.removeOtherImage(\n                                                        index\n                                                      )\n                                                    }\n                                                  }\n                                                },\n                                                [_vm._v(\"Remove Attachment\")]\n                                              )\n                                            ],\n                                            1\n                                          )\n                                        : _vm._e()\n                                    })\n                                  ),\n                                  _c(\"vue-dropzone\", {\n                                    ref: \"myVueDropzone\",\n                                    attrs: {\n                                      id: \"dropzone\",\n                                      options: _vm.dropzoneOptions\n                                    },\n                                    on: {\n                                      \"vdropzone-file-added\":\n                                        _vm.checkOtherImage,\n                                      \"vdropzone-queue-complete\":\n                                        _vm.onDropzoneUploadComplete\n                                    }\n                                  }),\n                                  _vm.errors.has(\"minlength\")\n                                    ? _c(\n                                        \"span\",\n                                        { staticClass: \"text-danger\" },\n                                        [\n                                          _vm._v(\n                                            \"\\n                  \" +\n                                              _vm._s(\n                                                _vm.errors.first(\"minlength\")\n                                              ) +\n                                              \"\\n                \"\n                                          )\n                                        ]\n                                      )\n                                    : _vm._e()\n                                ],\n                                1\n                              ),\n                              _c(\n                                \"b-form-group\",\n                                [\n                                  _c(\n                                    \"label\",\n                                    { attrs: { for: \"otherActive\" } },\n                                    [_vm._v(\"Additional Comments/Requests\")]\n                                  ),\n                                  _c(\"textarea-autosize\", {\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      placeholder:\n                                        \"eg: I am looking for knee treatment.\",\n                                      \"min-height\": 35,\n                                      id: \"otherActive\"\n                                    },\n                                    model: {\n                                      value: _vm.data.comments,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.data, \"comments\", $$v)\n                                      },\n                                      expression: \"data.comments\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm.loadingWizard\n                            ? _c(\"div\", { staticClass: \"loader\" })\n                            : _vm._e(),\n                          _vm.errorMsg\n                            ? _c(\"div\", [\n                                _c(\"span\", { staticClass: \"error\" }, [\n                                  _vm._v(_vm._s(_vm.errorMsg))\n                                ])\n                              ])\n                            : _vm._e()\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.panel2 == true\n                ? _c(\n                    \"Widget\",\n                    {\n                      attrs: {\n                        title:\n                          \"\\n        <div>\\n          <h4>\\n           Assign Physio&nbsp;\\n            <small></small>\\n          </h4>\\n          <p class='text-muted'></p>\\n        </div>\",\n                        customHeader: \"\",\n                        collapse: \"\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            label: \"Physio\",\n                            \"label-for\": \"search-select\",\n                            \"label-cols\": 3,\n                            description: \"Search & Select Physio\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"b-row\",\n                            [\n                              _c(\n                                \"b-col\",\n                                { attrs: { md: \"9\" } },\n                                [\n                                  _c(\"v-select\", {\n                                    attrs: {\n                                      options: _vm.physioInfo,\n                                      label: \"username\",\n                                      value: _vm.id\n                                    },\n                                    scopedSlots: _vm._u([\n                                      {\n                                        key: \"option\",\n                                        fn: function(option) {\n                                          return [\n                                            _vm._v(\n                                              \"\\n        \" +\n                                                _vm._s(option.username) +\n                                                \" - \" +\n                                                _vm._s(option.position) +\n                                                \"\\n    \"\n                                            )\n                                          ]\n                                        }\n                                      }\n                                    ]),\n                                    model: {\n                                      value: _vm.data.physio_name,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.data, \"physio_name\", $$v)\n                                      },\n                                      expression: \"data.physio_name\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm.isLoading == false\n                        ? _c(\n                            \"b-button\",\n                            {\n                              staticClass: \"btn-rounded float\",\n                              attrs: { type: \"submit\", variant: \"primary\" },\n                              on: { click: _vm.assignPhysio }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n             Assign Physio\\n              \"\n                              )\n                            ]\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.panel3 == true\n                ? _c(\n                    \"Widget\",\n                    {\n                      attrs: {\n                        title:\n                          \"\\n        <div>\\n          <h4>\\n           Assign Programme&nbsp;\\n            <small></small>\\n          </h4>\\n          <p class='text-muted'></p>\\n        </div>\",\n                        customHeader: \"\",\n                        collapse: \"\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            label: \"Programme\",\n                            \"label-for\": \"search-select\",\n                            \"label-cols\": 3,\n                            description: \"Search & Select Programme\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"b-row\",\n                            [\n                              _c(\n                                \"b-col\",\n                                { attrs: { md: \"9\" } },\n                                [\n                                  _c(\"v-select\", {\n                                    attrs: {\n                                      options: _vm.programmeInfo,\n                                      label: \"id\",\n                                      value: _vm.id\n                                    },\n                                    scopedSlots: _vm._u([\n                                      {\n                                        key: \"option\",\n                                        fn: function(option) {\n                                          return [\n                                            _vm._v(\n                                              \"\\n        #\" +\n                                                _vm._s(option.id) +\n                                                \" -\" +\n                                                _vm._s(option.title) +\n                                                \" - \" +\n                                                _vm._s(option.description) +\n                                                \" \\n    \"\n                                            )\n                                          ]\n                                        }\n                                      }\n                                    ]),\n                                    model: {\n                                      value: _vm.data.programmeId,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.data, \"programmeId\", $$v)\n                                      },\n                                      expression: \"data.programmeId\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm.isLoading == false\n                        ? _c(\n                            \"b-button\",\n                            {\n                              staticClass: \"btn-rounded float\",\n                              attrs: { type: \"submit\", variant: \"primary\" },\n                              on: { click: _vm.assignProgramme }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n             Assign Programme\\n              \"\n                              )\n                            ]\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.panel4 == true\n                ? _c(\n                    \"Widget\",\n                    {\n                      attrs: {\n                        title:\n                          \"\\n        <div>\\n          <h4>\\n           Re-Assign Member&nbsp;\\n            <small></small>\\n          </h4>\\n          <p class='text-muted'></p>\\n        </div>\",\n                        customHeader: \"\",\n                        collapse: \"\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"b-form\",\n                        [\n                          _c(\n                            \"b-form-group\",\n                            { attrs: { label: \"Select User\" } },\n                            [\n                              _c(\"v-select\", {\n                                attrs: {\n                                  options: _vm.memberInfo,\n                                  label: \"username\"\n                                },\n                                scopedSlots: _vm._u([\n                                  {\n                                    key: \"option\",\n                                    fn: function(option) {\n                                      return [\n                                        _vm._v(\n                                          \"\\n        \" +\n                                            _vm._s(option.username) +\n                                            \" - #\" +\n                                            _vm._s(option.id) +\n                                            \"\\n    \"\n                                        )\n                                      ]\n                                    }\n                                  }\n                                ]),\n                                model: {\n                                  value: _vm.data.member,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.data, \"member\", $$v)\n                                  },\n                                  expression: \"data.member\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm.isLoading == false\n                        ? _c(\n                            \"b-button\",\n                            {\n                              staticClass: \"btn-rounded float\",\n                              attrs: { type: \"submit\", variant: \"primary\" },\n                              on: { click: _vm.assignMember }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n             Re-Assign Member\\n              \"\n                              )\n                            ]\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}