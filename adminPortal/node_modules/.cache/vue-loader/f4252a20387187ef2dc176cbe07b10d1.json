{"remainingRequest":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Accounts\\AccountCreate.vue?vue&type=template&id=6ee3baa4&","dependencies":[{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Accounts\\AccountCreate.vue","mtime":1609174997960},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1591157760591},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _vm._m(0),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { lg: \"8\", xs: \"12\" } },\n            [\n              _c(\n                \"Widget\",\n                {\n                  attrs: {\n                    title:\n                      \"<h5>        \\n            <small> Fill up & click Submit</small>\\n          </h5>\",\n                    customHeader: \"\"\n                  }\n                },\n                [\n                  _c(\"b-form\", { on: { submit: _vm.onSubmit } }, [\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"br\"),\n                        _c(\"legend\", [\n                          _vm._v(\n                            \"\\n              1. Core Information\\n              \"\n                          )\n                        ]),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"accountname\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                 Company Name\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:5\",\n                                  expression: \"'required|min:5'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.company_name,\n                                  expression: \"data.company_name\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"accountname\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"accountname\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.company_name },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"company_name\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"accountname\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"accountname\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"accountname\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                 MMC Number\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:5\",\n                                  expression: \"'required|min:5'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.mmc_id,\n                                  expression: \"data.mmc_id\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"mmc_number\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"mmc_number\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.mmc_id },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"mmc_id\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"mmc_number\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"mmc_number\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"ref_num\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                 Reference ID (Internal)\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:5\",\n                                  expression: \"'required|min:5'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.ref_id,\n                                  expression: \"data.ref_id\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"ref_id\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"ref_id\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.ref_id },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"ref_id\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"ref_id\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"ref_id\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\"br\"),\n                        _c(\"legend\", [\n                          _vm._v(\n                            \"\\n             2. Company Information\\n              \"\n                          )\n                        ]),\n                        _c(\"br\"),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              label: \"Type\",\n                              \"label-for\": \"default-select\",\n                              \"label-cols\": 3,\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"b-row\",\n                              [\n                                _c(\n                                  \"b-col\",\n                                  { attrs: { md: \"9\" } },\n                                  [\n                                    _c(\"v-select\", {\n                                      directives: [\n                                        {\n                                          name: \"validate\",\n                                          rawName: \"v-validate\",\n                                          value: \"required\",\n                                          expression: \"'required'\"\n                                        }\n                                      ],\n                                      staticClass: \"mt-xs\",\n                                      attrs: {\n                                        options: [\n                                          \"ENTERPRISE\",\n                                          \"SYARIKAT SENDIRIAN BERHAD\"\n                                        ]\n                                      },\n                                      model: {\n                                        value: _vm.data.company_type,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.data,\n                                            \"company_type\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"data.company_type\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"comdate\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                Date of Registration/Incorporation\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:5\",\n                                  expression: \"'required|min:5'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.company_date,\n                                  expression: \"data.company_date\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"comdate\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"comdate\",\n                                type: \"date\"\n                              },\n                              domProps: { value: _vm.data.company_date },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"company_date\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"comdate\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"comdate\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"picname\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                 PIC Name\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:5\",\n                                  expression: \"'required|min:5'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.pic_name,\n                                  expression: \"data.pic_name\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"picname\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"picname\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.pic_name },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"pic_name\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"picname\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"picname\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              label: \"PIC E-mail\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"picemail\"\n                            }\n                          },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|email\",\n                                  expression: \"'required|email'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.pic_email,\n                                  expression: \"data.pic_email\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"picemail\")\n                              },\n                              attrs: { name: \"picemail\", type: \"text\" },\n                              domProps: { value: _vm.data.pic_email },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"pic_email\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"picemail\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"picemail\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"pictel_no\",\n                              description: \"If overseas include call code\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                PIC Telephone Number\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:7\",\n                                  expression: \"'required|min:7'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.pic_tel_no,\n                                  expression: \"data.pic_tel_no\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"pictel_no\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"pictel_no\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.pic_tel_no },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"pic_tel_no\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"pictel_no\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"pictel_no\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"billingname\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                Billing Name\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:5\",\n                                  expression: \"'required|min:5'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.billing_name,\n                                  expression: \"data.billing_name\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"billingname\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"billingname\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.billing_name },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"billing_name\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"billingname\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"billingname\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              label: \"Billing E-mail\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"billingemail\"\n                            }\n                          },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|email\",\n                                  expression: \"'required|email'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.billing_email,\n                                  expression: \"data.billing_email\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"billingemail\")\n                              },\n                              attrs: { name: \"billingemail\", type: \"text\" },\n                              domProps: { value: _vm.data.billing_email },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"billing_email\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"billingemail\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"billingemail\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"billingtel_no\",\n                              description: \"If overseas include call code\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n               Billing Telephone Number\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:7\",\n                                  expression: \"'required|min:7'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.billing_tel_no,\n                                  expression: \"data.billing_tel_no\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"billingtel_no\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"billingtel_no\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.billing_tel_no },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"billing_tel_no\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"billingtel_no\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(\n                                        _vm.errors.first(\"billingtel_no\")\n                                      ) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.data2.copyPIC,\n                              expression: \"data2.copyPIC\"\n                            }\n                          ],\n                          attrs: { type: \"checkbox\", id: \"aform\" },\n                          domProps: {\n                            checked: Array.isArray(_vm.data2.copyPIC)\n                              ? _vm._i(_vm.data2.copyPIC, null) > -1\n                              : _vm.data2.copyPIC\n                          },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$a = _vm.data2.copyPIC,\n                                  $$el = $event.target,\n                                  $$c = $$el.checked ? true : false\n                                if (Array.isArray($$a)) {\n                                  var $$v = null,\n                                    $$i = _vm._i($$a, $$v)\n                                  if ($$el.checked) {\n                                    $$i < 0 &&\n                                      _vm.$set(\n                                        _vm.data2,\n                                        \"copyPIC\",\n                                        $$a.concat([$$v])\n                                      )\n                                  } else {\n                                    $$i > -1 &&\n                                      _vm.$set(\n                                        _vm.data2,\n                                        \"copyPIC\",\n                                        $$a\n                                          .slice(0, $$i)\n                                          .concat($$a.slice($$i + 1))\n                                      )\n                                  }\n                                } else {\n                                  _vm.$set(_vm.data2, \"copyPIC\", $$c)\n                                }\n                              },\n                              _vm.copyPIC\n                            ]\n                          }\n                        }),\n                        _c(\"label\", { attrs: { for: \"aform\" } }, [\n                          _vm._v(\" Same as PIC\")\n                        ]),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"address_street\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n              Street Address\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"textarea-autosize\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:4\",\n                                  expression: \"'required|min:4'\"\n                                }\n                              ],\n                              class: { \"form-control\": true },\n                              attrs: {\n                                placeholder: \"\",\n                                \"min-height\": 35,\n                                id: \"street_address\",\n                                name: \"street_address\"\n                              },\n                              model: {\n                                value: _vm.data.address_street,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.data, \"address_street\", $$v)\n                                },\n                                expression: \"data.address_street\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"add\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n               City/Town\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:4\",\n                                  expression: \"'required|min:4'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.address_city,\n                                  expression: \"data.address_city\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"city_address\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"city_address\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.address_city },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"address_city\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"city_address\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"city_address\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              label: \"State\",\n                              \"label-for\": \"default-select\",\n                              \"label-cols\": 3,\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"b-row\",\n                              [\n                                _c(\n                                  \"b-col\",\n                                  { attrs: { md: \"9\" } },\n                                  [\n                                    _c(\"v-select\", {\n                                      directives: [\n                                        {\n                                          name: \"validate\",\n                                          rawName: \"v-validate\",\n                                          value: \"required\",\n                                          expression: \"'required'\"\n                                        }\n                                      ],\n                                      staticClass: \"mt-xs\",\n                                      attrs: {\n                                        options: [\n                                          \"Johor\",\n                                          \"Kedah\",\n                                          \"Kelantan\",\n                                          \"Kuala Lumpur\",\n                                          \"Labuan\",\n                                          \"Melaka\",\n                                          \"Negeri Sembilan\",\n                                          \"Pahang\",\n                                          \"Perak\",\n                                          \"Perlis\",\n                                          \"Pulau Pinang\",\n                                          \"Putrajaya\",\n                                          \"Sabah\",\n                                          \"Sarawak\",\n                                          \"Selangor\",\n                                          \"Terengganu\"\n                                        ]\n                                      },\n                                      model: {\n                                        value: _vm.data.address_state,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.data,\n                                            \"address_state\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"data.address_state\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _c(\"br\"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.data2.copyAddress,\n                              expression: \"data2.copyAddress\"\n                            }\n                          ],\n                          attrs: { type: \"checkbox\", id: \"aform2\" },\n                          domProps: {\n                            checked: Array.isArray(_vm.data2.copyAddress)\n                              ? _vm._i(_vm.data2.copyAddress, null) > -1\n                              : _vm.data2.copyAddress\n                          },\n                          on: {\n                            change: [\n                              function($event) {\n                                var $$a = _vm.data2.copyAddress,\n                                  $$el = $event.target,\n                                  $$c = $$el.checked ? true : false\n                                if (Array.isArray($$a)) {\n                                  var $$v = null,\n                                    $$i = _vm._i($$a, $$v)\n                                  if ($$el.checked) {\n                                    $$i < 0 &&\n                                      _vm.$set(\n                                        _vm.data2,\n                                        \"copyAddress\",\n                                        $$a.concat([$$v])\n                                      )\n                                  } else {\n                                    $$i > -1 &&\n                                      _vm.$set(\n                                        _vm.data2,\n                                        \"copyAddress\",\n                                        $$a\n                                          .slice(0, $$i)\n                                          .concat($$a.slice($$i + 1))\n                                      )\n                                  }\n                                } else {\n                                  _vm.$set(_vm.data2, \"copyAddress\", $$c)\n                                }\n                              },\n                              _vm.copyAddress\n                            ]\n                          }\n                        }),\n                        _c(\"label\", { attrs: { for: \"aform2\" } }, [\n                          _vm._v(\" Same as Main Address\")\n                        ]),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"address_street2\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n              Street Address (Alternative)\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"textarea-autosize\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:4\",\n                                  expression: \"'required|min:4'\"\n                                }\n                              ],\n                              class: { \"form-control\": true },\n                              attrs: {\n                                placeholder: \"\",\n                                \"min-height\": 35,\n                                id: \"street_address2\",\n                                name: \"street_address2\"\n                              },\n                              model: {\n                                value: _vm.data.address_street2,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.data, \"address_street2\", $$v)\n                                },\n                                expression: \"data.address_street2\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"add\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n               City/Town (Alternative)\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:4\",\n                                  expression: \"'required|min:4'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.address_city2,\n                                  expression: \"data.address_city2\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"city_address2\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"city_address2\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.address_city2 },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"address_city2\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"city_address2\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(\n                                        _vm.errors.first(\"city_address2\")\n                                      ) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              label: \"State (Alternative)\",\n                              \"label-for\": \"default-select\",\n                              \"label-cols\": 3,\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"b-row\",\n                              [\n                                _c(\n                                  \"b-col\",\n                                  { attrs: { md: \"9\" } },\n                                  [\n                                    _c(\"v-select\", {\n                                      directives: [\n                                        {\n                                          name: \"validate\",\n                                          rawName: \"v-validate\",\n                                          value: \"required\",\n                                          expression: \"'required'\"\n                                        }\n                                      ],\n                                      staticClass: \"mt-xs\",\n                                      attrs: {\n                                        options: [\n                                          \"Johor\",\n                                          \"Kedah\",\n                                          \"Kelantan\",\n                                          \"Kuala Lumpur\",\n                                          \"Labuan\",\n                                          \"Melaka\",\n                                          \"Negeri Sembilan\",\n                                          \"Pahang\",\n                                          \"Perak\",\n                                          \"Perlis\",\n                                          \"Pulau Pinang\",\n                                          \"Putrajaya\",\n                                          \"Sabah\",\n                                          \"Sarawak\",\n                                          \"Selangor\",\n                                          \"Terengganu\"\n                                        ]\n                                      },\n                                      model: {\n                                        value: _vm.data.address_state2,\n                                        callback: function($$v) {\n                                          _vm.$set(\n                                            _vm.data,\n                                            \"address_state2\",\n                                            $$v\n                                          )\n                                        },\n                                        expression: \"data.address_state2\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _c(\"legend\", [\n                          _vm._v(\"\\n               3.Upload\\n              \")\n                        ]),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"image\",\n                              description: \"1 image only\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                 Logo\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"vue-dropzone\", {\n                              ref: \"myVueDropzone2\",\n                              attrs: {\n                                id: \"dropzone2\",\n                                options: _vm.dropzoneOptions2\n                              },\n                              on: {\n                                \"vdropzone-success\": _vm.successEvent2,\n                                \"vdropzone-removed-file\": _vm.removeImage\n                              }\n                            }),\n                            _vm.errors.has(\"minlength\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"minlength\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"image\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                 Supporting Documents\\n                \"\n                                )\n                              ]\n                            ),\n                            _c(\"label\", { attrs: { for: \"myvueDropZone\" } }, [\n                              _vm._v(\n                                \"ENTERPRISE | Salinan IC,Gambar berukuran Passport,Salinan SSM.\\n                    \"\n                              ),\n                              _c(\"br\"),\n                              _vm._v(\n                                \"\\nSYARIKAT SENDIRIAN BERHAD | Salinan IC, Gambar berukuran Passport,Salinan SSM / Dokumen berkaitan,Salinan Borang 24 & Borang 49\"\n                              )\n                            ]),\n                            _c(\"label\", { attrs: { for: \"myvueDropZone\" } }, [\n                              _vm._v(\" *upto 15 items, max 10MB size*\")\n                            ]),\n                            _c(\n                              \"ul\",\n                              { attrs: { id: \"example-2\" } },\n                              _vm._l(_vm.data.attachments, function(\n                                item,\n                                index\n                              ) {\n                                return _vm.data.attachments != \"\"\n                                  ? _c(\n                                      \"li\",\n                                      [\n                                        item != \"\"\n                                          ? _c(\"p\", [\n                                              _vm._v(\n                                                \" \" + _vm._s(index + 1) + \")\"\n                                              ),\n                                              _c(\n                                                \"a\",\n                                                {\n                                                  attrs: {\n                                                    href: item,\n                                                    target: \"_blank\"\n                                                  }\n                                                },\n                                                [_vm._v(_vm._s(item))]\n                                              )\n                                            ])\n                                          : _vm._e(),\n                                        _vm._v(\"   \\n     \"),\n                                        item != \"\"\n                                          ? _c(\n                                              \"b-button\",\n                                              {\n                                                staticClass: \"mb-xs mr-xs\",\n                                                attrs: {\n                                                  variant: \"warning\",\n                                                  size: \"xs\"\n                                                },\n                                                on: {\n                                                  click: function($event) {\n                                                    _vm.removeOtherImage(index)\n                                                  }\n                                                }\n                                              },\n                                              [_vm._v(\"Remove Attachment\")]\n                                            )\n                                          : _vm._e()\n                                      ],\n                                      1\n                                    )\n                                  : _vm._e()\n                              })\n                            ),\n                            _c(\"vue-dropzone\", {\n                              ref: \"myVueDropzone\",\n                              attrs: {\n                                id: \"dropzone\",\n                                options: _vm.dropzoneOptions\n                              },\n                              on: {\n                                \"vdropzone-file-added\": _vm.checkOtherImage,\n                                \"vdropzone-queue-complete\":\n                                  _vm.onDropzoneUploadComplete\n                              }\n                            }),\n                            _vm.errors.has(\"minlength\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                  \" +\n                                      _vm._s(_vm.errors.first(\"minlength\")) +\n                                      \"\\n                \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-action\" },\n                      [\n                        _vm.isLoading == false\n                          ? _c(\n                              \"b-button\",\n                              {\n                                staticClass: \"btn-rounded float-right\",\n                                attrs: { type: \"submit\", variant: \"danger\" }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                Submit\\n              \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _c(\n                          \"b-button\",\n                          {\n                            staticClass: \"btn-rounded\",\n                            attrs: { type: \"button\", variant: \"default\" },\n                            on: {\n                              click: function($event) {\n                                _vm.navigateToList()\n                              }\n                            }\n                          },\n                          [_vm._v(\"\\n                Cancel\\n              \")]\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { staticClass: \"breadcrumb\" }, [\n      _c(\"li\", { staticClass: \"breadcrumb-item\" }, [_vm._v(\"YOU ARE HERE\")]),\n      _c(\"li\", { staticClass: \"breadcrumb-item active\" }, [\n        _vm._v(\"Create New Account\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}