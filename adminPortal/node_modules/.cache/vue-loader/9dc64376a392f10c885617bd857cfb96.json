{"remainingRequest":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Dashboard\\components\\TaskContainer\\TaskContainer.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Dashboard\\components\\TaskContainer\\TaskContainer.vue","mtime":1556797291000},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue';\nimport Widget from '@/components/Widget/Widget';\nimport Task from '../Task/Task';\n\nexport default {\n  name: 'TaskContainer',\n  props: ['data'],\n  components: { Widget, Task },\n  data() {\n    return {\n      tasks: this.data,\n    };\n  },\n  methods: {\n    toggleTaskState(index) {\n      const task = this.tasks.find(({ id }) => id === index);\n      task.completed = !task.completed;\n\n      Vue.set(this.tasks, index, task);\n    },\n  },\n  created() {\n    const tasks = this.data;\n\n    tasks.map((task) => {\n      task.completed = false; // eslint-disable-line\n      return task;\n    });\n\n    this.tasks = tasks;\n  },\n};\n",{"version":3,"sources":["TaskContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"TaskContainer.vue","sourceRoot":"src\\pages\\Dashboard\\components\\TaskContainer","sourcesContent":["<template>\n  <Widget\n    className=\"mb-xlg pb-2\"\n    bodyClass=\"task-container mt\"\n    :title=\"`\n      <div>\n        <h5>Today&apos;s Tasks\n          <span class='badge badge-pill badge-success fw-normal pull-right mt-xs'>\n            ${tasks.length}\n          </span>\n        </h5>\n        <p class='text-primary mb-0'><small>\n          ${tasks.filter(t => t.completed).length} of ${tasks.length} completed\n        </small></p>\n      </div>`\"\n    customHeader\n  >\n    <Task\n      v-for=\"task in tasks\"\n      :task=\"task\"\n      :completed=\"task.completed\"\n      :toggle=\"toggleTaskState\"\n      :key=\"task.id\"\n    />\n    <b-button variant=\"transparent\" class=\"w-100 text-center text-muted\">\n      See All <i class=\"la la-arrow-down\" />\n    </b-button>\n  </Widget>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Widget from '@/components/Widget/Widget';\nimport Task from '../Task/Task';\n\nexport default {\n  name: 'TaskContainer',\n  props: ['data'],\n  components: { Widget, Task },\n  data() {\n    return {\n      tasks: this.data,\n    };\n  },\n  methods: {\n    toggleTaskState(index) {\n      const task = this.tasks.find(({ id }) => id === index);\n      task.completed = !task.completed;\n\n      Vue.set(this.tasks, index, task);\n    },\n  },\n  created() {\n    const tasks = this.data;\n\n    tasks.map((task) => {\n      task.completed = false; // eslint-disable-line\n      return task;\n    });\n\n    this.tasks = tasks;\n  },\n};\n</script>\n"]}]}