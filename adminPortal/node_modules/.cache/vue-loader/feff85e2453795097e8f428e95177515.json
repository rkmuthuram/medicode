{"remainingRequest":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\sunrisers\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\adminPortal\\src\\pages\\Accounts\\ClinicInventoryView.vue?vue&type=template&id=7e9470f4&","dependencies":[{"path":"F:\\sunrisers\\medicode\\adminPortal\\src\\pages\\Accounts\\ClinicInventoryView.vue","mtime":1598078279759},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1591157760591},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"ol\", { staticClass: \"breadcrumb\" }, [\n        _c(\"li\", { staticClass: \"breadcrumb-item\" }, [_vm._v(\"YOU ARE HERE\")]),\n        _c(\"li\", { staticClass: \"breadcrumb-item active\" }, [\n          _vm._v(\"Medicine Dashboard - \" + _vm._s(_vm.data.product_name))\n        ])\n      ]),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { md: \"8\", xs: \"12\" } },\n            [\n              _c(\n                \"b-tabs\",\n                { staticClass: \"mb-lg\" },\n                [\n                  _c(\n                    \"b-tab\",\n                    { attrs: { title: \"Information\", active: \"\" } },\n                    [\n                      _c(\"legend\", [_vm._v(\"Complete Information\")]),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"username\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [_vm._v(\"\\n             Clinic Id\\n              \")]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|min:5\",\n                                expression: \"'required|min:5'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.id,\n                                expression: \"data.id\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"minlength\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"minlength\",\n                              type: \"text\",\n                              id: \"clinicId\",\n                              \"data-id\": _vm.clinicId,\n                              disabled: \"\"\n                            },\n                            domProps: { value: _vm.data.id },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(_vm.data, \"id\", $event.target.value)\n                              }\n                            }\n                          })\n                        ]\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"internalid\",\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\n                                \"\\n             Internal QR Code (Internal Id)\\n              \"\n                              )\n                            ]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required\",\n                                expression: \"'required'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.internal_qrcode,\n                                expression: \"data.internal_qrcode\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"internalid\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"internal_qrcode\",\n                              type: \"text\",\n                              id: \"internal_qrcode\",\n                              \"data-id\": _vm.data.internal_qrcode\n                            },\n                            domProps: { value: _vm.data.internal_qrcode },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.data,\n                                  \"internal_qrcode\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm.errors.has(\"internalid\")\n                            ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.errors.first(\"internalid\")) +\n                                    \"\\n              \"\n                                )\n                              ])\n                            : _vm._e()\n                        ]\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"internalbar\",\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\n                                \"\\n             Internal Bar Code\\n              \"\n                              )\n                            ]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required\",\n                                expression: \"'required'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.internal_barcode,\n                                expression: \"data.internal_barcode\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"internalbar\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"internalbar\",\n                              type: \"text\"\n                            },\n                            domProps: { value: _vm.data.internal_barcode },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.data,\n                                  \"internal_barcode\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm.errors.has(\"internalbar\")\n                            ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.errors.first(\"internalbar\")) +\n                                    \"\\n              \"\n                                )\n                              ])\n                            : _vm._e()\n                        ]\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"manufacturerbar\",\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\n                                \"\\n            Manufacturer Bar Code\\n              \"\n                              )\n                            ]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required\",\n                                expression: \"'required'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.manufacturer_barcode,\n                                expression: \"data.manufacturer_barcode\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"manufacturerbar\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"manufacturerbar\",\n                              type: \"text\"\n                            },\n                            domProps: { value: _vm.data.manufacturer_barcode },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.data,\n                                  \"manufacturer_barcode\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm.errors.has(\"manufacturerbar\")\n                            ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(\n                                      _vm.errors.first(\"manufacturerbar\")\n                                    ) +\n                                    \"\\n              \"\n                                )\n                              ])\n                            : _vm._e()\n                        ]\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"packing_qty\",\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\n                                \"\\n              Packing Quantity\\n              \"\n                              )\n                            ]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required\",\n                                expression: \"'required'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.packing_quantity,\n                                expression: \"data.packing_quantity\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"packing_qty\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"packing_qty\",\n                              type: \"text\"\n                            },\n                            domProps: { value: _vm.data.packing_quantity },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.data,\n                                  \"packing_quantity\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm.errors.has(\"packing_qty\")\n                            ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.errors.first(\"packing_qty\")) +\n                                    \"\\n              \"\n                                )\n                              ])\n                            : _vm._e()\n                        ]\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            label: \"Packing Type\",\n                            \"label-for\": \"default-select\",\n                            \"label-cols\": 3,\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"b-row\",\n                            [\n                              _c(\n                                \"b-col\",\n                                { attrs: { md: \"9\" } },\n                                [\n                                  _c(\"v-select\", {\n                                    directives: [\n                                      {\n                                        name: \"validate\",\n                                        rawName: \"v-validate\",\n                                        value: \"required\",\n                                        expression: \"'required'\"\n                                      }\n                                    ],\n                                    staticClass: \"mt-xs\",\n                                    attrs: {\n                                      options: [\n                                        \"TABLETS\",\n                                        \"SOLUTION\",\n                                        \"PIECES\",\n                                        \"PASTE/GEL\",\n                                        \"LOZENGES\"\n                                      ]\n                                    },\n                                    model: {\n                                      value: _vm.data.packing_type,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.data, \"packing_type\", $$v)\n                                      },\n                                      expression: \"data.packing_type\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"product_category\",\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\n                                \"\\n              Product Category\\n              \"\n                              )\n                            ]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|min:5\",\n                                expression: \"'required|min:5'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.product_category,\n                                expression: \"data.product_category\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"product_category\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"product_category\",\n                              type: \"text\"\n                            },\n                            domProps: { value: _vm.data.product_category },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.data,\n                                  \"product_category\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm.errors.has(\"product_category\")\n                            ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(\n                                      _vm.errors.first(\"product_category\")\n                                    ) +\n                                    \"\\n              \"\n                                )\n                              ])\n                            : _vm._e()\n                        ]\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"product_name\",\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\n                                \"\\n              Product Name\\n              \"\n                              )\n                            ]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|min:5\",\n                                expression: \"'required|min:5'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.product_name,\n                                expression: \"data.product_name\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"product_name\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"product_name\",\n                              type: \"text\"\n                            },\n                            domProps: { value: _vm.data.product_name },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.data,\n                                  \"product_name\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm.errors.has(\"product_name\")\n                            ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.errors.first(\"product_name\")) +\n                                    \"\\n              \"\n                                )\n                              ])\n                            : _vm._e()\n                        ]\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"ingredient\",\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\n                                \"\\n              Ingredient\\n              \"\n                              )\n                            ]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|min:5\",\n                                expression: \"'required|min:5'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.ingredient,\n                                expression: \"data.ingredient\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"ingredient\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"ingredient\",\n                              type: \"text\"\n                            },\n                            domProps: { value: _vm.data.ingredient },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.data,\n                                  \"ingredient\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm.errors.has(\"ingredient\")\n                            ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.errors.first(\"ingredient\")) +\n                                    \"\\n              \"\n                                )\n                              ])\n                            : _vm._e()\n                        ]\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"manufacturer\",\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [\n                              _vm._v(\n                                \"\\n             Manufacturer\\n              \"\n                              )\n                            ]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|min:5\",\n                                expression: \"'required|min:5'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.manufacturer,\n                                expression: \"data.manufacturer\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"manufacturer\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"manufacturer\",\n                              type: \"text\"\n                            },\n                            domProps: { value: _vm.data.manufacturer },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.data,\n                                  \"manufacturer\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm.errors.has(\"manufacturer\")\n                            ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.errors.first(\"manufacturer\")) +\n                                    \"\\n              \"\n                                )\n                              ])\n                            : _vm._e()\n                        ]\n                      ),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            horizontal: \"\",\n                            \"label-cols\": 3,\n                            \"label-breakpoint\": \"md\",\n                            \"label-for\": \"color\",\n                            description: \"\"\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { attrs: { slot: \"label\" }, slot: \"label\" },\n                            [_vm._v(\"\\n          Color\\n              \")]\n                          ),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|min:5\",\n                                expression: \"'required|min:5'\"\n                              },\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.data.color,\n                                expression: \"data.color\"\n                              }\n                            ],\n                            class: {\n                              \"form-control\": true,\n                              \"is-invalid\": _vm.errors.has(\"color\")\n                            },\n                            attrs: {\n                              \"data-vv-validate-on\": \"change\",\n                              name: \"color\",\n                              type: \"text\"\n                            },\n                            domProps: { value: _vm.data.color },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(_vm.data, \"color\", $event.target.value)\n                              }\n                            }\n                          }),\n                          _vm.errors.has(\"color\")\n                            ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                _vm._v(\n                                  \"\\n                \" +\n                                    _vm._s(_vm.errors.first(\"color\")) +\n                                    \"\\n              \"\n                                )\n                              ])\n                            : _vm._e()\n                        ]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"b-tab\", { attrs: { title: \"History\" } }, [\n                    _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\n                        \"table\",\n                        {\n                          staticClass: \"table table-hover\",\n                          attrs: { id: \"clinicinventorydatatable\" }\n                        },\n                        [\n                          _c(\"thead\", [\n                            _c(\"tr\", [\n                              _c(\"th\", [_vm._v(\"Check In \")]),\n                              _c(\"th\", [_vm._v(\"Quantity\")]),\n                              _c(\"th\", [_vm._v(\"Timestamp\")]),\n                              _c(\"th\", [_vm._v(\"Actions\")])\n                            ])\n                          ]),\n                          _c(\"tbody\")\n                        ]\n                      )\n                    ])\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\"b-col\", { attrs: { lg: \"8\", xs: \"12\" } })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}