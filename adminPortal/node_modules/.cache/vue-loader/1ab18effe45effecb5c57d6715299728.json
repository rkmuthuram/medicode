{"remainingRequest":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Medicine\\MedicineUpdate.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\src\\pages\\Medicine\\MedicineUpdate.vue","mtime":1598680805211},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vSelect from 'vue-select';\r\nimport vue2Dropzone from 'vue2-dropzone';\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\r\nconst { Messenger } = window;\r\n\r\n/* eslint-disable */\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\n\r\nexport default {\r\n  name: 'FormValidation',\r\n  components: { Widget,vSelect,vueDropzone: vue2Dropzone },\r\n  data() {\r\n    return {\r\n       packingTypes:[],\r\n         manufacturerTypes:[],\r\n        data:{\r\n         company_name:'',\r\n         product_category:'',\r\n         manufacturer:'',\r\n         product_name:'',\r\n         ingredient:'',\r\n         color:'',\r\n         packing_type:'',\r\n         packing_quantity:'',\r\n         manufacturer_barcode:'',\r\n         internal_barcode:''\r\n      },\r\n      medicineId: this.$route.params.medicineId,\r\n     isLoading:false,\r\n     locationClasses: 'messenger-fixed messenger-on-top messenger-on-right'\r\n    };\r\n  },\r\n  methods: {\r\n     async getManufacturerTypes() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/manufacturerTypes')\r\n   this.manufacturerTypes = ['Favorex (Switzerland) / Thailand','Duopharma / Malaysia','Sanofi Aventis / France','Prime / Malaysia','Beaufour-Ipsen / France','Abbott / USA','DHA / Singapore','Pharmaniaga / Malaysia','Atlantic / Thailand','Arab Pharma / Jordan','Sanofi Aventis / UK','Aspen / Sweden','Glenmark / India','Galenium / Indonesia','GlaxoSmithKline / Philippines','Leo / Denmark','Hoe / Malaysia','GluStitch / Canada','Takeda / Germany','Novartis / Switzerland','Abbott / Australia','Pahang Pharmacy / Malaysia','Aspen / Holland','Pfizer / Belgium','LBS / Thailand','Bayer / Mexico','KRKA / Slovenia','Shin Poong / Korea','MSD / Belgium','LBS /  Thailand','Sandoz / Austria','Roche / Switzerland','Novartis / Italy','Serum Institute / India','Sanofi Pasteur / France','Japan BCG Lab / Japan','GlaxoSmithKline / Belgium','MSD / USA','Sanofi Pasteur / Korea','Abbott / Holland','GlaxoSmithKline / Italy','Pfizer / USA','Pfizer / Australia','Aspen / Australia','Aspen / France','Boehringer Ingelheim / Canada','Boehringer Ingelheim / Germany','GlaxoSmithKline / UK','AstraZeneca / Sweden','Cipla / India','GlaxoSmithKline / France','GlaxoSmithKline / Spain','GlaxoSmithKline / Australia','Abbott / Pakistan','Johnson & Johnson / Sweden','Roche / Germany','Roche / USA','Intercare / Korea','Johnson & Johnson / USA','Acro / USA','Allen Healthcare Products / Malaysi','Pahang Pharmacy / China','Becton Dickinson / USA','Intercare / Malaysia','Schmidt / China','Intercare / China','Xepa / Malaysia','Reckitt Benckiser / UK','Janssen / Belgium','Kotra / Malaysia','Sunward / Malaysia','iNova/India','iNova/Italy','iNova/Australia','Rowa / Ireland','DDD / UK','Reckitt Benckiser / Thailand','Biosis / Malaysia','MPI / Malaysia','CCM/DUOPHARMA/Malaysia','Prime/Malaysia','Hovid / Malaysia','Pfizer / UK','Menarini / Thailand','Torrent / India','Abbott / Malaysia','Sanofi Aventis / Italy','CCM/DUOPHARMA / Malaysia','Intas /  India','Eisai / Japan','Ranbaxy / Malaysia','Apotex / Canada','GlaxoSmithKline / China','Abbott / France','Abbott / Japan','DHA / Indonesia','Mayoly Spindler / France','Janssen / France','Sunward / Singapore','Sanofi Aventis / Germany','Meda / Germany','Kabi / Austria','Remedica/Cyprus','Biosis/Malaysia','Merck / Germany','Novo Nordisk / Denmark','Servier / France','Astra Zeneca / USA','Alphapharm / Australia','Actavis / Greece','Bayer / Germany','Merck / France','Merck  / France','MSD / Italy','Unam / Philippines','Pharmaton / Switzerland','Procter & Gamble / Austria','Pharmaton / Germany','Sanofi Aventis / Thailand','Pfizer / China','Novartis / UK','null','Abbott / Indonesia','Procter & Gamble / Indonesia','Reckitt Benkinser / UK','Actavis / Malta','Sandoz / India','Sanofi Aventis / Spain','Daiichi / Japan','Actavis / UK','Topridge / China','Aspen / Germany','SM Pharma / Malaysia','Janssen / Italy','Himalaya / India','Sanofi Aventis / Canada','AstraZeneca / Philippines','Roche / Italy','AstraZeneca / China','Menarini / UK','AstraZeneca / UK','Intas / India','Sandoz / Slovenia','Tanabe / Japan','Tanabe / Indonesia','Medochemie / Cyprus','Menarini / Sweden','Servier / Ireland','MSD / UK','MSD / Korea','Novartis / Spain','Sandoz / Iceland','Xepa  / Malaysia','Xepa /  Malaysia','SanofiAventis / Turkey','Boehringer Ingelheim / India','Sanofi Aventis/Czechoslavakia','AstraZeneca / USA','Pfizer / Ireland','Sanofi Aventis / Czechoslavakia','MSD / Singapore','GlaxoSmithKline / Switzerland','Rohto-Mentholatum / Australia','MSD / Canada','GlaxoSmithKline / Philipines','Galderma / USA','Reckitt Benckiser / Singapore','Sanofi Aventis / Vietnam','GlaxoSmithKline / Poland','Tena / Holland','Merz / Germany','Smith & Nephew / UK','Menarini / Switzerland','GlaxoSmithKline / Ireland','Almirall / Germany','Pfizer / Canada','Lilly / USA','GlaxoSmithKline / Germany','MSD / Australia','Shire / Italy','MSD / Holland','Bayer  / Germany','Gedeon Richter / Hungary','Remedica / Cyprus','Bayer / France','Pfizer / Italy','Bayer / Brazil','MSD / Ireland','Actavis / Singapore','Sandoz / Romania','Sandoz / Bangladesh','Ranbaxy/India','Pfizer / France','Abbott / UK','CCM/DUOPHARMA Duopharma / Malaysia','Hovid / Turkey','Pfizer / Japan','Unichem / India','Ain Medicare / Malaysia','B.Braun / Malaysia','Novartis / Turkey','Pfizer/ USA','Sandoz / Germany','Atnahs / Spain','Atnahs/Spain','Mylan / Ireland','Rohto-Mentholatum / China','Macro Phar / Thailand','Menarini / Italy','Actavis / Indonesia','iNova / India','Takeda / Thailand','Takeda / Spain','MSD / Spain','Walter Ritter / Germany','Medochemie/Cyprus','Cadila / India','Janssen / Korea','Pfizer / Germany','Zim Lab / India','GlaxoSmithKline / Malaysia','Boehringer Ingelheim/Italy','Boehringer Ingelheim/UK','Boehringer Ingelheim / UK','Sandoz / Turkey','AstraZeneca / Australia','Bayer / Belgium','Bayer/ Belgium','Sanofi Aventis / USA','Sanofi Aventis / Brazil','Mylan / Portugal','Bayer / Indonesia','Procter & Gamble / Germany','Alcon / Belgium','Alcon Cusi / Spain','Alcon / France','SMPharma / Malaysia','OM / Switzerland','Ursapharm / Germany','Pfizer / Indonesia','Madras Pharma / India','Prime / China','3M / USA','Urgo / France','Supermax / Malaysia','B.Braun / Vietnam','Terumo / China','Becton Dickinson / Singapore','Novo Nordisk / Japan','Terumo / Phillipines','Terumo / Korea','Terumo / Sweden','Banta / USA','Pal / UK','Sunbelt USA','B.Braun / Germany','Sunbelt / USA','YSP'];\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n       async getPackingTypes() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/packingTypes')\r\n   this.packingTypes = response.data.packingTypes;\r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n    navigateToView(){\r\n        this.$router.push({name:'MedicineListing' });\r\n    },\r\n    async getAccount() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/medicine/'+ this.medicineId)\r\n   this.data= response.data.medicineInfo[0];\r\n    \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n    onSubmit(e) {\r\n       var self = this;\r\n       \r\n      e.preventDefault();\r\n    \r\n      self.$validator.validateAll().then((result) => {\r\n\t\t  if (result) {\r\n     \r\n                self.axios.patch('https://backend.medicodesolution.com/staging/medicine/'+ self.medicineId, {\r\n              \r\n    company_name: self.data.company_name,\r\n         product_category:self.data.product_category,\r\n         manufacturer:self.data.manufacturer,\r\n         product_name:self.data.product_name,\r\n         ingredient:self.data.ingredient,\r\n         color:self.data.color,\r\n         packing_type:self.data.packing_type,\r\n         packing_quantity:self.data.packing_quantity,\r\n         manufacturer_barcode:self.data.manufacturer_barcode,\r\n         internal_barcode:self.data.internal_barcode,\r\n          internal_qrcode:self.data.internal_qrcode\r\n\r\n                })\r\n                .then(function (response) {\r\n                  console.log(response);\r\n                if(response.status == 200 && response.data.success){\r\n                Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                return self.navigateToView();\r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n          \r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n                 return Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                  self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true});                \r\n                });   \r\n\t\t  }\r\n                  if(!result){\r\n                    self.isLoading = false;\r\n        \t          return;\r\n                  }\r\n\t\t});\r\n    },\r\n  },\r\n   mounted(){\r\n      this.getPackingTypes();\r\n     this.getManufacturerTypes();\r\n     this.getAccount();    \r\n     \r\n   },\r\n     created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n};\r\n",{"version":3,"sources":["MedicineUpdate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"MedicineUpdate.vue","sourceRoot":"src\\pages\\Medicine","sourcesContent":["<template>\r\n  <div>\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\">YOU ARE HERE</li>\r\n      <li class=\"breadcrumb-item active\">Update Medicine - {{data.product_name}}</li>\r\n    </ol>\r\n\r\n\r\n    <b-row>\r\n      <b-col lg='8' xs='12'>\r\n        <Widget\r\n          title=\"<h5>        \r\n            <small>Edit & Click Update </small>\r\n          </h5>\"\r\n          customHeader \r\n        >\r\n          <b-form @submit=\"onSubmit\">\r\n            <fieldset>\r\n              <legend>\r\n               \r\n              </legend>\r\n               <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"internalid\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n               Internal QR Code (Internal Id)\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required'\"\r\n                  name=\"internalid\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('internalid')}\"\r\n                  type=\"text\"\r\n                  disabled\r\n                v-model=\"data.internal_qrcode\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('internalid')\">\r\n                  {{ errors.first('internalid') }}\r\n                </span>\r\n              </b-form-group>\r\n                 <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"internalbar\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n               Internal Bar Code\r\n                </div>\r\n                <input\r\n             \r\n                  name=\"internalbar\"\r\n                  :class=\"{ 'form-control': true}\"\r\n                  type=\"text\"\r\n                v-model=\"data.internal_barcode\"\r\n                />\r\n            \r\n              </b-form-group>\r\n                  <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"manufacturerbar\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n              Manufacturer Bar Code\r\n                </div>\r\n                <input\r\n                  name=\"manufacturerbar\"\r\n                  :class=\"{ 'form-control': true}\"\r\n                  type=\"text\"\r\n                v-model=\"data.manufacturer_barcode\"\r\n                />\r\n                \r\n              </b-form-group>\r\n                   <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"packing_qty\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                Packing Quantity\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required'\"\r\n                  name=\"packing_qty\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('packing_qty')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.packing_quantity\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('packing_qty')\">\r\n                  {{ errors.first('packing_qty') }}\r\n                </span>\r\n              </b-form-group>\r\n\r\n\r\n               <b-form-group\r\n              label=\"Packing Type\"\r\n              label-for=\"default-select\"\r\n              :label-cols=\"3\"\r\n              description=\"\"\r\n            >\r\n             <b-row>\r\n                <b-col md='9'>\r\n                    <v-select\r\n                    taggable\r\n                        id=\"insuranceSelect2\"\r\n                        class=\"mt-xs\"\r\n                        v-model=\"data.packing_type\"\r\n                        :options=\"packingTypes\" \r\n                    />\r\n                 \r\n                </b-col>\r\n              </b-row>\r\n            </b-form-group>     \r\n\r\n     <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"product_category\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                Product Category\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:5'\"\r\n                  name=\"product_category\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('product_category')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.product_category\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('product_category')\">\r\n                  {{ errors.first('product_category') }}\r\n                </span>\r\n              </b-form-group>\r\n                  <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"product_name\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                Product Name\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:5'\"\r\n                  name=\"product_name\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('product_name')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.product_name\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('product_name')\">\r\n                  {{ errors.first('product_name') }}\r\n                </span>\r\n              </b-form-group>\r\n                <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"ingredient\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                Ingredient\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:5'\"\r\n                  name=\"ingredient\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('ingredient')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.ingredient\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('ingredient')\">\r\n                  {{ errors.first('ingredient') }}\r\n                </span>\r\n              </b-form-group>\r\n                          <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"manufacturer\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n               Manufacturer\r\n                </div>\r\n                 <b-col md='9'>\r\n                    <v-select\r\n                    taggable\r\n                        id=\"insurance\"\r\n                        class=\"mt-xs\"\r\n                        v-model=\"data.manufacturer\"\r\n                        :options=\"manufacturerTypes\" \r\n                    />\r\n                 \r\n                </b-col>\r\n              </b-form-group>\r\n                  <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"company_name\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n              Distributor\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:3'\"\r\n                  name=\"company_name\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('company_name')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.company_name\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('company_name')\">\r\n                  {{ errors.first('company_name') }}\r\n                </span>\r\n              </b-form-group>\r\n         \r\n                   <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"color\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n            Color\r\n                </div>\r\n                <input\r\n                \r\n                  name=\"color\"\r\n                  :class=\"{ 'form-control': true}\"\r\n                  type=\"text\"\r\n                v-model=\"data.color\"\r\n                />\r\n                \r\n              </b-form-group>\r\n         \r\n\r\n         \r\n\r\n\r\n\r\n            </fieldset>\r\n            <div class=\"form-action\">\r\n             \r\n              <b-button type=\"button\" variant=\"default\" class=\"btn-rounded\" @click=\"navigateToView()\" >\r\n               Back\r\n              </b-button>\r\n              <b-button type=\"submit\" variant=\"danger\" class=\"btn-rounded float-right\" v-if=\"isLoading==false\">\r\n                Update\r\n              </b-button>\r\n            </div>\r\n          </b-form>\r\n        </Widget>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vSelect from 'vue-select';\r\nimport vue2Dropzone from 'vue2-dropzone';\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\r\nconst { Messenger } = window;\r\n\r\n/* eslint-disable */\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\n\r\nexport default {\r\n  name: 'FormValidation',\r\n  components: { Widget,vSelect,vueDropzone: vue2Dropzone },\r\n  data() {\r\n    return {\r\n       packingTypes:[],\r\n         manufacturerTypes:[],\r\n        data:{\r\n         company_name:'',\r\n         product_category:'',\r\n         manufacturer:'',\r\n         product_name:'',\r\n         ingredient:'',\r\n         color:'',\r\n         packing_type:'',\r\n         packing_quantity:'',\r\n         manufacturer_barcode:'',\r\n         internal_barcode:''\r\n      },\r\n      medicineId: this.$route.params.medicineId,\r\n     isLoading:false,\r\n     locationClasses: 'messenger-fixed messenger-on-top messenger-on-right'\r\n    };\r\n  },\r\n  methods: {\r\n     async getManufacturerTypes() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/manufacturerTypes')\r\n   this.manufacturerTypes = ['Favorex (Switzerland) / Thailand','Duopharma / Malaysia','Sanofi Aventis / France','Prime / Malaysia','Beaufour-Ipsen / France','Abbott / USA','DHA / Singapore','Pharmaniaga / Malaysia','Atlantic / Thailand','Arab Pharma / Jordan','Sanofi Aventis / UK','Aspen / Sweden','Glenmark / India','Galenium / Indonesia','GlaxoSmithKline / Philippines','Leo / Denmark','Hoe / Malaysia','GluStitch / Canada','Takeda / Germany','Novartis / Switzerland','Abbott / Australia','Pahang Pharmacy / Malaysia','Aspen / Holland','Pfizer / Belgium','LBS / Thailand','Bayer / Mexico','KRKA / Slovenia','Shin Poong / Korea','MSD / Belgium','LBS /  Thailand','Sandoz / Austria','Roche / Switzerland','Novartis / Italy','Serum Institute / India','Sanofi Pasteur / France','Japan BCG Lab / Japan','GlaxoSmithKline / Belgium','MSD / USA','Sanofi Pasteur / Korea','Abbott / Holland','GlaxoSmithKline / Italy','Pfizer / USA','Pfizer / Australia','Aspen / Australia','Aspen / France','Boehringer Ingelheim / Canada','Boehringer Ingelheim / Germany','GlaxoSmithKline / UK','AstraZeneca / Sweden','Cipla / India','GlaxoSmithKline / France','GlaxoSmithKline / Spain','GlaxoSmithKline / Australia','Abbott / Pakistan','Johnson & Johnson / Sweden','Roche / Germany','Roche / USA','Intercare / Korea','Johnson & Johnson / USA','Acro / USA','Allen Healthcare Products / Malaysi','Pahang Pharmacy / China','Becton Dickinson / USA','Intercare / Malaysia','Schmidt / China','Intercare / China','Xepa / Malaysia','Reckitt Benckiser / UK','Janssen / Belgium','Kotra / Malaysia','Sunward / Malaysia','iNova/India','iNova/Italy','iNova/Australia','Rowa / Ireland','DDD / UK','Reckitt Benckiser / Thailand','Biosis / Malaysia','MPI / Malaysia','CCM/DUOPHARMA/Malaysia','Prime/Malaysia','Hovid / Malaysia','Pfizer / UK','Menarini / Thailand','Torrent / India','Abbott / Malaysia','Sanofi Aventis / Italy','CCM/DUOPHARMA / Malaysia','Intas /  India','Eisai / Japan','Ranbaxy / Malaysia','Apotex / Canada','GlaxoSmithKline / China','Abbott / France','Abbott / Japan','DHA / Indonesia','Mayoly Spindler / France','Janssen / France','Sunward / Singapore','Sanofi Aventis / Germany','Meda / Germany','Kabi / Austria','Remedica/Cyprus','Biosis/Malaysia','Merck / Germany','Novo Nordisk / Denmark','Servier / France','Astra Zeneca / USA','Alphapharm / Australia','Actavis / Greece','Bayer / Germany','Merck / France','Merck  / France','MSD / Italy','Unam / Philippines','Pharmaton / Switzerland','Procter & Gamble / Austria','Pharmaton / Germany','Sanofi Aventis / Thailand','Pfizer / China','Novartis / UK','null','Abbott / Indonesia','Procter & Gamble / Indonesia','Reckitt Benkinser / UK','Actavis / Malta','Sandoz / India','Sanofi Aventis / Spain','Daiichi / Japan','Actavis / UK','Topridge / China','Aspen / Germany','SM Pharma / Malaysia','Janssen / Italy','Himalaya / India','Sanofi Aventis / Canada','AstraZeneca / Philippines','Roche / Italy','AstraZeneca / China','Menarini / UK','AstraZeneca / UK','Intas / India','Sandoz / Slovenia','Tanabe / Japan','Tanabe / Indonesia','Medochemie / Cyprus','Menarini / Sweden','Servier / Ireland','MSD / UK','MSD / Korea','Novartis / Spain','Sandoz / Iceland','Xepa  / Malaysia','Xepa /  Malaysia','SanofiAventis / Turkey','Boehringer Ingelheim / India','Sanofi Aventis/Czechoslavakia','AstraZeneca / USA','Pfizer / Ireland','Sanofi Aventis / Czechoslavakia','MSD / Singapore','GlaxoSmithKline / Switzerland','Rohto-Mentholatum / Australia','MSD / Canada','GlaxoSmithKline / Philipines','Galderma / USA','Reckitt Benckiser / Singapore','Sanofi Aventis / Vietnam','GlaxoSmithKline / Poland','Tena / Holland','Merz / Germany','Smith & Nephew / UK','Menarini / Switzerland','GlaxoSmithKline / Ireland','Almirall / Germany','Pfizer / Canada','Lilly / USA','GlaxoSmithKline / Germany','MSD / Australia','Shire / Italy','MSD / Holland','Bayer  / Germany','Gedeon Richter / Hungary','Remedica / Cyprus','Bayer / France','Pfizer / Italy','Bayer / Brazil','MSD / Ireland','Actavis / Singapore','Sandoz / Romania','Sandoz / Bangladesh','Ranbaxy/India','Pfizer / France','Abbott / UK','CCM/DUOPHARMA Duopharma / Malaysia','Hovid / Turkey','Pfizer / Japan','Unichem / India','Ain Medicare / Malaysia','B.Braun / Malaysia','Novartis / Turkey','Pfizer/ USA','Sandoz / Germany','Atnahs / Spain','Atnahs/Spain','Mylan / Ireland','Rohto-Mentholatum / China','Macro Phar / Thailand','Menarini / Italy','Actavis / Indonesia','iNova / India','Takeda / Thailand','Takeda / Spain','MSD / Spain','Walter Ritter / Germany','Medochemie/Cyprus','Cadila / India','Janssen / Korea','Pfizer / Germany','Zim Lab / India','GlaxoSmithKline / Malaysia','Boehringer Ingelheim/Italy','Boehringer Ingelheim/UK','Boehringer Ingelheim / UK','Sandoz / Turkey','AstraZeneca / Australia','Bayer / Belgium','Bayer/ Belgium','Sanofi Aventis / USA','Sanofi Aventis / Brazil','Mylan / Portugal','Bayer / Indonesia','Procter & Gamble / Germany','Alcon / Belgium','Alcon Cusi / Spain','Alcon / France','SMPharma / Malaysia','OM / Switzerland','Ursapharm / Germany','Pfizer / Indonesia','Madras Pharma / India','Prime / China','3M / USA','Urgo / France','Supermax / Malaysia','B.Braun / Vietnam','Terumo / China','Becton Dickinson / Singapore','Novo Nordisk / Japan','Terumo / Phillipines','Terumo / Korea','Terumo / Sweden','Banta / USA','Pal / UK','Sunbelt USA','B.Braun / Germany','Sunbelt / USA','YSP'];\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n       async getPackingTypes() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/packingTypes')\r\n   this.packingTypes = response.data.packingTypes;\r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n    navigateToView(){\r\n        this.$router.push({name:'MedicineListing' });\r\n    },\r\n    async getAccount() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/medicine/'+ this.medicineId)\r\n   this.data= response.data.medicineInfo[0];\r\n    \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n    onSubmit(e) {\r\n       var self = this;\r\n       \r\n      e.preventDefault();\r\n    \r\n      self.$validator.validateAll().then((result) => {\r\n\t\t  if (result) {\r\n     \r\n                self.axios.patch('https://backend.medicodesolution.com/staging/medicine/'+ self.medicineId, {\r\n              \r\n    company_name: self.data.company_name,\r\n         product_category:self.data.product_category,\r\n         manufacturer:self.data.manufacturer,\r\n         product_name:self.data.product_name,\r\n         ingredient:self.data.ingredient,\r\n         color:self.data.color,\r\n         packing_type:self.data.packing_type,\r\n         packing_quantity:self.data.packing_quantity,\r\n         manufacturer_barcode:self.data.manufacturer_barcode,\r\n         internal_barcode:self.data.internal_barcode,\r\n          internal_qrcode:self.data.internal_qrcode\r\n\r\n                })\r\n                .then(function (response) {\r\n                  console.log(response);\r\n                if(response.status == 200 && response.data.success){\r\n                Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                return self.navigateToView();\r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n          \r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n                 return Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                  self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true});                \r\n                });   \r\n\t\t  }\r\n                  if(!result){\r\n                    self.isLoading = false;\r\n        \t          return;\r\n                  }\r\n\t\t});\r\n    },\r\n  },\r\n   mounted(){\r\n      this.getPackingTypes();\r\n     this.getManufacturerTypes();\r\n     this.getAccount();    \r\n     \r\n   },\r\n     created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n};\r\n</script>\r\n"]}]}