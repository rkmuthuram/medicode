{"remainingRequest":"F:\\antorse\\dbc-asia-phase2\\dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\antorse\\dbc-asia-phase2\\dbc_phase_2\\physioPortal\\node_modules\\animated-number-vue\\src\\AnimatedNumber.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\antorse\\dbc-asia-phase2\\dbc_phase_2\\physioPortal\\node_modules\\animated-number-vue\\src\\AnimatedNumber.vue","mtime":1591157659478},{"path":"F:\\antorse\\dbc-asia-phase2\\dbc_phase_2\\physioPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\antorse\\dbc-asia-phase2\\dbc_phase_2\\physioPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\antorse\\dbc-asia-phase2\\dbc_phase_2\\physioPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["//\n//\n//\n\nimport anime from 'animejs';\n\nexport default {\n  props: {\n    value: {\n      type: [Number, String],\n      default: '0',\n      required: true,\n    },\n    formatValue: {\n      type: Function,\n      default: value => value,\n    },\n    easing: {\n      type: String,\n      default: 'linear',\n    },\n    duration: {\n      type: Number,\n      default: 1000,\n    },\n    update: Function,\n    begin: Function,\n    complete: Function,\n    run: Function,\n    delay: {\n      type: Number,\n      default: 0,\n    },\n    round: {\n      default: null,\n    },\n  },\n  data() {\n    return {\n      animatedValue: 0,\n    };\n  },\n  mounted() {\n    this.animateValue(this.value);\n  },\n  watch: {\n    value(value) {\n      this.animateValue(value);\n    },\n  },\n  methods: {\n    animateValue(value) {\n      const {\n        begin,\n        easing,\n        duration,\n        complete,\n        update,\n        run,\n        delay,\n        round,\n      } = this;\n      anime({\n        targets: this,\n        animatedValue: value,\n        duration,\n        easing,\n        update,\n        begin,\n        complete,\n        run,\n        delay,\n        round,\n      });\n    },\n  },\n};\n",{"version":3,"sources":["AnimatedNumber.vue"],"names":[],"mappings":";;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AnimatedNumber.vue","sourceRoot":"node_modules\\animated-number-vue\\src","sourcesContent":["<template>\n  <span>{{formatValue(Number(animatedValue))}}</span>\n</template>\n<script>\nimport anime from 'animejs';\n\nexport default {\n  props: {\n    value: {\n      type: [Number, String],\n      default: '0',\n      required: true,\n    },\n    formatValue: {\n      type: Function,\n      default: value => value,\n    },\n    easing: {\n      type: String,\n      default: 'linear',\n    },\n    duration: {\n      type: Number,\n      default: 1000,\n    },\n    update: Function,\n    begin: Function,\n    complete: Function,\n    run: Function,\n    delay: {\n      type: Number,\n      default: 0,\n    },\n    round: {\n      default: null,\n    },\n  },\n  data() {\n    return {\n      animatedValue: 0,\n    };\n  },\n  mounted() {\n    this.animateValue(this.value);\n  },\n  watch: {\n    value(value) {\n      this.animateValue(value);\n    },\n  },\n  methods: {\n    animateValue(value) {\n      const {\n        begin,\n        easing,\n        duration,\n        complete,\n        update,\n        run,\n        delay,\n        round,\n      } = this;\n      anime({\n        targets: this,\n        animatedValue: value,\n        duration,\n        easing,\n        update,\n        begin,\n        complete,\n        run,\n        delay,\n        round,\n      });\n    },\n  },\n};\n</script>\n"]}]}