{"remainingRequest":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\sunrisers\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\adminPortal\\src\\pages\\Workforce\\WorkforceCreate.vue?vue&type=template&id=9d48b826&","dependencies":[{"path":"F:\\sunrisers\\medicode\\adminPortal\\src\\pages\\Workforce\\WorkforceCreate.vue","mtime":1597210918855},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1591157760591},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _vm._m(0),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { lg: \"8\", xs: \"12\" } },\n            [\n              _c(\n                \"Widget\",\n                {\n                  attrs: {\n                    title:\n                      \"<h5>        \\n          <small> Fill up & click Submit</small>\\n        </h5>\",\n                    customHeader: \"\"\n                  }\n                },\n                [\n                  _c(\"b-form\", { on: { submit: _vm.onSubmit } }, [\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"legend\"),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"username\",\n                              description: \"Full / Nick name of staff\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [_vm._v(\"\\n                Name\\n              \")]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:5\",\n                                  expression: \"'required|min:5'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.username,\n                                  expression: \"data.username\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"username\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"username\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.username },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"username\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"username\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                \" +\n                                      _vm._s(_vm.errors.first(\"username\")) +\n                                      \"\\n              \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              label: \"E-mail\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"email\",\n                              description:\n                                \"Primary login / Must be unique for every staff\"\n                            }\n                          },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|email\",\n                                  expression: \"'required|email'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.email,\n                                  expression: \"data.email\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"email\")\n                              },\n                              attrs: { name: \"email\", type: \"text\" },\n                              domProps: { value: _vm.data.email },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"email\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"email\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                \" +\n                                      _vm._s(_vm.errors.first(\"email\")) +\n                                      \"\\n              \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"tel_no\",\n                              description:\n                                \"Contact number / If overseas include call code\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n                Telephone Number\\n              \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:7\",\n                                  expression: \"'required|min:7'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.tel_no,\n                                  expression: \"data.tel_no\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"tel_no\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"tel_no\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.tel_no },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"tel_no\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"tel_no\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                \" +\n                                      _vm._s(_vm.errors.first(\"tel_no\")) +\n                                      \"\\n              \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              label: \"Position\",\n                              \"label-for\": \"default-select\",\n                              \"label-cols\": 3,\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"b-row\",\n                              [\n                                _c(\n                                  \"b-col\",\n                                  { attrs: { md: \"9\" } },\n                                  [\n                                    _c(\"v-select\", {\n                                      directives: [\n                                        {\n                                          name: \"validate\",\n                                          rawName: \"v-validate\",\n                                          value: \"required\",\n                                          expression: \"'required'\"\n                                        }\n                                      ],\n                                      staticClass: \"mt-xs\",\n                                      attrs: {\n                                        options: [\n                                          \"SuperAdmin\",\n                                          \"Account Admin\",\n                                          \"Branch Admin\",\n                                          \"Front Desk Staff\"\n                                        ]\n                                      },\n                                      model: {\n                                        value: _vm.data.position,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.data, \"position\", $$v)\n                                        },\n                                        expression: \"data.position\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              label: \"Additional Access\",\n                              \"label-for\": \"default-select\",\n                              \"label-cols\": 3,\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"b-row\",\n                              [\n                                _c(\n                                  \"b-col\",\n                                  { attrs: { md: \"9\" } },\n                                  [\n                                    _c(\"v-select\", {\n                                      directives: [\n                                        {\n                                          name: \"validate\",\n                                          rawName: \"v-validate\",\n                                          value: \"required\",\n                                          expression: \"'required'\"\n                                        }\n                                      ],\n                                      staticClass: \"mt-xs\",\n                                      attrs: {\n                                        multiple: \"\",\n                                        options: [\n                                          \"Staffs Management\",\n                                          \"Clinic Management\"\n                                        ]\n                                      },\n                                      model: {\n                                        value: _vm.data.access,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.data, \"access\", $$v)\n                                        },\n                                        expression: \"data.access\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              label: \"Account\",\n                              \"label-for\": \"default-select\",\n                              \"label-cols\": 3\n                            }\n                          },\n                          [\n                            _c(\n                              \"b-row\",\n                              [\n                                _c(\n                                  \"b-col\",\n                                  { attrs: { md: \"9\" } },\n                                  [\n                                    _c(\"v-select\", {\n                                      staticClass: \"mt-xs\",\n                                      attrs: {\n                                        options: [\n                                          \"Mediviron\",\n                                          \"Pantai\",\n                                          \"Alam Medic\"\n                                        ]\n                                      },\n                                      model: {\n                                        value: _vm.data.center,\n                                        callback: function($$v) {\n                                          _vm.$set(_vm.data, \"center\", $$v)\n                                        },\n                                        expression: \"data.center\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              label: \"Password\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"password\",\n                              description:\n                                \"Dummy password auto-generated, send password reset link after creation\"\n                            }\n                          },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:6\",\n                                  expression: \"'required|min:6'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.password,\n                                  expression: \"data.password\"\n                                }\n                              ],\n                              ref: \"password\",\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"password\")\n                              },\n                              attrs: {\n                                name: \"password\",\n                                type: \"password\",\n                                id: \"password\"\n                              },\n                              domProps: { value: _vm.data.password },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"password\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"password\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                \" +\n                                      _vm._s(_vm.errors.first(\"password\")) +\n                                      \"\\n              \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"image\",\n                              description: \"1 image only\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n               Profile Image\\n              \"\n                                )\n                              ]\n                            ),\n                            _c(\"vue-dropzone\", {\n                              ref: \"myVueDropzone2\",\n                              attrs: {\n                                id: \"dropzone2\",\n                                options: _vm.dropzoneOptions2\n                              },\n                              on: { \"vdropzone-success\": _vm.successEvent2 }\n                            }),\n                            _vm.errors.has(\"minlength\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                \" +\n                                      _vm._s(_vm.errors.first(\"minlength\")) +\n                                      \"\\n              \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-action\" },\n                      [\n                        _vm.isLoading == false\n                          ? _c(\n                              \"b-button\",\n                              {\n                                staticClass: \"btn-rounded float-right\",\n                                attrs: { type: \"submit\", variant: \"danger\" }\n                              },\n                              [_vm._v(\"\\n              Submit\\n            \")]\n                            )\n                          : _vm._e(),\n                        _c(\n                          \"b-button\",\n                          {\n                            staticClass: \"btn-rounded\",\n                            attrs: { type: \"button\", variant: \"default\" },\n                            on: {\n                              click: function($event) {\n                                _vm.navigateToList()\n                              }\n                            }\n                          },\n                          [_vm._v(\"\\n              Cancel\\n            \")]\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { staticClass: \"breadcrumb\" }, [\n      _c(\"li\", { staticClass: \"breadcrumb-item\" }, [_vm._v(\"YOU ARE HERE\")]),\n      _c(\"li\", { staticClass: \"breadcrumb-item active\" }, [\n        _vm._v(\"Create New Staff\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}