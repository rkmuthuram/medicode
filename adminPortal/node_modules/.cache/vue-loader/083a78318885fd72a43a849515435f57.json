{"remainingRequest":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\kka-pj\\adminPortal\\src\\pages\\Accounts\\ClinicPreCheckIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\src\\pages\\Accounts\\ClinicPreCheckIn.vue","mtime":1597305288810},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport Vue from 'vue';\r\nimport vSelect from 'vue-select';\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vue2Dropzone from 'vue2-dropzone';\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\r\nimport { select2CountriesData, select2ShipmentData, cardTypesData } from './data';\r\nimport rns from '../../assets/cards/rns.png';\r\nimport moment from 'moment';\r\nconst { Messenger } = window;\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\nexport default {\r\n  name: 'FormWizardPage',\r\n  components: { Widget, vSelect,vueDropzone: vue2Dropzone},\r\n  data() {\r\n    return {\r\n      allSelectedProducts:[],\r\n        clinicId: this.$route.params.clinicId,\r\n        loadingWizard: false,\r\n         errorMsg: null,\r\n         count: 0,\r\n      isLoading:false,\r\n       data:{\r\n        vendor:'',\r\n        order_number:'',\r\n       attachments:[],\r\n        comments:''\r\n \r\n      },\r\n      accept:false,\r\n    progress:1,\r\n    vendorInfo:[],\r\n    medicineInfo:[],\r\n    data2:{\r\n\r\n    },\r\n    selectedMedicine:null,\r\n    data3:{\r\n\r\n    },\r\n    \r\n            dropzoneOptions: {\r\n          url: 'https://backend.medicodesolution.com/staging/precheckin/attachments/upload',\r\n          thumbnailWidth: 150,\r\n          maxFilesize: 10.0,\r\n           maxFiles: 3,\r\n          addRemoveLinks: true,\r\n          //autoProcessQueue: false\r\n          \r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n  selectedMedicine: function (medicine) {\r\n  }\r\n},\r\n  methods: {\r\n    removeFromList(){\r\n      this.selectedMedicine=null;\r\n      return Messenger().post({type:'success',message:'Item removed!',hideAfter: 3,showCloseButton:true});\r\n    },\r\n      removeFromAllProducts(index){\r\n      this.allSelectedProducts.splice(index);\r\n      return Messenger().post({type:'success',message:'Item removed!',hideAfter: 3,showCloseButton:true});\r\n    },\r\n    addToList(){\r\n      if(this.selectedMedicine.quantity==null || this.selectedMedicine.quantity==undefined || this.selectedMedicine.quantity==''){\r\n       return Messenger().post({type:'error',message:'Quantity required!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n      this.allSelectedProducts.push(this.selectedMedicine);\r\n      this.selectedMedicine=null;\r\n         console.log(this.allSelectedProducts);\r\n      return Messenger().post({type:'success',message:'Item added to list!',hideAfter: 3,showCloseButton:true});\r\n   \r\n    },\r\nasync onSearch(search, loading) {\r\n  if(escape(search)=='' || escape(search)==null || escape(search)==undefined){\r\n   return this.medicineInfo;\r\n  }\r\n    loading(true);\r\n    const response = await this.axios.get(`https://backend.medicodesolution.com/staging/search/medicines/${escape(search)}`);\r\n    this.medicineInfo = response.data.medicineInfo;\r\n    loading(false);\r\n    },\r\n     successEvent (file) {\r\n        this.data.attachments.push(file.xhr.response);\r\n      },\r\n onComplete: function(){\r\n          submit()\r\n        },\r\n        setLoading: function(value) {\r\n            this.loadingWizard = value\r\n        },\r\n        handleValidation: function(isValid, tabIndex){\r\n       //    console.log('Tab: '+tabIndex+ ' valid: '+isValid)\r\n        },\r\n        handleErrorMessage: function(errorMsg){\r\n          this.errorMsg = errorMsg\r\n        },\r\n        navigateToDashboard(){\r\n        this.$router.push({name:'Dashboard' });\r\n    },\r\n      validOne:function() {\r\n     return new Promise((resolve, reject) => {\r\n           if(this.data.vendor=='' || this.data.vendor==null){\r\n        \r\n         \treject('Select vendor to continue..')\r\n         }\r\n             if(this.data.order_number=='' || this.data.order_number==null){\r\n        \r\n         \treject('Key in order number to continue..')\r\n         }\r\n             if(this.data.attachments.length==0 || this.data.attachments==null){\r\n        \r\n         \treject('Upload Purchase Order to continue..')\r\n         }\r\n              \r\n       \r\n       else{\r\n        //  console.log('vendor:'+this.data.vendor.name+'--- order number:'+this.data.order_number+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments);\r\n          resolve(true)\r\n         }   \r\n     \r\n     })\r\n    },\r\n      validTwo:function() {\r\n     return new Promise((resolve, reject) => {\r\n           if(this.data.vendor=='' || this.data.vendor==null){\r\n        \r\n         \treject('Select vendor to continue..')\r\n         }\r\n             if(this.data.order_number=='' || this.data.order_number==null){\r\n        \r\n         \treject('Key in order number to continue..')\r\n         }\r\n             if(this.data.attachments.length==0 || this.data.attachments==null){\r\n        \r\n         \treject('Upload Purchase Order to continue..')\r\n         }\r\n             if(this.allSelectedProducts.length==0 ){\r\n        \r\n         \treject('Add at least 1 (one) product to continue..')\r\n         }\r\n             /* if(this.data.subtotal=='' || this.data.subtotal==null){\r\n        \r\n         \treject('Key in Subtotal (RM) to continue..')\r\n         }\r\n           if(this.data.tax_rate=='' || this.data.tax_rate==null){\r\n        \r\n         \treject('Key in Tax Rate (RM) to continue..')\r\n         }\r\n\r\n      if(this.data.total_amount=='' || this.data.total_amount==null){\r\n        \r\n         \treject('Key in Total Amount (RM) to continue..')\r\n         }\r\n           if(this.data.comments=='' || this.data.comments==null){\r\n        \r\n         \treject('Key in Comments..')\r\n         } */\r\n\r\n       \r\n       \r\n       else{\r\n        //  console.log('vendor:'+this.data.vendor.name+'--- order number:'+this.data.order_number+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments);\r\n          resolve(true)\r\n         }   \r\n     \r\n     })\r\n    },\r\n\r\n  submit(){\r\n    var self=this;\r\n     self.isLoading = true;\r\n    if(self.accept==false){\r\n       self.isLoading = false;\r\n      return Messenger().post({type:'error',message:'Tick confirmation checkbox to continue!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n  /* console.log('vendorId:'+self.data.vendor.id);\r\n    console.log('orderId:'+self.data.order_number);\r\n    console.log('attachments:'+self.data.attachments.join());\r\n     console.log('comments:'+self.data.comments);\r\n     console.log('allProducts'+ JSON.stringify(self.allSelectedProducts)); */\r\n\r\n   //no validation\r\n \r\n    \r\n    self.axios.post('https://backend.medicodesolution.com/staging/precheckin/submit', {\r\n          clinicId:self.clinicId,\r\n          vendorId:self.data.vendor.id,\r\n          orderId:self.data.order_number,\r\n          comments:self.data.comments,\r\n          attachments:self.data.attachments.join(),\r\n          allProducts:JSON.stringify(self.allSelectedProducts)\r\n\r\n    })\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                                   self.isLoading = false;\r\n                   Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                   return self.navigateToDashboard();\r\n         \r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                 Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n              return self.navigateToDashboard();\r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n               Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   return self.navigateToDashboard();\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                self.isLoading = false;\r\n                 Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true}); \r\n                     return self.navigateToDashboard();               \r\n                }); \r\n  },\r\n async getVendors() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/all/vendors');\r\n\r\n   this.vendorInfo = response.data.vendorInfo;\r\n   \r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n  },\r\n     mounted(){\r\n  this.getVendors();\r\n \r\n \r\n   },\r\n    created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n};\r\n",{"version":3,"sources":["ClinicPreCheckIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"ClinicPreCheckIn.vue","sourceRoot":"src\\pages\\Accounts","sourcesContent":["<template>\r\n  <b-row>\r\n    <b-col xl='8' lg='16'>\r\n      <Widget\r\n        title=\"\r\n        <div>\r\n          <h4>\r\n            New Pre Check In&nbsp;\r\n            <small></small>\r\n          </h4>\r\n          <p class='text-muted'>Follow these 4 simple steps to complete Pre Check In!</p>\r\n        </div>\"\r\n        customHeader  collapse\r\n      >\r\n         <form-wizard\r\n          shape=\"tab\"\r\n          color=\"#3498db\"\r\n          title=\"\"\r\n          subtitle=\"\"\r\n       @on-validate=\"handleValidation\"\r\n      \r\n                  @on-loading=\"setLoading\"\r\n                  @on-error=\"handleErrorMessage\"\r\n        >\r\n          <b-progress class=\"progress-xs\" variant=\"gray-light\" :value=\"progress\" :max=\"3\" />\r\n          <b-button slot=\"prev\" variant=\"primary\">\r\n            <i class=\"fa fa-caret-left\" /> Previous\r\n          </b-button>\r\n          <b-button slot=\"next\" variant=\"primary\">\r\n            Next <i class=\"fa fa-caret-right\" />\r\n          </b-button>\r\n          <b-button  slot=\"finish\" variant=\"success\" @click=\"submit\" v-if=\"isLoading==false\" >\r\n            Proceed  <i class=\"fa fa-check\" />\r\n          </b-button>\r\n           <tab-content title=\"Purchase Order Info\" :before-change=\"validOne\">\r\n              <b-form>\r\n              \r\n             <b-form-group\r\n                  label=\"Select Vendor\"\r\n                >\r\n           \r\n               <v-select :options=\"vendorInfo\"    v-model=\"data.vendor\" label=\"name\" >\r\n    <template slot=\"option\" slot-scope=\"option\">\r\n        #{{option.id}} - {{ option.name }} \r\n    </template>\r\n  </v-select>\r\n        </b-form-group>\r\n          <b-form-group\r\n                  label=\"Purchase Order Number\"\r\n                >\r\n               <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:4'\"\r\n                  \r\n                  name=\"order_number\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('order_number')}\"\r\n                  type=\"text\"\r\n               v-model=\"data.order_number\"\r\n                />\r\n        </b-form-group>\r\n            \r\n            <!--   <b-form-group\r\n                  label=\"Total Amount (RM)\"\r\n                >\r\n               <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:2'\"\r\n                  \r\n                  name=\"total_amount\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('total_amount')}\"\r\n                  type=\"number\"\r\n               v-model=\"data.total_amount\"\r\n                />\r\n        </b-form-group> -->\r\n          <b-form-group>\r\n           <label for=\"myvueDropZone\">Upload Purchase Order</label>\r\n             <label for=\"myvueDropZone\"> *upto 3 items, max 10MB size*</label>\r\n            \r\n              <vue-dropzone ref=\"myVueDropzone\" id=\"dropzone\" :options=\"dropzoneOptions\" v-on:vdropzone-success=\"successEvent\"></vue-dropzone>\r\n       \r\n              </b-form-group>\r\n            <b-form-group\r\n                  label=\"Additional Comments (optional)\"\r\n                >\r\n              <textarea-autosize\r\n                                  v-model=\"data.comments\"\r\n                                placeholder=\"\"\r\n                                :min-height=\"45\"\r\n                               \r\n                                  v-validate=\"'required|min:4'\"\r\n                             :class=\"{ 'form-control': true}\"\r\n                                id=\"comments\"\r\n                                name=\"comments\"\r\n                                />\r\n        </b-form-group>\r\n   \r\n\r\n\r\n                \r\n              </b-form>\r\n            </tab-content>\r\n           <tab-content title=\"Add Products\" :before-change=\"validTwo\"> \r\n            \r\n              <b-form>\r\n              \r\n                  <b-form-group\r\n                  label=\"Select Medicine\"\r\n                >\r\n            <v-select label=\"product_name\" :filterable=\"false\" :options=\"medicineInfo\"  @search=\"onSearch\"  v-model=\"selectedMedicine\" change=\"\" >\r\n    <template slot=\"no-options\">\r\n      type to search medicine by name / category / manufacturer..\r\n    </template>\r\n    <template slot=\"option\" slot-scope=\"option\">\r\n      <div class=\"d-center\">\r\n        {{ option.product_name }} - {{ option.manufacturer }}\r\n        </div>\r\n    </template>\r\n    <template slot=\"selected-option\" slot-scope=\"option\">\r\n      <div class=\"selected d-center\">\r\n        {{ option.product_name }}\r\n      </div>\r\n    </template>\r\n  </v-select>\r\n            <!--   <v-select    v-model=\"data2.medicine\" label=\"name\" >\r\n    <template slot=\"option\" slot-scope=\"option\">\r\n         {{ option.product_name }} - {{ option.product_category }} - {{ option.company_name }}\r\n    </template>\r\n  </v-select>-->\r\n        </b-form-group>\r\n  \r\n  <b-card class=\"mb-xlg border-0\"  v-if=\"selectedMedicine!=null\">\r\n          <span class=\"fw-semi-bold text-success\">{{selectedMedicine.product_category}}</span>\r\n          <span class=\"fw-semi-bold text-muted ml-sm\">{{selectedMedicine.product_name}}</span>\r\n          <hr />\r\n          <div class=\"d-flex justify-content-between mb-lg\">\r\n          \r\n            <span class=\"text-muted\"><small>Manufacturer :  {{selectedMedicine.manufacturer}} | Distributor : {{selectedMedicine.company_name}}</small></span>\r\n          </div>\r\n          <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{selectedMedicine.packing_type}} | {{selectedMedicine.packing_quantity}}</h3>\r\n          </div>\r\n           <b-form-group\r\n                  label=\"Quantity\"\r\n                >\r\n               <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required'\"\r\n                  name=\"qty\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('qty')}\"\r\n                  type=\"number\"\r\n               v-model=\"selectedMedicine.quantity\"\r\n                />\r\n        </b-form-group>\r\n         <b-button type=\"button\" variant=\"success\" class=\"btn-rounded\" @click=\"addToList()\" >\r\n             Verify & Add to List\r\n              </b-button> &nbsp;&nbsp;\r\n               <b-button type=\"button\" variant=\"danger\" class=\"btn-rounded\" @click=\"removeFromList()\" >\r\n             Remove Item\r\n              </b-button>\r\n\r\n                        \r\n        </b-card>\r\n\r\n       \r\n\r\n     <table  class=\"table table-bordered table-lg mt-lg mb-0\" v-if=\"allSelectedProducts.length!=0\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"hidden-sm-down\">Num.</th>\r\n                  <th>Product Name</th>\r\n                  <th>Product Type</th>\r\n                  <th class=\"hidden-sm-down\">Brand</th>\r\n                  <th class=\"\">Qty</th>\r\n                   <th class=\"\">Actions</th>\r\n                </tr>\r\n              </thead>\r\n                     <tbody>\r\n                <tr v-for=\"(product,index) in allSelectedProducts\" :key=\"product.product_name\">\r\n                  <td>{{index+1}}</td>\r\n                  <td> <b-badge variant=\"success\" class=\"text-gray-dark\">{{product.product_name}}</b-badge></td>\r\n                   <td>{{product.product_category}}</td>\r\n                    <td>{{product.manufacturer}}</td>\r\n                       <td>{{product.quantity}}</td>\r\n                       <td><b-button type=\"button\" variant=\"danger\" class=\"btn-rounded\" @click=\"removeFromAllProducts(index)\"> Remove Item </b-button></td>\r\n                </tr>\r\n              </tbody>\r\n            </table> \r\n     \r\n              </b-form>\r\n            </tab-content>\r\n            <tab-content title=\"Review & Confirmation\">\r\n            \r\n          \r\n\r\n           <table  class=\"table table-bordered table-lg mt-lg mb-0\" v-if=\"allSelectedProducts.length!=0\">\r\n              <thead>\r\n                <tr>\r\n                  <th class=\"hidden-sm-down\">Num.</th>\r\n                  <th>Product Name</th>\r\n                  <th>Product Type</th>\r\n                  <th class=\"hidden-sm-down\">Brand</th>\r\n                  <th class=\"\">Qty</th>\r\n                 \r\n                </tr>\r\n              </thead>\r\n                     <tbody>\r\n                <tr v-for=\"(product,index) in allSelectedProducts\" :key=\"product.product_name\">\r\n                  <td>{{index+1}}</td>\r\n                  <td> <b-badge variant=\"success\" class=\"text-gray-dark\">{{product.product_name}}</b-badge></td>\r\n                   <td>{{product.product_category}}</td>\r\n                    <td>{{product.manufacturer}}</td>\r\n                       <td>{{product.quantity}}</td>\r\n                   \r\n                </tr>\r\n              </tbody>\r\n            </table> \r\n\r\n       <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.vendor.name}}</h3>\r\n            Vendor\r\n          </div>\r\n           <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.order_number}}</h3>\r\n            Purchase Order Number \r\n          </div>\r\n           <div class=\"mb-lg\">\r\n            <h3 class=\"text-success mb-0\">{{data.comments}}</h3>\r\n            Comments\r\n          </div>\r\n\r\n      \r\n              <b-form-group>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"checkbox-default\"\r\n                    v-model=\"accept\"\r\n                  />\r\n                   <label for=\"checkbox-default\">I have reviewed the contents and am ready to proceed</label>\r\n                </b-form-group>\r\n            </tab-content>\r\n            <div class=\"loader\" v-if=\"loadingWizard\"></div>\r\n    <div v-if=\"errorMsg\">\r\n      <span class=\"error\">{{errorMsg}}</span>\r\n    </div>\r\n        </form-wizard>\r\n      </Widget>\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n<style>\r\nspan.error{\r\n  color:#e74c3c;\r\n  font-size:20px;\r\n  display:flex;\r\n  justify-content:center;\r\n}\r\n</style>\r\n<script>\r\n\r\nimport Vue from 'vue';\r\nimport vSelect from 'vue-select';\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vue2Dropzone from 'vue2-dropzone';\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\r\nimport { select2CountriesData, select2ShipmentData, cardTypesData } from './data';\r\nimport rns from '../../assets/cards/rns.png';\r\nimport moment from 'moment';\r\nconst { Messenger } = window;\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\nexport default {\r\n  name: 'FormWizardPage',\r\n  components: { Widget, vSelect,vueDropzone: vue2Dropzone},\r\n  data() {\r\n    return {\r\n      allSelectedProducts:[],\r\n        clinicId: this.$route.params.clinicId,\r\n        loadingWizard: false,\r\n         errorMsg: null,\r\n         count: 0,\r\n      isLoading:false,\r\n       data:{\r\n        vendor:'',\r\n        order_number:'',\r\n       attachments:[],\r\n        comments:''\r\n \r\n      },\r\n      accept:false,\r\n    progress:1,\r\n    vendorInfo:[],\r\n    medicineInfo:[],\r\n    data2:{\r\n\r\n    },\r\n    selectedMedicine:null,\r\n    data3:{\r\n\r\n    },\r\n    \r\n            dropzoneOptions: {\r\n          url: 'https://backend.medicodesolution.com/staging/precheckin/attachments/upload',\r\n          thumbnailWidth: 150,\r\n          maxFilesize: 10.0,\r\n           maxFiles: 3,\r\n          addRemoveLinks: true,\r\n          //autoProcessQueue: false\r\n          \r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n  selectedMedicine: function (medicine) {\r\n  }\r\n},\r\n  methods: {\r\n    removeFromList(){\r\n      this.selectedMedicine=null;\r\n      return Messenger().post({type:'success',message:'Item removed!',hideAfter: 3,showCloseButton:true});\r\n    },\r\n      removeFromAllProducts(index){\r\n      this.allSelectedProducts.splice(index);\r\n      return Messenger().post({type:'success',message:'Item removed!',hideAfter: 3,showCloseButton:true});\r\n    },\r\n    addToList(){\r\n      if(this.selectedMedicine.quantity==null || this.selectedMedicine.quantity==undefined || this.selectedMedicine.quantity==''){\r\n       return Messenger().post({type:'error',message:'Quantity required!',hideAfter: 3,showCloseButton:true});\r\n      }\r\n      this.allSelectedProducts.push(this.selectedMedicine);\r\n      this.selectedMedicine=null;\r\n         console.log(this.allSelectedProducts);\r\n      return Messenger().post({type:'success',message:'Item added to list!',hideAfter: 3,showCloseButton:true});\r\n   \r\n    },\r\nasync onSearch(search, loading) {\r\n  if(escape(search)=='' || escape(search)==null || escape(search)==undefined){\r\n   return this.medicineInfo;\r\n  }\r\n    loading(true);\r\n    const response = await this.axios.get(`https://backend.medicodesolution.com/staging/search/medicines/${escape(search)}`);\r\n    this.medicineInfo = response.data.medicineInfo;\r\n    loading(false);\r\n    },\r\n     successEvent (file) {\r\n        this.data.attachments.push(file.xhr.response);\r\n      },\r\n onComplete: function(){\r\n          submit()\r\n        },\r\n        setLoading: function(value) {\r\n            this.loadingWizard = value\r\n        },\r\n        handleValidation: function(isValid, tabIndex){\r\n       //    console.log('Tab: '+tabIndex+ ' valid: '+isValid)\r\n        },\r\n        handleErrorMessage: function(errorMsg){\r\n          this.errorMsg = errorMsg\r\n        },\r\n        navigateToDashboard(){\r\n        this.$router.push({name:'Dashboard' });\r\n    },\r\n      validOne:function() {\r\n     return new Promise((resolve, reject) => {\r\n           if(this.data.vendor=='' || this.data.vendor==null){\r\n        \r\n         \treject('Select vendor to continue..')\r\n         }\r\n             if(this.data.order_number=='' || this.data.order_number==null){\r\n        \r\n         \treject('Key in order number to continue..')\r\n         }\r\n             if(this.data.attachments.length==0 || this.data.attachments==null){\r\n        \r\n         \treject('Upload Purchase Order to continue..')\r\n         }\r\n              \r\n       \r\n       else{\r\n        //  console.log('vendor:'+this.data.vendor.name+'--- order number:'+this.data.order_number+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments);\r\n          resolve(true)\r\n         }   \r\n     \r\n     })\r\n    },\r\n      validTwo:function() {\r\n     return new Promise((resolve, reject) => {\r\n           if(this.data.vendor=='' || this.data.vendor==null){\r\n        \r\n         \treject('Select vendor to continue..')\r\n         }\r\n             if(this.data.order_number=='' || this.data.order_number==null){\r\n        \r\n         \treject('Key in order number to continue..')\r\n         }\r\n             if(this.data.attachments.length==0 || this.data.attachments==null){\r\n        \r\n         \treject('Upload Purchase Order to continue..')\r\n         }\r\n             if(this.allSelectedProducts.length==0 ){\r\n        \r\n         \treject('Add at least 1 (one) product to continue..')\r\n         }\r\n             /* if(this.data.subtotal=='' || this.data.subtotal==null){\r\n        \r\n         \treject('Key in Subtotal (RM) to continue..')\r\n         }\r\n           if(this.data.tax_rate=='' || this.data.tax_rate==null){\r\n        \r\n         \treject('Key in Tax Rate (RM) to continue..')\r\n         }\r\n\r\n      if(this.data.total_amount=='' || this.data.total_amount==null){\r\n        \r\n         \treject('Key in Total Amount (RM) to continue..')\r\n         }\r\n           if(this.data.comments=='' || this.data.comments==null){\r\n        \r\n         \treject('Key in Comments..')\r\n         } */\r\n\r\n       \r\n       \r\n       else{\r\n        //  console.log('vendor:'+this.data.vendor.name+'--- order number:'+this.data.order_number+'--- attachments:'+ JSON.stringify(this.data.attachments) + '--- comments:'+this.data.comments);\r\n          resolve(true)\r\n         }   \r\n     \r\n     })\r\n    },\r\n\r\n  submit(){\r\n    var self=this;\r\n     self.isLoading = true;\r\n    if(self.accept==false){\r\n       self.isLoading = false;\r\n      return Messenger().post({type:'error',message:'Tick confirmation checkbox to continue!',hideAfter: 3,showCloseButton:true});\r\n    }\r\n  /* console.log('vendorId:'+self.data.vendor.id);\r\n    console.log('orderId:'+self.data.order_number);\r\n    console.log('attachments:'+self.data.attachments.join());\r\n     console.log('comments:'+self.data.comments);\r\n     console.log('allProducts'+ JSON.stringify(self.allSelectedProducts)); */\r\n\r\n   //no validation\r\n \r\n    \r\n    self.axios.post('https://backend.medicodesolution.com/staging/precheckin/submit', {\r\n          clinicId:self.clinicId,\r\n          vendorId:self.data.vendor.id,\r\n          orderId:self.data.order_number,\r\n          comments:self.data.comments,\r\n          attachments:self.data.attachments.join(),\r\n          allProducts:JSON.stringify(self.allSelectedProducts)\r\n\r\n    })\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                                   self.isLoading = false;\r\n                   Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                   return self.navigateToDashboard();\r\n         \r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                 Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n              return self.navigateToDashboard();\r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n               Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   return self.navigateToDashboard();\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                self.isLoading = false;\r\n                 Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true}); \r\n                     return self.navigateToDashboard();               \r\n                }); \r\n  },\r\n async getVendors() {\r\n  try {\r\n   const response = await this.axios.get('https://backend.medicodesolution.com/staging/all/vendors');\r\n\r\n   this.vendorInfo = response.data.vendorInfo;\r\n   \r\n \r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n  },\r\n     mounted(){\r\n  this.getVendors();\r\n \r\n \r\n   },\r\n    created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n};\r\n</script>\r\n\r\n<style src=\"./ClinicPreCheckIn.scss\" lang=\"scss\" />\r\n"]}]}