{"remainingRequest":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\sunrisers\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\medicode\\adminPortal\\src\\pages\\Accounts\\ClinicAccountIPCreate.vue?vue&type=template&id=46da827a&","dependencies":[{"path":"F:\\sunrisers\\medicode\\adminPortal\\src\\pages\\Accounts\\ClinicAccountIPCreate.vue","mtime":1597210918855},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1591157760591},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\medicode\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _vm._m(0),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-col\",\n            { attrs: { lg: \"8\", xs: \"12\" } },\n            [\n              _c(\n                \"Widget\",\n                {\n                  attrs: {\n                    title:\n                      \"<h5>        \\n          <small> Fill up & click Submit</small>\\n        </h5>\",\n                    customHeader: \"\"\n                  }\n                },\n                [\n                  _c(\"b-form\", { on: { submit: _vm.onSubmit } }, [\n                    _c(\n                      \"fieldset\",\n                      [\n                        _c(\"legend\"),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"ipv4\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n               IPv4 Address\\n              \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:8\",\n                                  expression: \"'required|min:8'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.ipv4,\n                                  expression: \"data.ipv4\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"ipv4\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"ipv4\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.ipv4 },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"ipv4\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"ipv4\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                \" +\n                                      _vm._s(_vm.errors.first(\"ipv4\")) +\n                                      \"\\n              \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"alias\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [_vm._v(\"\\n               Alias\\n              \")]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:5\",\n                                  expression: \"'required|min:5'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.alias,\n                                  expression: \"data.alias\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"alias\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"alias\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.alias },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"alias\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"alias\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                \" +\n                                      _vm._s(_vm.errors.first(\"alias\")) +\n                                      \"\\n              \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\n                          \"b-form-group\",\n                          {\n                            attrs: {\n                              horizontal: \"\",\n                              \"label-cols\": 3,\n                              \"label-breakpoint\": \"md\",\n                              \"label-for\": \"desc\",\n                              description: \"\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { attrs: { slot: \"label\" }, slot: \"label\" },\n                              [\n                                _vm._v(\n                                  \"\\n               Description\\n              \"\n                                )\n                              ]\n                            ),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|min:5\",\n                                  expression: \"'required|min:5'\"\n                                },\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.data.description,\n                                  expression: \"data.description\"\n                                }\n                              ],\n                              class: {\n                                \"form-control\": true,\n                                \"is-invalid\": _vm.errors.has(\"desc\")\n                              },\n                              attrs: {\n                                \"data-vv-validate-on\": \"change\",\n                                name: \"desc\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.data.description },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.data,\n                                    \"description\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.errors.has(\"desc\")\n                              ? _c(\"span\", { staticClass: \"text-danger\" }, [\n                                  _vm._v(\n                                    \"\\n                \" +\n                                      _vm._s(_vm.errors.first(\"desc\")) +\n                                      \"\\n              \"\n                                  )\n                                ])\n                              : _vm._e()\n                          ]\n                        ),\n                        _c(\"br\")\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-action\" },\n                      [\n                        _vm.isLoading == false\n                          ? _c(\n                              \"b-button\",\n                              {\n                                staticClass: \"btn-rounded float-right\",\n                                attrs: { type: \"submit\", variant: \"danger\" }\n                              },\n                              [_vm._v(\"\\n              Submit\\n            \")]\n                            )\n                          : _vm._e(),\n                        _c(\n                          \"b-button\",\n                          {\n                            staticClass: \"btn-rounded\",\n                            attrs: { type: \"button\", variant: \"default\" },\n                            on: {\n                              click: function($event) {\n                                _vm.navigateToList()\n                              }\n                            }\n                          },\n                          [_vm._v(\"\\n              Cancel\\n            \")]\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ol\", { staticClass: \"breadcrumb\" }, [\n      _c(\"li\", { staticClass: \"breadcrumb-item\" }, [_vm._v(\"YOU ARE HERE\")]),\n      _c(\"li\", { staticClass: \"breadcrumb-item active\" }, [\n        _vm._v(\"Approve New IPv4\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}