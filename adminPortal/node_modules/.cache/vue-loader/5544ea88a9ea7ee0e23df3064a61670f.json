{"remainingRequest":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\sunrisers\\kka-pj\\adminPortal\\src\\pages\\Accounts\\ClinicAccountIPCreate.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\src\\pages\\Accounts\\ClinicAccountIPCreate.vue","mtime":1597210918855},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\babel-loader\\lib\\index.js","mtime":1591157735766},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591157758729},{"path":"F:\\sunrisers\\kka-pj\\adminPortal\\node_modules\\vue-loader\\lib\\index.js","mtime":1591157760591}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vSelect from 'vue-select';\r\nimport vue2Dropzone from 'vue2-dropzone';\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\r\nconst { Messenger } = window;\r\n\r\n/* eslint-disable */\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\n\r\nexport default {\r\n  name: 'FormValidation',\r\n  components: { Widget,vSelect },\r\n  data() {\r\n    return {\r\n      clinicId: this.$route.params.clinicId,\r\n      data:{\r\n        ipv4:'',\r\n        alias:'',\r\n        description:'',\r\n       \r\n      },\r\n      locationClasses: 'messenger-fixed messenger-on-top messenger-on-right',\r\n      isLoading:false,\r\n    };\r\n  },\r\n  methods: {\r\n    navigateToList(){\r\n    this.$router.push({name:'ClinicAccountView', params: { clinicId :this.clinicId}});\r\n    },\r\n    onSubmit(e) {\r\n       var self = this;\r\n       self.isLoading = true;\r\n      e.preventDefault();\r\n      self.$validator.validateAll().then((result) => {\r\n\t\t  if (result) {\r\n                self.axios.post('https://backend.medicodesolution.com/staging/clinic_ipv4', {\r\n                  \r\n        clinicId:self.clinicId,\r\n        ipv4:self.data.ipv4,\r\n        alias:self.data.alias,\r\n        description:self.data.description,\r\n                })\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                return self.navigateToList();\r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n          \r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n                 return Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                  self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true});                \r\n                });   \r\n\t\t  }\r\n                  if(!result){\r\n                    self.isLoading = false;\r\n        \t          return;\r\n                  }\r\n\t\t});\r\n    },\r\n\r\n\r\n  },\r\n  created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n};\r\n",{"version":3,"sources":["ClinicAccountIPCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+GA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"ClinicAccountIPCreate.vue","sourceRoot":"src\\pages\\Accounts","sourcesContent":["<template>\r\n  <div>\r\n    <ol class=\"breadcrumb\">\r\n      <li class=\"breadcrumb-item\">YOU ARE HERE</li>\r\n      <li class=\"breadcrumb-item active\">Approve New IPv4</li>\r\n    </ol>\r\n\r\n\r\n    <b-row>\r\n\r\n      <b-col lg='8' xs='12'>\r\n        <Widget\r\n          title=\"<h5>        \r\n            <small> Fill up & click Submit</small>\r\n          </h5>\"\r\n          customHeader \r\n        >\r\n          <b-form @submit=\"onSubmit\">\r\n            <fieldset>\r\n              <legend>\r\n               \r\n              </legend>\r\n                <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"ipv4\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                 IPv4 Address\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:8'\"\r\n                  name=\"ipv4\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('ipv4')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.ipv4\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('ipv4')\">\r\n                  {{ errors.first('ipv4') }}\r\n                </span>\r\n              </b-form-group>\r\n                   \r\n\r\n    <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"alias\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                 Alias\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:5'\"\r\n                  name=\"alias\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('alias')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.alias\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('alias')\">\r\n                  {{ errors.first('alias') }}\r\n                </span>\r\n              </b-form-group>\r\n                <b-form-group\r\n                horizontal\r\n                :label-cols=\"3\"\r\n                label-breakpoint=\"md\"\r\n                label-for=\"desc\"\r\n                description=\"\"\r\n              >\r\n                <div slot=\"label\">\r\n                 Description\r\n                </div>\r\n                <input\r\n                  data-vv-validate-on=\"change\"\r\n                  v-validate=\"'required|min:5'\"\r\n                  name=\"desc\"\r\n                  :class=\"{ 'form-control': true, 'is-invalid': errors.has('desc')}\"\r\n                  type=\"text\"\r\n                v-model=\"data.description\"\r\n                />\r\n                <span class=\"text-danger\" v-if=\"errors.has('desc')\">\r\n                  {{ errors.first('desc') }}\r\n                </span>\r\n              </b-form-group>\r\n       \r\n               \r\n               <br>\r\n                     \r\n            </fieldset>\r\n            <div class=\"form-action\">\r\n              <b-button type=\"submit\" variant=\"danger\" class=\"btn-rounded float-right\" v-if=\"isLoading==false\">\r\n                Submit\r\n              </b-button>\r\n              <b-button type=\"button\" variant=\"default\" class=\"btn-rounded\" @click=\"navigateToList()\" >\r\n                Cancel\r\n              </b-button>\r\n            </div>\r\n          </b-form>\r\n        </Widget>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'imports-loader?$=jquery,this=>window!messenger/build/js/messenger'; // eslint-disable-line\r\nimport Widget from '@/components/Widget/Widget';\r\nimport vSelect from 'vue-select';\r\nimport vue2Dropzone from 'vue2-dropzone';\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css';\r\nconst { Messenger } = window;\r\n\r\n/* eslint-disable */\r\nfunction initializationMessengerCode() {\r\n  (function () {\r\n    let $,\r\n      FlatMessage,\r\n      spinner_template,\r\n      __hasProp = {}.hasOwnProperty,\r\n      __extends = function (child, parent) {\r\n        for (const key in parent) {\r\n          if (__hasProp.call(parent, key)) child[key] = parent[key];\r\n        }\r\n\r\n        function ctor() {\r\n          this.constructor = child;\r\n        }\r\n\r\n        ctor.prototype = parent.prototype;\r\n        child.prototype = new ctor();\r\n        child.__super__ = parent.prototype;\r\n        return child;\r\n      };\r\n\r\n    $ = jQuery;\r\n\r\n    spinner_template = '<div class=\"messenger-spinner\">\\n    <span class=\"messenger-spinner-side messenger-spinner-side-left\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n    <span class=\"messenger-spinner-side messenger-spinner-side-right\">\\n        <span class=\"messenger-spinner-fill\"></span>\\n    </span>\\n</div>';\r\n\r\n    FlatMessage = (function (_super) {\r\n      __extends(FlatMessage, _super);\r\n\r\n      function FlatMessage() {\r\n        return FlatMessage.__super__.constructor.apply(this, arguments);\r\n      }\r\n\r\n      FlatMessage.prototype.template = function (opts) {\r\n        let $message;\r\n        $message = FlatMessage.__super__.template.apply(this, arguments);\r\n        $message.append($(spinner_template));\r\n        return $message;\r\n      };\r\n\r\n      return FlatMessage;\r\n    }(Messenger.Message));\r\n\r\n    Messenger.themes.air = {\r\n      Message: FlatMessage,\r\n    };\r\n  }).call(window);\r\n}\r\n/* eslint-enable */\r\n\r\nexport default {\r\n  name: 'FormValidation',\r\n  components: { Widget,vSelect },\r\n  data() {\r\n    return {\r\n      clinicId: this.$route.params.clinicId,\r\n      data:{\r\n        ipv4:'',\r\n        alias:'',\r\n        description:'',\r\n       \r\n      },\r\n      locationClasses: 'messenger-fixed messenger-on-top messenger-on-right',\r\n      isLoading:false,\r\n    };\r\n  },\r\n  methods: {\r\n    navigateToList(){\r\n    this.$router.push({name:'ClinicAccountView', params: { clinicId :this.clinicId}});\r\n    },\r\n    onSubmit(e) {\r\n       var self = this;\r\n       self.isLoading = true;\r\n      e.preventDefault();\r\n      self.$validator.validateAll().then((result) => {\r\n\t\t  if (result) {\r\n                self.axios.post('https://backend.medicodesolution.com/staging/clinic_ipv4', {\r\n                  \r\n        clinicId:self.clinicId,\r\n        ipv4:self.data.ipv4,\r\n        alias:self.data.alias,\r\n        description:self.data.description,\r\n                })\r\n                .then(function (response) {\r\n                if(response.status == 200 && response.data.success){\r\n                Messenger().post({message:response.data.success, hideAfter: 3,showCloseButton:true});\r\n                return self.navigateToList();\r\n                }\r\n                else {\r\n                  if(response.data.error){\r\n                    self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :response.data.error, hideAfter: 3,showCloseButton:true});\r\n          \r\n                  }\r\n                 else {\r\n                   self.isLoading = false;\r\n                 return Messenger().post({ type:'error',message :response.error, hideAfter: 3,showCloseButton:true});\r\n                   }\r\n                }\r\n                })\r\n                .catch(function (error) {\r\n                  self.isLoading = false;\r\n                  return Messenger().post({ type:'error',message :error, hideAfter: 3,showCloseButton:true});                \r\n                });   \r\n\t\t  }\r\n                  if(!result){\r\n                    self.isLoading = false;\r\n        \t          return;\r\n                  }\r\n\t\t});\r\n    },\r\n\r\n\r\n  },\r\n  created() {\r\n    initializationMessengerCode();\r\n    Messenger.options = {\r\n      extraClasses: this.locationClasses,\r\n      theme: 'air',\r\n      showCloseButton: true,\r\n    };\r\n  \r\n  },\r\n};\r\n</script>\r\n"]}]}